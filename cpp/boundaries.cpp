#include "boundaries.h"

bool isIntersection(Coordinate candidate, Line segment) {
    const double parametrizedDistanceToYIntercept = (candidate.longitude - segment.startInclusive.longitude) / (segment.endExclusive.longitude - segment.startInclusive.longitude);
    if (parametrizedDistanceToYIntercept < 0 || parametrizedDistanceToYIntercept >= 1) return false;
    const double yIntercept = segment.startInclusive.latitude + parametrizedDistanceToYIntercept * (segment.endExclusive.latitude - segment.startInclusive.latitude);
    return (yIntercept >= candidate.latitude);
}

bool isInUS(Coordinate candidate) {
    if (candidate.longitude < -85.15625) {
        if (candidate.longitude < -97.8125) {
            if (candidate.longitude < -119.609375) {
                if (candidate.longitude < -122.861328125) {
                    if (candidate.longitude < -124.0478515625) {
                        if (candidate.longitude < -124.234619140625) {
                            return isIntersection(candidate, {{48.386012, -124.72583900000001}, {48.390691, -124.653243}}) ^ isIntersection(candidate, {{48.390691, -124.653243}, {48.353594, -124.54625899999999}}) ^ isIntersection(candidate, {{48.353594, -124.54625899999999}, {48.284698999999996, -124.380874}}) ^ isIntersection(candidate, {{48.284698999999996, -124.380874}, {48.264773, -124.25088199999999}}) ^ isIntersection(candidate, {{48.264773, -124.25088199999999}, {48.216882999999996, -124.101773}}) ^ isIntersection(candidate, {{40.130542, -124.187874}, {40.184277, -124.258405}}) ^ isIntersection(candidate, {{40.184277, -124.258405}, {40.243978999999996, -124.34307}}) ^ isIntersection(candidate, {{40.243978999999996, -124.34307}, {40.260974, -124.363414}}) ^ isIntersection(candidate, {{40.260974, -124.363414}, {40.331424999999996, -124.353124}}) ^ isIntersection(candidate, {{40.331424999999996, -124.353124}, {40.374855, -124.365357}}) ^ isIntersection(candidate, {{40.374855, -124.365357}, {40.438075999999995, -124.409591}}) ^ isIntersection(candidate, {{40.438075999999995, -124.409591}, {40.504954, -124.387023}}) ^ isIntersection(candidate, {{40.504954, -124.387023}, {40.659642999999996, -124.301355}}) ^ isIntersection(candidate, {{40.659642999999996, -124.301355}, {40.843618, -124.176715}}) ^ isIntersection(candidate, {{41.736079, -124.19104}, {41.792300000000004, -124.245027}}) ^ isIntersection(candidate, {{41.792300000000004, -124.245027}, {41.846432, -124.219592}}) ^ isIntersection(candidate, {{41.99846, -124.21160499999999}, {42.045553, -124.270464}}) ^ isIntersection(candidate, {{42.045553, -124.270464}, {42.067864, -124.314289}}) ^ isIntersection(candidate, {{42.067864, -124.314289}, {42.129796, -124.351535}}) ^ isIntersection(candidate, {{42.129796, -124.351535}, {42.180752, -124.361009}}) ^ isIntersection(candidate, {{42.180752, -124.361009}, {42.22716, -124.383633}}) ^ isIntersection(candidate, {{42.22716, -124.383633}, {42.250547, -124.410982}}) ^ isIntersection(candidate, {{42.250547, -124.410982}, {42.307431, -124.410556}}) ^ isIntersection(candidate, {{42.307431, -124.410556}, {42.351873999999995, -124.425554}}) ^ isIntersection(candidate, {{42.351873999999995, -124.425554}, {42.440163, -124.435105}}) ^ isIntersection(candidate, {{42.440163, -124.435105}, {42.539927999999996, -124.39906500000001}}) ^ isIntersection(candidate, {{42.539927999999996, -124.39906500000001}, {42.597518, -124.40091799999999}}) ^ isIntersection(candidate, {{42.597518, -124.40091799999999}, {42.657934, -124.413119}}) ^ isIntersection(candidate, {{42.657934, -124.413119}, {42.675798, -124.45074}}) ^ isIntersection(candidate, {{42.675798, -124.45074}, {42.689909, -124.448418}}) ^ isIntersection(candidate, {{42.689909, -124.448418}, {42.734746, -124.510017}}) ^ isIntersection(candidate, {{42.734746, -124.510017}, {42.840568, -124.552441}}) ^ isIntersection(candidate, {{42.840568, -124.552441}, {42.951495, -124.480938}}) ^ isIntersection(candidate, {{42.951495, -124.480938}, {42.9543224376774, -124.479882226932}}) ^ isIntersection(candidate, {{42.9543224376774, -124.479882226932}, {43.071312, -124.43619799999999}}) ^ isIntersection(candidate, {{43.071312, -124.43619799999999}, {43.159853, -124.41139}}) ^ isIntersection(candidate, {{43.159853, -124.41139}, {43.223908, -124.395607}}) ^ isIntersection(candidate, {{43.223908, -124.395607}, {43.270167, -124.38246}}) ^ isIntersection(candidate, {{43.270167, -124.38246}, {43.302121, -124.400404}}) ^ isIntersection(candidate, {{43.302121, -124.400404}, {43.342667, -124.353332}}) ^ isIntersection(candidate, {{43.342667, -124.353332}, {43.436296, -124.286896}}) ^ isIntersection(candidate, {{43.436296, -124.286896}, {43.55713, -124.23353399999999}}) ^ isIntersection(candidate, {{47.174, -124.195893}, {47.287287, -124.236349}}) ^ isIntersection(candidate, {{47.287287, -124.236349}, {47.355559, -124.319379}}) ^ isIntersection(candidate, {{47.355559, -124.319379}, {47.533537083052096, -124.353615670887}}) ^ isIntersection(candidate, {{47.533537083052096, -124.353615670887}, {47.545697999999994, -124.355955}}) ^ isIntersection(candidate, {{47.545697999999994, -124.355955}, {47.691199, -124.412106}}) ^ isIntersection(candidate, {{47.691199, -124.412106}, {47.766906999999996, -124.471687}}) ^ isIntersection(candidate, {{47.766906999999996, -124.471687}, {47.836967, -124.539927}}) ^ isIntersection(candidate, {{47.836967, -124.539927}, {47.8805724417486, -124.613108656052}}) ^ isIntersection(candidate, {{47.8805724417486, -124.613108656052}, {47.887963, -124.625512}}) ^ isIntersection(candidate, {{47.887963, -124.625512}, {47.964414, -124.672427}}) ^ isIntersection(candidate, {{47.964414, -124.672427}, {48.049237999999995, -124.685393}}) ^ isIntersection(candidate, {{48.049237999999995, -124.685393}, {48.098656999999996, -124.687101}}) ^ isIntersection(candidate, {{48.098656999999996, -124.687101}, {48.153185, -124.72172499999999}}) ^ isIntersection(candidate, {{48.153185, -124.72172499999999}, {48.219744999999996, -124.690389}}) ^ isIntersection(candidate, {{48.219744999999996, -124.690389}, {48.296352999999996, -124.669265}}) ^ isIntersection(candidate, {{48.296352999999996, -124.669265}, {48.386012, -124.72583900000001}});
                        } else {
                            return isIntersection(candidate, {{48.264773, -124.25088199999999}, {48.216882999999996, -124.101773}}) ^ isIntersection(candidate, {{48.216882999999996, -124.101773}, {48.177747, -124.050734}}) ^ isIntersection(candidate, {{48.177747, -124.050734}, {48.160621, -123.880068}}) ^ isIntersection(candidate, {{40.013318999999996, -124.035904}, {40.021307, -124.068908}}) ^ isIntersection(candidate, {{40.021307, -124.068908}, {40.078441999999995, -124.087086}}) ^ isIntersection(candidate, {{40.078441999999995, -124.087086}, {40.11635, -124.139952}}) ^ isIntersection(candidate, {{40.11635, -124.139952}, {40.130542, -124.187874}}) ^ isIntersection(candidate, {{40.130542, -124.187874}, {40.184277, -124.258405}}) ^ isIntersection(candidate, {{40.659642999999996, -124.301355}, {40.843618, -124.176715}}) ^ isIntersection(candidate, {{40.843618, -124.176715}, {40.989263, -124.118147}}) ^ isIntersection(candidate, {{40.989263, -124.118147}, {41.048504, -124.125448}}) ^ isIntersection(candidate, {{41.048504, -124.125448}, {41.087159, -124.154513}}) ^ isIntersection(candidate, {{41.087159, -124.154513}, {41.138675, -124.163988}}) ^ isIntersection(candidate, {{41.138675, -124.163988}, {41.189726, -124.122677}}) ^ isIntersection(candidate, {{41.189726, -124.122677}, {41.287695, -124.092284}}) ^ isIntersection(candidate, {{41.287695, -124.092284}, {41.439578999999995, -124.063076}}) ^ isIntersection(candidate, {{41.439578999999995, -124.063076}, {41.464736188490896, -124.067473659422}}) ^ isIntersection(candidate, {{41.464736188490896, -124.067473659422}, {41.547761, -124.081987}}) ^ isIntersection(candidate, {{41.547761, -124.081987}, {41.628848999999995, -124.116037}}) ^ isIntersection(candidate, {{41.628848999999995, -124.116037}, {41.709284, -124.143479}}) ^ isIntersection(candidate, {{41.709284, -124.143479}, {41.728801, -124.154246}}) ^ isIntersection(candidate, {{41.728801, -124.154246}, {41.736079, -124.19104}}) ^ isIntersection(candidate, {{41.736079, -124.19104}, {41.792300000000004, -124.245027}}) ^ isIntersection(candidate, {{41.792300000000004, -124.245027}, {41.846432, -124.219592}}) ^ isIntersection(candidate, {{41.846432, -124.219592}, {41.940964, -124.203402}}) ^ isIntersection(candidate, {{41.940964, -124.203402}, {41.99846, -124.21160499999999}}) ^ isIntersection(candidate, {{41.99846, -124.21160499999999}, {42.045553, -124.270464}}) ^ isIntersection(candidate, {{43.436296, -124.286896}, {43.55713, -124.23353399999999}}) ^ isIntersection(candidate, {{43.55713, -124.23353399999999}, {43.610931759189, -124.219057676906}}) ^ isIntersection(candidate, {{43.610931759189, -124.219057676906}, {43.706084999999995, -124.193455}}) ^ isIntersection(candidate, {{43.706084999999995, -124.193455}, {43.8637205015216, -124.16020731587601}}) ^ isIntersection(candidate, {{43.8637205015216, -124.16020731587601}, {43.910849999999996, -124.150267}}) ^ isIntersection(candidate, {{43.910849999999996, -124.150267}, {44.104442, -124.122406}}) ^ isIntersection(candidate, {{44.104442, -124.122406}, {44.235071, -124.111054}}) ^ isIntersection(candidate, {{44.235071, -124.111054}, {44.276194, -124.114370074258}}) ^ isIntersection(candidate, {{44.276194, -124.114370074258}, {44.286486, -124.1152}}) ^ isIntersection(candidate, {{44.286486, -124.1152}, {44.415611, -124.084401}}) ^ isIntersection(candidate, {{44.415611, -124.084401}, {44.501123, -124.083601}}) ^ isIntersection(candidate, {{44.501123, -124.083601}, {44.632504, -124.065008}}) ^ isIntersection(candidate, {{44.632504, -124.065008}, {44.703177, -124.063406}}) ^ isIntersection(candidate, {{44.703177, -124.063406}, {44.798106999999995, -124.074066}}) ^ isIntersection(candidate, {{44.798106999999995, -124.074066}, {44.835333, -124.063155}}) ^ isIntersection(candidate, {{44.835333, -124.063155}, {44.949825, -124.023834}}) ^ isIntersection(candidate, {{46.291398, -123.969427}, {46.267239, -124.080671}}) ^ isIntersection(candidate, {{46.267239, -124.080671}, {46.326899, -124.064624}}) ^ isIntersection(candidate, {{46.326899, -124.064624}, {46.493338, -124.057024}}) ^ isIntersection(candidate, {{46.493338, -124.057024}, {46.630651, -124.069583}}) ^ isIntersection(candidate, {{46.630651, -124.069583}, {46.636364, -123.960642}}) ^ isIntersection(candidate, {{46.713971, -123.975157}, {46.735003, -124.080983}}) ^ isIntersection(candidate, {{46.735003, -124.080983}, {46.794084999999995, -124.09679666790501}}) ^ isIntersection(candidate, {{46.794084999999995, -124.09679666790501}, {46.810655999999994, -124.101232}}) ^ isIntersection(candidate, {{46.810655999999994, -124.101232}, {46.905533999999996, -124.138225}}) ^ isIntersection(candidate, {{46.905533999999996, -124.138225}, {46.926356999999996, -124.180111}}) ^ isIntersection(candidate, {{46.926356999999996, -124.180111}, {46.994507999999996, -124.169113}}) ^ isIntersection(candidate, {{46.994507999999996, -124.169113}, {47.157858999999995, -124.18854400000001}}) ^ isIntersection(candidate, {{47.157858999999995, -124.18854400000001}, {47.174, -124.195893}}) ^ isIntersection(candidate, {{47.174, -124.195893}, {47.287287, -124.236349}});
                        }
                    } else {
                        if (candidate.longitude < -123.7237548828125) {
                            return isIntersection(candidate, {{48.177747, -124.050734}, {48.160621, -123.880068}}) ^ isIntersection(candidate, {{48.160621, -123.880068}, {48.162800000000004, -123.728736}}) ^ isIntersection(candidate, {{48.162800000000004, -123.728736}, {48.162715, -123.672445}}) ^ isIntersection(candidate, {{38.91323, -123.71054}, {38.954994, -123.73289199999999}}) ^ isIntersection(candidate, {{38.954994, -123.73289199999999}, {39.021293, -123.69074}}) ^ isIntersection(candidate, {{39.125327, -123.72150500000001}, {39.193657, -123.765891}}) ^ isIntersection(candidate, {{39.193657, -123.765891}, {39.271355, -123.798991}}) ^ isIntersection(candidate, {{39.271355, -123.798991}, {39.360814, -123.825331}}) ^ isIntersection(candidate, {{39.360814, -123.825331}, {39.446538, -123.81469}}) ^ isIntersection(candidate, {{39.446538, -123.81469}, {39.552803, -123.766475}}) ^ isIntersection(candidate, {{39.552803, -123.766475}, {39.621486, -123.782322}}) ^ isIntersection(candidate, {{39.621486, -123.782322}, {39.684121999999995, -123.792659}}) ^ isIntersection(candidate, {{39.684121999999995, -123.792659}, {39.723071, -123.829545}}) ^ isIntersection(candidate, {{39.723071, -123.829545}, {39.832041, -123.851714}}) ^ isIntersection(candidate, {{39.832041, -123.851714}, {39.863028, -123.907664}}) ^ isIntersection(candidate, {{39.863028, -123.907664}, {39.922373, -123.95495199999999}}) ^ isIntersection(candidate, {{39.922373, -123.95495199999999}, {40.001299341669004, -124.02520517453002}}) ^ isIntersection(candidate, {{40.001299341669004, -124.02520517453002}, {40.013318999999996, -124.035904}}) ^ isIntersection(candidate, {{40.013318999999996, -124.035904}, {40.021307, -124.068908}}) ^ isIntersection(candidate, {{44.835333, -124.063155}, {44.949825, -124.023834}}) ^ isIntersection(candidate, {{44.949825, -124.023834}, {45.0449989594412, -124.010097209885}}) ^ isIntersection(candidate, {{45.0449989594412, -124.010097209885}, {45.047266, -124.00977}}) ^ isIntersection(candidate, {{45.047266, -124.00977}, {45.145475999999995, -123.975425}}) ^ isIntersection(candidate, {{45.145475999999995, -123.975425}, {45.216784, -123.97291899999999}}) ^ isIntersection(candidate, {{45.216784, -123.97291899999999}, {45.280218, -123.962887}}) ^ isIntersection(candidate, {{45.280218, -123.962887}, {45.347724, -123.979715}}) ^ isIntersection(candidate, {{45.347724, -123.979715}, {45.430778, -123.960557}}) ^ isIntersection(candidate, {{45.430778, -123.960557}, {45.489733, -123.976544}}) ^ isIntersection(candidate, {{45.489733, -123.976544}, {45.564878, -123.94755599999999}}) ^ isIntersection(candidate, {{45.564878, -123.94755599999999}, {45.661922999999994, -123.939005}}) ^ isIntersection(candidate, {{45.661922999999994, -123.939005}, {45.708794999999995, -123.939448}}) ^ isIntersection(candidate, {{45.708794999999995, -123.939448}, {45.757019, -123.968563}}) ^ isIntersection(candidate, {{45.757019, -123.968563}, {45.783084903545294, -123.966278384519}}) ^ isIntersection(candidate, {{45.783084903545294, -123.966278384519}, {45.837101, -123.961544}}) ^ isIntersection(candidate, {{45.837101, -123.961544}, {45.907807, -123.96763}}) ^ isIntersection(candidate, {{45.907807, -123.96763}, {45.946431, -123.993703}}) ^ isIntersection(candidate, {{45.946431, -123.993703}, {45.977306, -123.937471}}) ^ isIntersection(candidate, {{45.977306, -123.937471}, {46.041978, -123.92933}}) ^ isIntersection(candidate, {{46.041978, -123.92933}, {46.141675, -123.95919}}) ^ isIntersection(candidate, {{46.141675, -123.95919}, {46.197672, -124.041128}}) ^ isIntersection(candidate, {{46.197672, -124.041128}, {46.235327, -123.998052}}) ^ isIntersection(candidate, {{46.235327, -123.998052}, {46.179449999999996, -123.912405}}) ^ isIntersection(candidate, {{46.179449999999996, -123.912405}, {46.192211, -123.838801}}) ^ isIntersection(candidate, {{46.192211, -123.838801}, {46.213001, -123.757589}}) ^ isIntersection(candidate, {{46.213001, -123.757589}, {46.188989, -123.718149}}) ^ isIntersection(candidate, {{46.305278, -123.70076399999999}, {46.291335585711195, -123.72790381759701}}) ^ isIntersection(candidate, {{46.291335585711195, -123.72790381759701}, {46.275073, -123.75956}}) ^ isIntersection(candidate, {{46.275073, -123.75956}, {46.283587999999995, -123.806139}}) ^ isIntersection(candidate, {{46.283587999999995, -123.806139}, {46.239787, -123.875525}}) ^ isIntersection(candidate, {{46.239787, -123.875525}, {46.245491, -123.909306}}) ^ isIntersection(candidate, {{46.245491, -123.909306}, {46.277001, -123.954353}}) ^ isIntersection(candidate, {{46.277001, -123.954353}, {46.291398, -123.969427}}) ^ isIntersection(candidate, {{46.291398, -123.969427}, {46.267239, -124.080671}}) ^ isIntersection(candidate, {{46.630651, -124.069583}, {46.636364, -123.960642}}) ^ isIntersection(candidate, {{46.636364, -123.960642}, {46.672708, -123.923269}}) ^ isIntersection(candidate, {{46.672708, -123.923269}, {46.713971, -123.975157}}) ^ isIntersection(candidate, {{46.713971, -123.975157}, {46.735003, -124.080983}});
                        } else {
                            return isIntersection(candidate, {{48.683465999999996, -123.23714799999999}, {48.699971, -123.070427}}) ^ isIntersection(candidate, {{48.699971, -123.070427}, {48.721312, -123.019699}}) ^ isIntersection(candidate, {{48.721312, -123.019699}, {48.781701999999996, -122.979519}}) ^ isIntersection(candidate, {{48.781701999999996, -122.979519}, {48.790315, -122.937925}}) ^ isIntersection(candidate, {{48.790315, -122.937925}, {48.744628999999996, -122.81843599999999}}) ^ isIntersection(candidate, {{48.428748, -122.803521}, {48.418195999999995, -122.874135}}) ^ isIntersection(candidate, {{48.418195999999995, -122.874135}, {48.439966, -122.928004}}) ^ isIntersection(candidate, {{48.439966, -122.928004}, {48.460003, -123.03915599999999}}) ^ isIntersection(candidate, {{48.460003, -123.03915599999999}, {48.505291, -123.141478}}) ^ isIntersection(candidate, {{48.505291, -123.141478}, {48.590213999999996, -123.20268}}) ^ isIntersection(candidate, {{48.590213999999996, -123.20268}, {48.683465999999996, -123.23714799999999}}) ^ isIntersection(candidate, {{48.162800000000004, -123.728736}, {48.162715, -123.672445}}) ^ isIntersection(candidate, {{48.162715, -123.672445}, {48.151382, -123.551131}}) ^ isIntersection(candidate, {{48.151382, -123.551131}, {48.124258999999995, -123.44197199999999}}) ^ isIntersection(candidate, {{48.124258999999995, -123.44197199999999}, {48.113724999999995, -123.314578}}) ^ isIntersection(candidate, {{48.113724999999995, -123.314578}, {48.118217, -123.23912899999999}}) ^ isIntersection(candidate, {{48.118217, -123.23912899999999}, {48.175943, -123.144783}}) ^ isIntersection(candidate, {{48.175943, -123.144783}, {48.120469, -123.06621}}) ^ isIntersection(candidate, {{48.120469, -123.06621}, {48.090516, -123.004128}}) ^ isIntersection(candidate, {{48.090516, -123.004128}, {48.098552, -122.946119}}) ^ isIntersection(candidate, {{48.098552, -122.946119}, {48.1097997439328, -122.910686755725}}) ^ isIntersection(candidate, {{48.1097997439328, -122.910686755725}, {48.134406, -122.833173}}) ^ isIntersection(candidate, {{38.016717, -122.856573}, {38.031908, -122.939711}}) ^ isIntersection(candidate, {{38.031908, -122.939711}, {37.992429, -122.97439}}) ^ isIntersection(candidate, {{37.992429, -122.97439}, {38.003437999999996, -123.011533}}) ^ isIntersection(candidate, {{38.003437999999996, -123.011533}, {38.112961999999996, -122.960889}}) ^ isIntersection(candidate, {{38.112961999999996, -122.960889}, {38.17567, -122.953629}}) ^ isIntersection(candidate, {{38.17567, -122.953629}, {38.237538, -122.987149}}) ^ isIntersection(candidate, {{38.237538, -122.987149}, {38.273164, -122.986319}}) ^ isIntersection(candidate, {{38.273164, -122.986319}, {38.2957052387145, -123.003146477056}}) ^ isIntersection(candidate, {{38.2957052387145, -123.003146477056}, {38.297011999999995, -123.004122}}) ^ isIntersection(candidate, {{38.297011999999995, -123.004122}, {38.299385, -123.053504}}) ^ isIntersection(candidate, {{38.299385, -123.053504}, {38.33521, -123.068437}}) ^ isIntersection(candidate, {{38.33521, -123.068437}, {38.390525, -123.085572}}) ^ isIntersection(candidate, {{38.390525, -123.085572}, {38.474947, -123.166428}}) ^ isIntersection(candidate, {{38.474947, -123.166428}, {38.511044999999996, -123.249797}}) ^ isIntersection(candidate, {{38.511044999999996, -123.249797}, {38.565542, -123.33189899999999}}) ^ isIntersection(candidate, {{38.565542, -123.33189899999999}, {38.596804999999996, -123.34961200000001}}) ^ isIntersection(candidate, {{38.596804999999996, -123.34961200000001}, {38.699743999999995, -123.441774}}) ^ isIntersection(candidate, {{38.699743999999995, -123.441774}, {38.741966, -123.51478399999999}}) ^ isIntersection(candidate, {{38.741966, -123.51478399999999}, {38.76765621603929, -123.54092201163401}}) ^ isIntersection(candidate, {{38.76765621603929, -123.54092201163401}, {38.798189, -123.57198700000001}}) ^ isIntersection(candidate, {{38.798189, -123.57198700000001}, {38.843865, -123.638637}}) ^ isIntersection(candidate, {{38.843865, -123.638637}, {38.872529, -123.659846}}) ^ isIntersection(candidate, {{38.872529, -123.659846}, {38.91323, -123.71054}}) ^ isIntersection(candidate, {{38.91323, -123.71054}, {38.954994, -123.73289199999999}}) ^ isIntersection(candidate, {{38.954994, -123.73289199999999}, {39.021293, -123.69074}}) ^ isIntersection(candidate, {{39.021293, -123.69074}, {39.125327, -123.72150500000001}}) ^ isIntersection(candidate, {{39.125327, -123.72150500000001}, {39.193657, -123.765891}}) ^ isIntersection(candidate, {{46.213001, -123.757589}, {46.188989, -123.718149}}) ^ isIntersection(candidate, {{46.188989, -123.718149}, {46.216296, -123.660868}}) ^ isIntersection(candidate, {{46.216296, -123.660868}, {46.228654, -123.586205}}) ^ isIntersection(candidate, {{46.228654, -123.586205}, {46.259108999999995, -123.547659}}) ^ isIntersection(candidate, {{46.259108999999995, -123.547659}, {46.266832, -123.669501}}) ^ isIntersection(candidate, {{46.266832, -123.669501}, {46.305278, -123.70076399999999}}) ^ isIntersection(candidate, {{46.305278, -123.70076399999999}, {46.291335585711195, -123.72790381759701}});
                        }
                    }
                } else {
                    if (candidate.longitude < -122.24609375) {
                        if (candidate.longitude < -122.498779296875) {
                            return isIntersection(candidate, {{48.790315, -122.937925}, {48.744628999999996, -122.81843599999999}}) ^ isIntersection(candidate, {{48.744628999999996, -122.81843599999999}, {48.661991, -122.743049}}) ^ isIntersection(candidate, {{48.661991, -122.743049}, {48.604682999999994, -122.79901}}) ^ isIntersection(candidate, {{48.604682999999994, -122.79901}, {48.562425999999995, -122.771206}}) ^ isIntersection(candidate, {{48.562425999999995, -122.771206}, {48.508911, -122.779124}}) ^ isIntersection(candidate, {{48.508911, -122.779124}, {48.483888, -122.817912}}) ^ isIntersection(candidate, {{48.483888, -122.817912}, {48.428748, -122.803521}}) ^ isIntersection(candidate, {{48.428748, -122.803521}, {48.418195999999995, -122.874135}}) ^ isIntersection(candidate, {{48.1097997439328, -122.910686755725}, {48.134406, -122.833173}}) ^ isIntersection(candidate, {{48.134406, -122.833173}, {48.14324, -122.760448}}) ^ isIntersection(candidate, {{48.14324, -122.760448}, {48.103102, -122.698465}}) ^ isIntersection(candidate, {{48.103102, -122.698465}, {48.016106, -122.70184}}) ^ isIntersection(candidate, {{48.016106, -122.70184}, {47.972978999999995, -122.70129399999999}}) ^ isIntersection(candidate, {{47.972978999999995, -122.70129399999999}, {47.920984999999995, -122.651063}}) ^ isIntersection(candidate, {{47.920984999999995, -122.651063}, {47.9230352997388, -122.63410286528}}) ^ isIntersection(candidate, {{47.9230352997388, -122.63410286528}, {47.925138999999994, -122.616701}}) ^ isIntersection(candidate, {{47.925138999999994, -122.616701}, {47.9510041672091, -122.573745864315}}) ^ isIntersection(candidate, {{47.9510041672091, -122.573745864315}, {47.967214999999996, -122.546824}}) ^ isIntersection(candidate, {{47.967214999999996, -122.546824}, {47.996404, -122.542924}}) ^ isIntersection(candidate, {{47.996404, -122.542924}, {48.030992, -122.607342}}) ^ isIntersection(candidate, {{48.030992, -122.607342}, {48.110616, -122.59830099999999}}) ^ isIntersection(candidate, {{48.110616, -122.59830099999999}, {48.163281, -122.633167}}) ^ isIntersection(candidate, {{48.163281, -122.633167}, {48.193573, -122.711508}}) ^ isIntersection(candidate, {{48.193573, -122.711508}, {48.260061, -122.752563}}) ^ isIntersection(candidate, {{48.260061, -122.752563}, {48.315286, -122.707077}}) ^ isIntersection(candidate, {{48.315286, -122.707077}, {48.412466992044294, -122.66698252821601}}) ^ isIntersection(candidate, {{48.412466992044294, -122.66698252821601}, {48.416453, -122.66533799999999}}) ^ isIntersection(candidate, {{48.416453, -122.66533799999999}, {48.476848999999994, -122.689121}}) ^ isIntersection(candidate, {{48.476848999999994, -122.689121}, {48.530156, -122.650307}}) ^ isIntersection(candidate, {{48.530156, -122.650307}, {48.588339, -122.642597}}) ^ isIntersection(candidate, {{48.588339, -122.642597}, {48.6452989985202, -122.671345425667}}) ^ isIntersection(candidate, {{48.6452989985202, -122.671345425667}, {48.722237, -122.710177}}) ^ isIntersection(candidate, {{48.722237, -122.710177}, {48.789195, -122.720045}}) ^ isIntersection(candidate, {{48.789195, -122.720045}, {48.838097, -122.732506}}) ^ isIntersection(candidate, {{48.838097, -122.732506}, {48.88313, -122.794018}}) ^ isIntersection(candidate, {{48.88313, -122.794018}, {48.941368999999995, -122.821631}}) ^ isIntersection(candidate, {{48.941368999999995, -122.821631}, {49.002356999999996, -122.75802}}) ^ isIntersection(candidate, {{49.002356999999996, -122.75802}, {49.002494, -122.251063}}) ^ isIntersection(candidate, {{37.492340999999996, -122.49378899999999}, {37.521339999999995, -122.516689}}) ^ isIntersection(candidate, {{37.521339999999995, -122.516689}, {37.576138, -122.518088}}) ^ isIntersection(candidate, {{37.576138, -122.518088}, {37.612136, -122.496786}}) ^ isIntersection(candidate, {{37.686433, -122.49678399999999}, {37.7081325680179, -122.50067801908301}}) ^ isIntersection(candidate, {{37.7081325680179, -122.50067801908301}, {37.7355674652407, -122.505601251345}}) ^ isIntersection(candidate, {{37.7355674652407, -122.505601251345}, {37.77113, -122.511983}}) ^ isIntersection(candidate, {{37.77113, -122.511983}, {37.800878999999995, -122.465396}}) ^ isIntersection(candidate, {{38.108087, -122.491283}, {38.032165, -122.499465}}) ^ isIntersection(candidate, {{38.032165, -122.499465}, {37.996167, -122.452995}}) ^ isIntersection(candidate, {{37.826727999999996, -122.483483}, {37.830328, -122.537285}}) ^ isIntersection(candidate, {{37.830328, -122.537285}, {37.875126, -122.60129}}) ^ isIntersection(candidate, {{37.875126, -122.60129}, {37.906604, -122.678474}}) ^ isIntersection(candidate, {{37.906604, -122.678474}, {37.89382, -122.70264}}) ^ isIntersection(candidate, {{37.89382, -122.70264}, {37.935527, -122.754606}}) ^ isIntersection(candidate, {{37.935527, -122.754606}, {37.976656999999996, -122.797405}}) ^ isIntersection(candidate, {{37.976656999999996, -122.797405}, {38.016717, -122.856573}}) ^ isIntersection(candidate, {{38.016717, -122.856573}, {38.031908, -122.939711}});
                        } else {
                            return isIntersection(candidate, {{49.002356999999996, -122.75802}, {49.002494, -122.251063}}) ^ isIntersection(candidate, {{49.002494, -122.251063}, {49.002145999999996, -122.098357}}) ^ isIntersection(candidate, {{37.013949, -122.20618}, {37.072548, -122.260481}}) ^ isIntersection(candidate, {{37.072548, -122.260481}, {37.101746999999996, -122.284882}}) ^ isIntersection(candidate, {{37.101746999999996, -122.284882}, {37.105141386718095, -122.29431019191301}}) ^ isIntersection(candidate, {{37.105141386718095, -122.29431019191301}, {37.11546, -122.322971}}) ^ isIntersection(candidate, {{37.11546, -122.322971}, {37.144099, -122.344029}}) ^ isIntersection(candidate, {{37.144099, -122.344029}, {37.187249, -122.397065}}) ^ isIntersection(candidate, {{37.187249, -122.397065}, {37.248521, -122.418452}}) ^ isIntersection(candidate, {{37.248521, -122.418452}, {37.3149650377439, -122.40559014390101}}) ^ isIntersection(candidate, {{37.3149650377439, -122.40559014390101}, {37.337008999999995, -122.40132299999999}}) ^ isIntersection(candidate, {{37.337008999999995, -122.40132299999999}, {37.374804999999995, -122.409258}}) ^ isIntersection(candidate, {{37.374804999999995, -122.409258}, {37.435941, -122.443687}}) ^ isIntersection(candidate, {{37.435941, -122.443687}, {37.461541, -122.445987}}) ^ isIntersection(candidate, {{37.461541, -122.445987}, {37.492340999999996, -122.49378899999999}}) ^ isIntersection(candidate, {{37.492340999999996, -122.49378899999999}, {37.521339999999995, -122.516689}}) ^ isIntersection(candidate, {{37.576138, -122.518088}, {37.612136, -122.496786}}) ^ isIntersection(candidate, {{37.612136, -122.496786}, {37.686433, -122.49678399999999}}) ^ isIntersection(candidate, {{37.686433, -122.49678399999999}, {37.7081325680179, -122.50067801908301}}) ^ isIntersection(candidate, {{37.77113, -122.511983}, {37.800878999999995, -122.465396}}) ^ isIntersection(candidate, {{37.800878999999995, -122.465396}, {37.80563, -122.398139}}) ^ isIntersection(candidate, {{37.80563, -122.398139}, {37.790724, -122.385323}}) ^ isIntersection(candidate, {{37.790724, -122.385323}, {37.738558, -122.376462}}) ^ isIntersection(candidate, {{37.738558, -122.376462}, {37.729504999999996, -122.356784}}) ^ isIntersection(candidate, {{37.729504999999996, -122.356784}, {37.71501, -122.361749}}) ^ isIntersection(candidate, {{37.71501, -122.361749}, {37.708331, -122.389826876588}}) ^ isIntersection(candidate, {{37.708331, -122.389826876588}, {37.707530999999996, -122.39319}}) ^ isIntersection(candidate, {{37.707530999999996, -122.39319}, {37.592501, -122.360219}}) ^ isIntersection(candidate, {{37.592501, -122.360219}, {37.55814, -122.244372}}) ^ isIntersection(candidate, {{37.698695, -122.213774}, {37.726406, -122.24981}}) ^ isIntersection(candidate, {{37.726406, -122.24981}, {37.755129, -122.252452}}) ^ isIntersection(candidate, {{37.755129, -122.252452}, {37.777243999999996, -122.312974}}) ^ isIntersection(candidate, {{37.777243999999996, -122.312974}, {37.809796999999996, -122.333711}}) ^ isIntersection(candidate, {{37.809796999999996, -122.333711}, {37.830087, -122.303931}}) ^ isIntersection(candidate, {{37.830087, -122.303931}, {37.8938323463208, -122.32871428740701}}) ^ isIntersection(candidate, {{37.8938323463208, -122.32871428740701}, {37.908791, -122.33453}}) ^ isIntersection(candidate, {{37.908791, -122.33453}, {37.905190999999995, -122.378709}}) ^ isIntersection(candidate, {{37.905190999999995, -122.378709}, {37.955672, -122.425258}}) ^ isIntersection(candidate, {{37.955672, -122.425258}, {37.978168, -122.367582}}) ^ isIntersection(candidate, {{37.978168, -122.367582}, {38.007948, -122.36889099999999}}) ^ isIntersection(candidate, {{38.007948, -122.36889099999999}, {38.0092538777817, -122.34280385218801}}) ^ isIntersection(candidate, {{38.0092538777817, -122.34280385218801}, {38.01031, -122.321706}}) ^ isIntersection(candidate, {{38.01031, -122.321706}, {38.051473, -122.262861}}) ^ isIntersection(candidate, {{38.051473, -122.262861}, {38.06037449753119, -122.269320054917}}) ^ isIntersection(candidate, {{38.06037449753119, -122.269320054917}, {38.105142, -122.301804}}) ^ isIntersection(candidate, {{38.105142, -122.301804}, {38.143449, -122.393588}}) ^ isIntersection(candidate, {{38.143449, -122.393588}, {38.14200359725329, -122.39758123062401}}) ^ isIntersection(candidate, {{38.14200359725329, -122.39758123062401}, {38.1090944743082, -122.48849963925902}}) ^ isIntersection(candidate, {{38.1090944743082, -122.48849963925902}, {38.108087, -122.491283}}) ^ isIntersection(candidate, {{38.108087, -122.491283}, {38.032165, -122.499465}}) ^ isIntersection(candidate, {{38.032165, -122.499465}, {37.996167, -122.452995}}) ^ isIntersection(candidate, {{37.996167, -122.452995}, {37.966713999999996, -122.488665}}) ^ isIntersection(candidate, {{37.966713999999996, -122.488665}, {37.921881, -122.486375}}) ^ isIntersection(candidate, {{37.921881, -122.486375}, {37.893409999999996, -122.448413}}) ^ isIntersection(candidate, {{37.893409999999996, -122.448413}, {37.852720999999995, -122.41847}}) ^ isIntersection(candidate, {{37.852720999999995, -122.41847}, {37.826727999999996, -122.483483}}) ^ isIntersection(candidate, {{37.826727999999996, -122.483483}, {37.830328, -122.537285}});
                        }
                    } else {
                        if (candidate.longitude < -120.83984375) {
                            return isIntersection(candidate, {{49.002494, -122.251063}, {49.002145999999996, -122.098357}}) ^ isIntersection(candidate, {{49.002145999999996, -122.098357}, {48.997398999999994, -121.751252}}) ^ isIntersection(candidate, {{48.997398999999994, -121.751252}, {48.999851, -121.395543}}) ^ isIntersection(candidate, {{48.999851, -121.395543}, {49.001411999999995, -121.12624}}) ^ isIntersection(candidate, {{49.001411999999995, -121.12624}, {49.0005911528352, -120.851527133018}}) ^ isIntersection(candidate, {{49.0005911528352, -120.851527133018}, {49.000187999999994, -120.716604}}) ^ isIntersection(candidate, {{35.160458999999996, -120.756086}, {35.204429, -120.84667400000001}}) ^ isIntersection(candidate, {{35.204429, -120.84667400000001}, {35.247876999999995, -120.89679}}) ^ isIntersection(candidate, {{35.247876999999995, -120.89679}, {35.294184, -120.87957}}) ^ isIntersection(candidate, {{35.294184, -120.87957}, {35.360763, -120.862133}}) ^ isIntersection(candidate, {{35.360763, -120.862133}, {35.430195999999995, -120.88475700000001}}) ^ isIntersection(candidate, {{35.430195999999995, -120.88475700000001}, {35.453742999999996, -120.955863}}) ^ isIntersection(candidate, {{35.453742999999996, -120.955863}, {35.46071, -121.003359}}) ^ isIntersection(candidate, {{35.46071, -121.003359}, {35.57172, -121.11424}}) ^ isIntersection(candidate, {{35.57172, -121.11424}, {35.635399, -121.166712}}) ^ isIntersection(candidate, {{35.635399, -121.166712}, {35.666711, -121.272322}}) ^ isIntersection(candidate, {{35.666711, -121.272322}, {35.71331, -121.314632}}) ^ isIntersection(candidate, {{35.71331, -121.314632}, {35.783106, -121.332449}}) ^ isIntersection(candidate, {{35.783106, -121.332449}, {35.7951862038146, -121.347053956004}}) ^ isIntersection(candidate, {{35.7951862038146, -121.347053956004}, {35.844623, -121.406823}}) ^ isIntersection(candidate, {{35.844623, -121.406823}, {35.885618, -121.462264}}) ^ isIntersection(candidate, {{35.885618, -121.462264}, {35.970348, -121.48620000000001}}) ^ isIntersection(candidate, {{35.970348, -121.48620000000001}, {36.014368, -121.531876}}) ^ isIntersection(candidate, {{36.014368, -121.531876}, {36.025155999999996, -121.574602}}) ^ isIntersection(candidate, {{36.025155999999996, -121.574602}, {36.099695, -121.62200899999999}}) ^ isIntersection(candidate, {{36.099695, -121.62200899999999}, {36.165818, -121.680145}}) ^ isIntersection(candidate, {{36.165818, -121.680145}, {36.227407, -121.77985100000001}}) ^ isIntersection(candidate, {{36.227407, -121.77985100000001}, {36.241859999999996, -121.826425}}) ^ isIntersection(candidate, {{36.241859999999996, -121.826425}, {36.30281, -121.888491}}) ^ isIntersection(candidate, {{36.30281, -121.888491}, {36.393603, -121.903195}}) ^ isIntersection(candidate, {{36.393603, -121.903195}, {36.485602, -121.94160000000001}}) ^ isIntersection(candidate, {{36.485602, -121.94160000000001}, {36.582754, -121.970427}}) ^ isIntersection(candidate, {{36.582754, -121.970427}, {36.634558999999996, -121.923866}}) ^ isIntersection(candidate, {{36.634558999999996, -121.923866}, {36.611135999999995, -121.860604}}) ^ isIntersection(candidate, {{36.611135999999995, -121.860604}, {36.682857999999996, -121.81446199999999}}) ^ isIntersection(candidate, {{36.682857999999996, -121.81446199999999}, {36.777543, -121.796826}}) ^ isIntersection(candidate, {{36.777543, -121.796826}, {36.815186, -121.791544}}) ^ isIntersection(candidate, {{36.815186, -121.791544}, {36.8500494437455, -121.81273242676201}}) ^ isIntersection(candidate, {{36.8500494437455, -121.81273242676201}, {36.931551999999996, -121.862266}}) ^ isIntersection(candidate, {{36.931551999999996, -121.862266}, {36.96895, -121.906468}}) ^ isIntersection(candidate, {{36.96895, -121.906468}, {36.97145, -121.95167000000001}}) ^ isIntersection(candidate, {{36.97145, -121.95167000000001}, {36.95115, -122.027174}}) ^ isIntersection(candidate, {{36.95115, -122.027174}, {36.9535956897314, -122.06731672906}}) ^ isIntersection(candidate, {{36.9535956897314, -122.06731672906}, {36.955951, -122.105976}}) ^ isIntersection(candidate, {{36.955951, -122.105976}, {37.013949, -122.20618}}) ^ isIntersection(candidate, {{37.013949, -122.20618}, {37.072548, -122.260481}}) ^ isIntersection(candidate, {{37.592501, -122.360219}, {37.55814, -122.244372}}) ^ isIntersection(candidate, {{37.55814, -122.244372}, {37.504143, -122.168449}}) ^ isIntersection(candidate, {{37.504143, -122.168449}, {37.5213219985908, -122.12919970222401}}) ^ isIntersection(candidate, {{37.5213219985908, -122.12919970222401}, {37.528850999999996, -122.111998}}) ^ isIntersection(candidate, {{37.528850999999996, -122.111998}, {37.581866, -122.144396}}) ^ isIntersection(candidate, {{37.581866, -122.144396}, {37.640771, -122.152905}}) ^ isIntersection(candidate, {{37.640771, -122.152905}, {37.6672730133697, -122.162802519462}}) ^ isIntersection(candidate, {{37.6672730133697, -122.162802519462}, {37.667933, -122.163049}}) ^ isIntersection(candidate, {{37.667933, -122.163049}, {37.698695, -122.213774}}) ^ isIntersection(candidate, {{37.698695, -122.213774}, {37.726406, -122.24981}});
                        } else {
                            return isIntersection(candidate, {{34.058351, -119.91621599999999}, {34.071298, -119.857304}}) ^ isIntersection(candidate, {{34.071298, -119.857304}, {34.049299, -119.739472}}) ^ isIntersection(candidate, {{34.049299, -119.739472}, {34.053452, -119.56670000000001}}) ^ isIntersection(candidate, {{33.99782, -119.554472}, {33.985889, -119.662825}}) ^ isIntersection(candidate, {{33.985889, -119.662825}, {33.959582999999995, -119.721206}}) ^ isIntersection(candidate, {{33.959582999999995, -119.721206}, {33.962928999999995, -119.795938}}) ^ isIntersection(candidate, {{33.962928999999995, -119.795938}, {33.980374999999995, -119.873358}}) ^ isIntersection(candidate, {{33.980374999999995, -119.873358}, {34.023527, -119.876916}}) ^ isIntersection(candidate, {{34.023527, -119.876916}, {34.058351, -119.91621599999999}}) ^ isIntersection(candidate, {{34.076465, -120.368278}, {34.057172, -120.24248}}) ^ isIntersection(candidate, {{34.057172, -120.24248}, {34.026087, -120.135853}}) ^ isIntersection(candidate, {{34.026087, -120.135853}, {34.037729, -120.05510699999999}}) ^ isIntersection(candidate, {{34.037729, -120.05510699999999}, {33.983948, -119.984316}}) ^ isIntersection(candidate, {{33.983948, -119.984316}, {33.942481, -119.973691}}) ^ isIntersection(candidate, {{33.942481, -119.973691}, {33.914563, -120.049682}}) ^ isIntersection(candidate, {{33.914563, -120.049682}, {33.895711999999996, -120.121817}}) ^ isIntersection(candidate, {{33.895711999999996, -120.121817}, {33.927994, -120.17904899999999}}) ^ isIntersection(candidate, {{33.927994, -120.17904899999999}, {33.956904, -120.200085}}) ^ isIntersection(candidate, {{33.956904, -120.200085}, {33.991780999999996, -120.36484}}) ^ isIntersection(candidate, {{33.991780999999996, -120.36484}, {34.028081, -120.454134}}) ^ isIntersection(candidate, {{34.028081, -120.454134}, {34.076465, -120.368278}}) ^ isIntersection(candidate, {{49.0005911528352, -120.851527133018}, {49.000187999999994, -120.716604}}) ^ isIntersection(candidate, {{49.000187999999994, -120.716604}, {49.000704999999996, -120.376216}}) ^ isIntersection(candidate, {{49.000704999999996, -120.376216}, {48.999418, -120.001199}}) ^ isIntersection(candidate, {{48.999418, -120.001199}, {49.000260999999995, -119.4577}}) ^ isIntersection(candidate, {{34.395495, -119.536957}, {34.420995, -119.616862}}) ^ isIntersection(candidate, {{34.420995, -119.616862}, {34.408297, -119.68466599999999}}) ^ isIntersection(candidate, {{34.408297, -119.68466599999999}, {34.395396999999996, -119.709067}}) ^ isIntersection(candidate, {{34.395396999999996, -119.709067}, {34.415997, -119.785871}}) ^ isIntersection(candidate, {{34.415997, -119.785871}, {34.415796, -119.835771}}) ^ isIntersection(candidate, {{34.415796, -119.835771}, {34.408795, -119.873971}}) ^ isIntersection(candidate, {{34.408795, -119.873971}, {34.444641, -119.971951}}) ^ isIntersection(candidate, {{34.444641, -119.971951}, {34.461650999999996, -120.050682}}) ^ isIntersection(candidate, {{34.461650999999996, -120.050682}, {34.473405, -120.141165}}) ^ isIntersection(candidate, {{34.473405, -120.141165}, {34.470622999999996, -120.295051}}) ^ isIntersection(candidate, {{34.470622999999996, -120.295051}, {34.447094, -120.451425}}) ^ isIntersection(candidate, {{34.447094, -120.451425}, {34.522953, -120.511421}}) ^ isIntersection(candidate, {{34.522953, -120.511421}, {34.542794, -120.550092}}) ^ isIntersection(candidate, {{34.542794, -120.550092}, {34.556959, -120.581293}}) ^ isIntersection(candidate, {{34.556959, -120.581293}, {34.554017, -120.622575}}) ^ isIntersection(candidate, {{34.554017, -120.622575}, {34.581035, -120.64573899999999}}) ^ isIntersection(candidate, {{34.581035, -120.64573899999999}, {34.692095, -120.60197}}) ^ isIntersection(candidate, {{34.692095, -120.60197}, {34.730709, -120.614852}}) ^ isIntersection(candidate, {{34.730709, -120.614852}, {34.738071999999995, -120.62631999999999}}) ^ isIntersection(candidate, {{34.738071999999995, -120.62631999999999}, {34.85818, -120.610266}}) ^ isIntersection(candidate, {{34.85818, -120.610266}, {34.904115, -120.670835}}) ^ isIntersection(candidate, {{34.904115, -120.670835}, {34.975166302268704, -120.65030521184}}) ^ isIntersection(candidate, {{34.975166302268704, -120.65030521184}, {35.033085, -120.63356999999999}}) ^ isIntersection(candidate, {{35.033085, -120.63356999999999}, {35.078362, -120.629583}}) ^ isIntersection(candidate, {{35.078362, -120.629583}, {35.123805, -120.635787}}) ^ isIntersection(candidate, {{35.123805, -120.635787}, {35.153061, -120.675074}}) ^ isIntersection(candidate, {{35.153061, -120.675074}, {35.175998, -120.714185}}) ^ isIntersection(candidate, {{35.175998, -120.714185}, {35.160458999999996, -120.756086}}) ^ isIntersection(candidate, {{35.160458999999996, -120.756086}, {35.204429, -120.84667400000001}});
                        }
                    }
                }
            } else {
                if (candidate.longitude < -105.546875) {
                    if (candidate.longitude < -117.1484375) {
                        if (candidate.longitude < -118.4228515625) {
                            return isIntersection(candidate, {{33.467197999999996, -118.593969}, {33.487483, -118.484785}}) ^ isIntersection(candidate, {{33.487483, -118.484785}, {33.409285, -118.370323}}) ^ isIntersection(candidate, {{33.320065, -118.374768}, {33.326056, -118.465368}}) ^ isIntersection(candidate, {{33.326056, -118.465368}, {33.369914, -118.482609}}) ^ isIntersection(candidate, {{33.369914, -118.482609}, {33.434381, -118.563442}}) ^ isIntersection(candidate, {{33.434381, -118.563442}, {33.467197999999996, -118.593969}}) ^ isIntersection(candidate, {{33.035951, -118.594033}, {32.980933, -118.540069}}) ^ isIntersection(candidate, {{32.980933, -118.540069}, {32.895424, -118.446771}}) ^ isIntersection(candidate, {{32.895424, -118.446771}, {32.821962, -118.353504}}) ^ isIntersection(candidate, {{32.821962, -118.353504}, {32.800595, -118.425634}}) ^ isIntersection(candidate, {{32.800595, -118.425634}, {32.84459, -118.487908}}) ^ isIntersection(candidate, {{32.84459, -118.487908}, {32.931672, -118.581513}}) ^ isIntersection(candidate, {{32.931672, -118.581513}, {33.017129, -118.641578}}) ^ isIntersection(candidate, {{33.017129, -118.641578}, {33.035951, -118.594033}}) ^ isIntersection(candidate, {{33.278628, -119.578942}, {33.307269, -119.510489}}) ^ isIntersection(candidate, {{33.307269, -119.510489}, {33.266023, -119.427171}}) ^ isIntersection(candidate, {{33.266023, -119.427171}, {33.228167, -119.429559}}) ^ isIntersection(candidate, {{33.228167, -119.429559}, {33.215432, -119.464725}}) ^ isIntersection(candidate, {{33.215432, -119.464725}, {33.233405999999995, -119.545872}}) ^ isIntersection(candidate, {{33.233405999999995, -119.545872}, {33.278628, -119.578942}}) ^ isIntersection(candidate, {{34.049299, -119.739472}, {34.053452, -119.56670000000001}}) ^ isIntersection(candidate, {{34.053452, -119.56670000000001}, {34.053996622104, -119.47073665694401}}) ^ isIntersection(candidate, {{34.053996622104, -119.47073665694401}, {34.054156, -119.442654}}) ^ isIntersection(candidate, {{34.054156, -119.442654}, {34.050793999999996, -119.364214}}) ^ isIntersection(candidate, {{34.050793999999996, -119.364214}, {34.000548, -119.363065}}) ^ isIntersection(candidate, {{34.000548, -119.363065}, {33.994636, -119.391587}}) ^ isIntersection(candidate, {{33.994636, -119.391587}, {33.99651515438929, -119.48771955738201}}) ^ isIntersection(candidate, {{33.99651515438929, -119.48771955738201}, {33.99782, -119.554472}}) ^ isIntersection(candidate, {{33.99782, -119.554472}, {33.985889, -119.662825}}) ^ isIntersection(candidate, {{48.999418, -120.001199}, {49.000260999999995, -119.4577}}) ^ isIntersection(candidate, {{49.000260999999995, -119.4577}, {49.000262, -119.132102}}) ^ isIntersection(candidate, {{49.000262, -119.132102}, {49.0003077592976, -118.83661303558}}) ^ isIntersection(candidate, {{49.0003077592976, -118.83661303558}, {49.0004067514245, -118.19737505245901}}) ^ isIntersection(candidate, {{33.735917, -118.39660599999999}, {33.774715, -118.42840699999999}}) ^ isIntersection(candidate, {{33.774715, -118.42840699999999}, {33.804314999999995, -118.394307}}) ^ isIntersection(candidate, {{33.883913, -118.412708}, {33.969111, -118.460611}}) ^ isIntersection(candidate, {{33.969111, -118.460611}, {34.027509, -118.519514}}) ^ isIntersection(candidate, {{34.027509, -118.519514}, {34.039048, -118.603572}}) ^ isIntersection(candidate, {{34.039048, -118.603572}, {34.033255, -118.679366}}) ^ isIntersection(candidate, {{34.033255, -118.679366}, {34.032103, -118.744952}}) ^ isIntersection(candidate, {{34.032103, -118.744952}, {34.001239, -118.805114}}) ^ isIntersection(candidate, {{34.001239, -118.805114}, {34.034214999999996, -118.854653}}) ^ isIntersection(candidate, {{34.034214999999996, -118.854653}, {34.046738953351, -118.94447951145901}}) ^ isIntersection(candidate, {{34.046738953351, -118.94447951145901}, {34.048167, -118.954722}}) ^ isIntersection(candidate, {{34.048167, -118.954722}, {34.090469999999996, -119.069959}}) ^ isIntersection(candidate, {{34.090469999999996, -119.069959}, {34.094566, -119.10978399999999}}) ^ isIntersection(candidate, {{34.094566, -119.10978399999999}, {34.161728, -119.227743}}) ^ isIntersection(candidate, {{34.161728, -119.227743}, {34.213304, -119.257043}}) ^ isIntersection(candidate, {{34.213304, -119.257043}, {34.252902999999996, -119.270144}}) ^ isIntersection(candidate, {{34.252902999999996, -119.270144}, {34.2563404250143, -119.276614251859}}) ^ isIntersection(candidate, {{34.2563404250143, -119.276614251859}, {34.275689, -119.313034}}) ^ isIntersection(candidate, {{34.275689, -119.313034}, {34.321118, -119.37577999999999}}) ^ isIntersection(candidate, {{34.321118, -119.37577999999999}, {34.374064, -119.46103600000001}}) ^ isIntersection(candidate, {{34.374064, -119.46103600000001}, {34.378837558775594, -119.47794670672401}}) ^ isIntersection(candidate, {{34.378837558775594, -119.47794670672401}, {34.395495, -119.536957}}) ^ isIntersection(candidate, {{34.395495, -119.536957}, {34.420995, -119.616862}});
                        } else {
                            return isIntersection(candidate, {{33.487483, -118.484785}, {33.409285, -118.370323}}) ^ isIntersection(candidate, {{33.409285, -118.370323}, {33.351462999999995, -118.286261}}) ^ isIntersection(candidate, {{33.351462999999995, -118.286261}, {33.299075, -118.325244}}) ^ isIntersection(candidate, {{33.299075, -118.325244}, {33.320065, -118.374768}}) ^ isIntersection(candidate, {{33.320065, -118.374768}, {33.326056, -118.465368}}) ^ isIntersection(candidate, {{32.895424, -118.446771}, {32.821962, -118.353504}}) ^ isIntersection(candidate, {{32.821962, -118.353504}, {32.800595, -118.425634}}) ^ isIntersection(candidate, {{49.0003077592976, -118.83661303558}, {49.0004067514245, -118.19737505245901}}) ^ isIntersection(candidate, {{49.0004067514245, -118.19737505245901}, {49.000437, -118.002046}}) ^ isIntersection(candidate, {{49.000437, -118.002046}, {49.000842999999996, -117.60732300000001}}) ^ isIntersection(candidate, {{49.000842999999996, -117.60732300000001}, {49.00030686982559, -117.429968}}) ^ isIntersection(candidate, {{49.00030686982559, -117.429968}, {48.999818, -117.268247}}) ^ isIntersection(candidate, {{48.999818, -117.268247}, {48.999188, -117.032351}}) ^ isIntersection(candidate, {{32.618753999999996, -117.136664}, {32.671952, -117.168866}}) ^ isIntersection(candidate, {{32.671952, -117.168866}, {32.688851, -117.196767}}) ^ isIntersection(candidate, {{32.688851, -117.196767}, {32.669351999999996, -117.246069}}) ^ isIntersection(candidate, {{32.669351999999996, -117.246069}, {32.700051, -117.255169}}) ^ isIntersection(candidate, {{32.700051, -117.255169}, {32.786947999999995, -117.25497}}) ^ isIntersection(candidate, {{32.786947999999995, -117.25497}, {32.822247, -117.280971}}) ^ isIntersection(candidate, {{32.822247, -117.280971}, {32.839546999999996, -117.28217000000001}}) ^ isIntersection(candidate, {{32.839546999999996, -117.28217000000001}, {32.851447, -117.27387}}) ^ isIntersection(candidate, {{32.851447, -117.27387}, {32.849349, -117.262905}}) ^ isIntersection(candidate, {{32.849349, -117.262905}, {32.859446999999996, -117.25617}}) ^ isIntersection(candidate, {{32.859446999999996, -117.25617}, {32.8596735941017, -117.25616053514901}}) ^ isIntersection(candidate, {{32.8596735941017, -117.25616053514901}, {32.900146, -117.25447}}) ^ isIntersection(candidate, {{32.900146, -117.25447}, {32.9755245825488, -117.272139427178}}) ^ isIntersection(candidate, {{32.9755245825488, -117.272139427178}, {33.012343, -117.28077}}) ^ isIntersection(candidate, {{33.012343, -117.28077}, {33.093503999999996, -117.315278}}) ^ isIntersection(candidate, {{33.093503999999996, -117.315278}, {33.168437, -117.362572}}) ^ isIntersection(candidate, {{33.168437, -117.362572}, {33.268516999999996, -117.445583}}) ^ isIntersection(candidate, {{33.268516999999996, -117.445583}, {33.365491, -117.547693}}) ^ isIntersection(candidate, {{33.365491, -117.547693}, {33.386629, -117.59588}}) ^ isIntersection(candidate, {{33.386629, -117.59588}, {33.3869649943199, -117.596188685737}}) ^ isIntersection(candidate, {{33.3869649943199, -117.596188685737}, {33.440728, -117.64558199999999}}) ^ isIntersection(candidate, {{33.440728, -117.64558199999999}, {33.460556, -117.715349}}) ^ isIntersection(candidate, {{33.460556, -117.715349}, {33.483427, -117.726486}}) ^ isIntersection(candidate, {{33.483427, -117.726486}, {33.4879550239786, -117.73225829761401}}) ^ isIntersection(candidate, {{33.4879550239786, -117.73225829761401}, {33.552223999999995, -117.814188}}) ^ isIntersection(candidate, {{33.552223999999995, -117.814188}, {33.573523, -117.840289}}) ^ isIntersection(candidate, {{33.573523, -117.840289}, {33.605520999999996, -117.927091}}) ^ isIntersection(candidate, {{33.605520999999996, -117.927091}, {33.654319, -118.000593}}) ^ isIntersection(candidate, {{33.654319, -118.000593}, {33.729817, -118.088896}}) ^ isIntersection(candidate, {{33.729817, -118.088896}, {33.743803322895, -118.11507672288201}}) ^ isIntersection(candidate, {{33.743803322895, -118.11507672288201}, {33.753217, -118.132698}}) ^ isIntersection(candidate, {{33.753217, -118.132698}, {33.736118, -118.1837}}) ^ isIntersection(candidate, {{33.736118, -118.1837}, {33.715295467827495, -118.23192618587301}}) ^ isIntersection(candidate, {{33.715295467827495, -118.23192618587301}, {33.703741, -118.258687}}) ^ isIntersection(candidate, {{33.703741, -118.258687}, {33.712818, -118.317205}}) ^ isIntersection(candidate, {{33.712818, -118.317205}, {33.7211848352577, -118.333295892977}}) ^ isIntersection(candidate, {{33.7211848352577, -118.333295892977}, {33.732317, -118.354705}}) ^ isIntersection(candidate, {{33.732317, -118.354705}, {33.735917, -118.39660599999999}}) ^ isIntersection(candidate, {{33.735917, -118.39660599999999}, {33.774715, -118.42840699999999}}) ^ isIntersection(candidate, {{33.774715, -118.42840699999999}, {33.804314999999995, -118.394307}}) ^ isIntersection(candidate, {{33.804314999999995, -118.394307}, {33.883913, -118.412708}}) ^ isIntersection(candidate, {{33.883913, -118.412708}, {33.969111, -118.460611}});
                        }
                    } else {
                        if (candidate.longitude < -110.1171875) {
                            return isIntersection(candidate, {{48.999818, -117.268247}, {48.999188, -117.032351}}) ^ isIntersection(candidate, {{48.999188, -117.032351}, {48.999942999999995, -116.757234}}) ^ isIntersection(candidate, {{48.999942999999995, -116.757234}, {49.000099, -116.417503}}) ^ isIntersection(candidate, {{49.000099, -116.417503}, {49.000912, -116.049193}}) ^ isIntersection(candidate, {{49.000912, -116.049193}, {49.000693999999996, -115.50101599999999}}) ^ isIntersection(candidate, {{49.000693999999996, -115.50101599999999}, {48.999227999999995, -115.207912}}) ^ isIntersection(candidate, {{48.999227999999995, -115.207912}, {49.0005870038886, -114.727045223277}}) ^ isIntersection(candidate, {{49.0005870038886, -114.727045223277}, {49.000724999999996, -114.678217}}) ^ isIntersection(candidate, {{49.000724999999996, -114.678217}, {49.00139, -114.375977}}) ^ isIntersection(candidate, {{49.00139, -114.375977}, {48.999703, -114.180211}}) ^ isIntersection(candidate, {{48.999703, -114.180211}, {48.9993558816638, -114.06817845428}}) ^ isIntersection(candidate, {{48.9993558816638, -114.06817845428}, {48.998858, -113.907487}}) ^ isIntersection(candidate, {{48.998858, -113.907487}, {48.997631999999996, -113.692982}}) ^ isIntersection(candidate, {{48.997631999999996, -113.692982}, {48.998562, -113.375925}}) ^ isIntersection(candidate, {{48.998562, -113.375925}, {48.998461999999996, -113.116356}}) ^ isIntersection(candidate, {{48.998461999999996, -113.116356}, {48.99889377663369, -112.19341019591401}}) ^ isIntersection(candidate, {{48.99889377663369, -112.19341019591401}, {48.998917, -112.14376899999999}}) ^ isIntersection(candidate, {{48.998917, -112.14376899999999}, {48.998067, -111.854088}}) ^ isIntersection(candidate, {{48.998067, -111.854088}, {48.996963, -111.500812}}) ^ isIntersection(candidate, {{48.996963, -111.500812}, {48.997229786811594, -111.26986200082901}}) ^ isIntersection(candidate, {{48.997229786811594, -111.26986200082901}, {48.997537, -111.003916}}) ^ isIntersection(candidate, {{48.997537, -111.003916}, {48.9980081121848, -110.743064}}) ^ isIntersection(candidate, {{48.9980081121848, -110.743064}, {48.99839, -110.531615}}) ^ isIntersection(candidate, {{48.99839, -110.531615}, {48.999188, -110.438151}}) ^ isIntersection(candidate, {{48.999188, -110.438151}, {48.999261999999995, -110.171595}}) ^ isIntersection(candidate, {{48.999261999999995, -110.171595}, {49.00044, -109.500737}}) ^ isIntersection(candidate, {{31.334066999999997, -109.829689}, {31.3331413789916, -110.46017261044501}}) ^ isIntersection(candidate, {{31.3331413789916, -110.46017261044501}, {31.332238999999998, -111.074825}}) ^ isIntersection(candidate, {{31.332238999999998, -111.074825}, {31.424824287191598, -111.366969371164}}) ^ isIntersection(candidate, {{31.424824287191598, -111.366969371164}, {31.74113, -112.365043}}) ^ isIntersection(candidate, {{31.74113, -112.365043}, {32.0402490800901, -113.33376797301501}}) ^ isIntersection(candidate, {{32.0402490800901, -113.33376797301501}, {32.169005, -113.750756}}) ^ isIntersection(candidate, {{32.169005, -113.750756}, {32.494277, -114.813613}}) ^ isIntersection(candidate, {{32.494277, -114.813613}, {32.522833999999996, -114.811536}}) ^ isIntersection(candidate, {{32.522833999999996, -114.811536}, {32.550956, -114.795635}}) ^ isIntersection(candidate, {{32.550956, -114.795635}, {32.564788, -114.814185}}) ^ isIntersection(candidate, {{32.564788, -114.814185}, {32.593621, -114.799683}}) ^ isIntersection(candidate, {{32.593621, -114.799683}, {32.617118999999995, -114.809393}}) ^ isIntersection(candidate, {{32.617118999999995, -114.809393}, {32.649391, -114.76495}}) ^ isIntersection(candidate, {{32.649391, -114.76495}, {32.718762999999996, -114.719633}}) ^ isIntersection(candidate, {{32.718762999999996, -114.719633}, {32.699676, -115.000802}}) ^ isIntersection(candidate, {{32.699676, -115.000802}, {32.667100000000005, -115.465164}}) ^ isIntersection(candidate, {{32.667100000000005, -115.465164}, {32.623353, -116.04662}}) ^ isIntersection(candidate, {{32.623353, -116.04662}, {32.6185781426356, -116.10617888905001}}) ^ isIntersection(candidate, {{32.6185781426356, -116.10617888905001}, {32.583746999999995, -116.540643}}) ^ isIntersection(candidate, {{32.583746999999995, -116.540643}, {32.576260999999995, -116.62705}}) ^ isIntersection(candidate, {{32.576260999999995, -116.62705}, {32.557459, -116.857154}}) ^ isIntersection(candidate, {{32.557459, -116.857154}, {32.534155999999996, -117.12486200000001}}) ^ isIntersection(candidate, {{32.534155999999996, -117.12486200000001}, {32.585601187382096, -117.13203895573801}}) ^ isIntersection(candidate, {{32.585601187382096, -117.13203895573801}, {32.618753999999996, -117.136664}}) ^ isIntersection(candidate, {{32.618753999999996, -117.136664}, {32.671952, -117.168866}});
                        } else {
                            return isIntersection(candidate, {{48.999261999999995, -110.171595}, {49.00044, -109.500737}}) ^ isIntersection(candidate, {{49.00044, -109.500737}, {49.0004208038805, -109.489549778986}}) ^ isIntersection(candidate, {{49.0004208038805, -109.489549778986}, {49.000011, -109.250722}}) ^ isIntersection(candidate, {{49.000011, -109.250722}, {48.999234, -109.000708}}) ^ isIntersection(candidate, {{48.999234, -109.000708}, {48.999376999999996, -108.543194}}) ^ isIntersection(candidate, {{48.999376999999996, -108.543194}, {48.9995581173014, -108.23639299999999}}) ^ isIntersection(candidate, {{48.9995581173014, -108.23639299999999}, {48.999871999999996, -107.704696}}) ^ isIntersection(candidate, {{48.999871999999996, -107.704696}, {48.999362999999995, -107.441017}}) ^ isIntersection(candidate, {{48.999362999999995, -107.441017}, {49.000018999999995, -107.363582}}) ^ isIntersection(candidate, {{49.000018999999995, -107.363582}, {48.9999116017474, -107.179812012538}}) ^ isIntersection(candidate, {{48.9999116017474, -107.179812012538}, {48.999583, -106.617539}}) ^ isIntersection(candidate, {{48.999583, -106.617539}, {48.999423, -106.233987}}) ^ isIntersection(candidate, {{48.999423, -106.233987}, {48.99927943840029, -106.11206332368401}}) ^ isIntersection(candidate, {{48.99927943840029, -106.11206332368401}, {48.999207, -106.050543}}) ^ isIntersection(candidate, {{48.999207, -106.050543}, {48.999637, -105.775808}}) ^ isIntersection(candidate, {{48.999637, -105.775808}, {48.999356999999996, -105.355888}}) ^ isIntersection(candidate, {{30.943278, -105.488027}, {30.990229, -105.55743}}) ^ isIntersection(candidate, {{30.990229, -105.55743}, {31.035396, -105.579542}}) ^ isIntersection(candidate, {{31.035396, -105.579542}, {31.098544999999998, -105.627349}}) ^ isIntersection(candidate, {{31.098544999999998, -105.627349}, {31.136374999999997, -105.709491}}) ^ isIntersection(candidate, {{31.136374999999997, -105.709491}, {31.166897, -105.773257}}) ^ isIntersection(candidate, {{31.166897, -105.773257}, {31.20224, -105.794386}}) ^ isIntersection(candidate, {{31.20224, -105.794386}, {31.288634, -105.869353}}) ^ isIntersection(candidate, {{31.288634, -105.869353}, {31.318735, -105.938452}}) ^ isIntersection(candidate, {{31.318735, -105.938452}, {31.364749, -105.953943}}) ^ isIntersection(candidate, {{31.364749, -105.953943}, {31.387840129512597, -105.996429378287}}) ^ isIntersection(candidate, {{31.387840129512597, -105.996429378287}, {31.392457999999998, -106.004926}}) ^ isIntersection(candidate, {{31.392457999999998, -106.004926}, {31.398702, -106.080258}}) ^ isIntersection(candidate, {{31.398702, -106.080258}, {31.456279, -106.175675}}) ^ isIntersection(candidate, {{31.456279, -106.175675}, {31.513375999999997, -106.236804}}) ^ isIntersection(candidate, {{31.513375999999997, -106.236804}, {31.562061999999997, -106.280811}}) ^ isIntersection(candidate, {{31.562061999999997, -106.280811}, {31.620413, -106.303536}}) ^ isIntersection(candidate, {{31.620413, -106.303536}, {31.6869464165036, -106.35261099849801}}) ^ isIntersection(candidate, {{31.6869464165036, -106.35261099849801}, {31.71071, -106.370139}}) ^ isIntersection(candidate, {{31.71071, -106.370139}, {31.752008999999997, -106.41794}}) ^ isIntersection(candidate, {{31.752008999999997, -106.41794}, {31.759608, -106.467642}}) ^ isIntersection(candidate, {{31.759608, -106.467642}, {31.747809, -106.484642}}) ^ isIntersection(candidate, {{31.747809, -106.484642}, {31.783147999999997, -106.528242}}) ^ isIntersection(candidate, {{31.783147999999997, -106.528242}, {31.78391, -106.531731}}) ^ isIntersection(candidate, {{31.78391, -106.531731}, {31.783689, -106.993544}}) ^ isIntersection(candidate, {{31.783689, -106.993544}, {31.783625337108, -107.296792990414}}) ^ isIntersection(candidate, {{31.783625337108, -107.296792990414}, {31.783599, -107.422246}}) ^ isIntersection(candidate, {{31.783599, -107.422246}, {31.783599, -108.208394}}) ^ isIntersection(candidate, {{31.783599, -108.208394}, {31.499741999999998, -108.208572}}) ^ isIntersection(candidate, {{31.499741999999998, -108.208572}, {31.333395, -108.208573}}) ^ isIntersection(candidate, {{31.333395, -108.208573}, {31.333191, -108.707657}}) ^ isIntersection(candidate, {{31.333191, -108.707657}, {31.332314999999998, -108.861028}}) ^ isIntersection(candidate, {{31.332314999999998, -108.861028}, {31.332501999999998, -109.050044}}) ^ isIntersection(candidate, {{31.332501999999998, -109.050044}, {31.334066999999997, -109.829689}}) ^ isIntersection(candidate, {{31.334066999999997, -109.829689}, {31.3331413789916, -110.46017261044501}});
                        }
                    }
                } else {
                    if (candidate.longitude < -101.15234375) {
                        if (candidate.longitude < -103.26171875) {
                            return isIntersection(candidate, {{48.999637, -105.775808}, {48.999356999999996, -105.355888}}) ^ isIntersection(candidate, {{48.999356999999996, -105.355888}, {48.999500000000005, -105.265192}}) ^ isIntersection(candidate, {{48.999500000000005, -105.265192}, {48.9992288873925, -105.05764171669101}}) ^ isIntersection(candidate, {{48.9992288873925, -105.05764171669101}, {48.998991, -104.875527}}) ^ isIntersection(candidate, {{48.998991, -104.875527}, {48.999541, -104.543636}}) ^ isIntersection(candidate, {{48.999541, -104.543636}, {48.999877, -104.048736}}) ^ isIntersection(candidate, {{48.999877, -104.048736}, {48.998951, -103.375467}}) ^ isIntersection(candidate, {{48.998951, -103.375467}, {48.9993502502851, -102.93877701942802}}) ^ isIntersection(candidate, {{28.991532, -103.227801}, {28.982138, -103.28119}}) ^ isIntersection(candidate, {{28.982138, -103.28119}, {29.018914, -103.361998}}) ^ isIntersection(candidate, {{29.018914, -103.361998}, {29.066822, -103.463196}}) ^ isIntersection(candidate, {{29.066822, -103.463196}, {29.120998, -103.524613}}) ^ isIntersection(candidate, {{29.120998, -103.524613}, {29.15026, -103.59236}}) ^ isIntersection(candidate, {{29.15026, -103.59236}, {29.170934, -103.660203}}) ^ isIntersection(candidate, {{29.170934, -103.660203}, {29.19147, -103.724743}}) ^ isIntersection(candidate, {{29.19147, -103.724743}, {29.257502, -103.789034}}) ^ isIntersection(candidate, {{29.257502, -103.789034}, {29.2592383933486, -103.793873010934}}) ^ isIntersection(candidate, {{29.2592383933486, -103.793873010934}, {29.281851999999997, -103.856893}}) ^ isIntersection(candidate, {{29.281851999999997, -103.856893}, {29.296017, -103.975235}}) ^ isIntersection(candidate, {{29.296017, -103.975235}, {29.33091, -104.055596}}) ^ isIntersection(candidate, {{29.33091, -104.055596}, {29.383277999999997, -104.143692}}) ^ isIntersection(candidate, {{29.383277999999997, -104.143692}, {29.426264999999997, -104.181273}}) ^ isIntersection(candidate, {{29.426264999999997, -104.181273}, {29.48105, -104.229081}}) ^ isIntersection(candidate, {{29.48105, -104.229081}, {29.524337, -104.308813}}) ^ isIntersection(candidate, {{29.524337, -104.308813}, {29.543063, -104.371175}}) ^ isIntersection(candidate, {{29.543063, -104.371175}, {29.603659999999998, -104.452301}}) ^ isIntersection(candidate, {{29.603659999999998, -104.452301}, {29.676074, -104.539761}}) ^ isIntersection(candidate, {{29.676074, -104.539761}, {29.770462, -104.565688}}) ^ isIntersection(candidate, {{29.770462, -104.565688}, {29.844445, -104.619039}}) ^ isIntersection(candidate, {{29.844445, -104.619039}, {29.911112, -104.672327}}) ^ isIntersection(candidate, {{29.911112, -104.672327}, {29.989943, -104.685479}}) ^ isIntersection(candidate, {{29.989943, -104.685479}, {30.02421, -104.703998}}) ^ isIntersection(candidate, {{30.02421, -104.703998}, {30.107304, -104.692094}}) ^ isIntersection(candidate, {{30.107304, -104.692094}, {30.211736, -104.702788}}) ^ isIntersection(candidate, {{30.211736, -104.702788}, {30.259453999999998, -104.740448}}) ^ isIntersection(candidate, {{30.259453999999998, -104.740448}, {30.301147999999998, -104.761634}}) ^ isIntersection(candidate, {{30.301147999999998, -104.761634}, {30.370465999999997, -104.824314}}) ^ isIntersection(candidate, {{30.370465999999997, -104.824314}, {30.390413, -104.859521}}) ^ isIntersection(candidate, {{30.390413, -104.859521}, {30.458644999999997, -104.869872}}) ^ isIntersection(candidate, {{30.458644999999997, -104.869872}, {30.535144, -104.889376}}) ^ isIntersection(candidate, {{30.535144, -104.889376}, {30.604832, -104.924796}}) ^ isIntersection(candidate, {{30.604832, -104.924796}, {30.61026, -104.972071}}) ^ isIntersection(candidate, {{30.61026, -104.972071}, {30.6288120187883, -104.980753891325}}) ^ isIntersection(candidate, {{30.6288120187883, -104.980753891325}, {30.672583, -105.00124}}) ^ isIntersection(candidate, {{30.672583, -105.00124}, {30.686303, -105.06233399999999}}) ^ isIntersection(candidate, {{30.686303, -105.06233399999999}, {30.718913999999998, -105.098282}}) ^ isIntersection(candidate, {{30.718913999999998, -105.098282}, {30.757058999999998, -105.160153}}) ^ isIntersection(candidate, {{30.757058999999998, -105.160153}, {30.801567, -105.21866}}) ^ isIntersection(candidate, {{30.801567, -105.21866}, {30.816961, -105.314863}}) ^ isIntersection(candidate, {{30.816961, -105.314863}, {30.852978999999998, -105.394242}}) ^ isIntersection(candidate, {{30.852978999999998, -105.394242}, {30.888941, -105.399609}}) ^ isIntersection(candidate, {{30.888941, -105.399609}, {30.943278, -105.488027}}) ^ isIntersection(candidate, {{30.943278, -105.488027}, {30.990229, -105.55743}});
                        } else {
                            return isIntersection(candidate, {{48.998951, -103.375467}, {48.9993502502851, -102.93877701942802}}) ^ isIntersection(candidate, {{48.9993502502851, -102.93877701942802}, {48.999431, -102.850455}}) ^ isIntersection(candidate, {{48.999431, -102.850455}, {48.998553, -102.216993}}) ^ isIntersection(candidate, {{48.998553, -102.216993}, {48.9987566054109, -102.021149424659}}) ^ isIntersection(candidate, {{48.9987566054109, -102.021149424659}, {48.999168, -101.625438}}) ^ isIntersection(candidate, {{48.999168, -101.625438}, {48.9991448340053, -101.496737}}) ^ isIntersection(candidate, {{48.9991448340053, -101.496737}, {48.999078, -101.125434}}) ^ isIntersection(candidate, {{29.473542, -101.137503}, {29.520284999999998, -101.19272}}) ^ isIntersection(candidate, {{29.520284999999998, -101.19272}, {29.520342, -101.254895}}) ^ isIntersection(candidate, {{29.520342, -101.254895}, {29.577924999999997, -101.305533}}) ^ isIntersection(candidate, {{29.577924999999997, -101.305533}, {29.640715999999998, -101.307332}}) ^ isIntersection(candidate, {{29.640715999999998, -101.307332}, {29.664040999999997, -101.367198}}) ^ isIntersection(candidate, {{29.664040999999997, -101.367198}, {29.738079, -101.400636}}) ^ isIntersection(candidate, {{29.738079, -101.400636}, {29.759670999999997, -101.453499}}) ^ isIntersection(candidate, {{29.759670999999997, -101.453499}, {29.764581999999997, -101.503223}}) ^ isIntersection(candidate, {{29.764581999999997, -101.503223}, {29.794658, -101.561569}}) ^ isIntersection(candidate, {{29.794658, -101.561569}, {29.765162999999998, -101.654578}}) ^ isIntersection(candidate, {{29.765162999999998, -101.654578}, {29.76766, -101.714224}}) ^ isIntersection(candidate, {{29.76766, -101.714224}, {29.778860096722198, -101.761619209528}}) ^ isIntersection(candidate, {{29.778860096722198, -101.761619209528}, {29.790160999999998, -101.809441}}) ^ isIntersection(candidate, {{29.790160999999998, -101.809441}, {29.794023, -101.8754}}) ^ isIntersection(candidate, {{29.794023, -101.8754}, {29.807343, -101.966167}}) ^ isIntersection(candidate, {{29.807343, -101.966167}, {29.802491, -102.021919}}) ^ isIntersection(candidate, {{29.802491, -102.021919}, {29.786925999999998, -102.073646}}) ^ isIntersection(candidate, {{29.786925999999998, -102.073646}, {29.792389999999997, -102.115682}}) ^ isIntersection(candidate, {{29.792389999999997, -102.115682}, {29.819487, -102.161674}}) ^ isIntersection(candidate, {{29.819487, -102.161674}, {29.843534, -102.227553}}) ^ isIntersection(candidate, {{29.843534, -102.227553}, {29.877674, -102.301381}}) ^ isIntersection(candidate, {{29.877674, -102.301381}, {29.8721929465015, -102.31868395458801}}) ^ isIntersection(candidate, {{29.8721929465015, -102.31868395458801}, {29.862316999999997, -102.349861}}) ^ isIntersection(candidate, {{29.862316999999997, -102.349861}, {29.820394999999998, -102.369522}}) ^ isIntersection(candidate, {{29.820394999999998, -102.369522}, {29.765569, -102.392906}}) ^ isIntersection(candidate, {{29.765569, -102.392906}, {29.779816999999998, -102.468946}}) ^ isIntersection(candidate, {{29.779816999999998, -102.468946}, {29.780303, -102.512687}}) ^ isIntersection(candidate, {{29.780303, -102.512687}, {29.752357999999997, -102.551081}}) ^ isIntersection(candidate, {{29.752357999999997, -102.551081}, {29.748182, -102.612879}}) ^ isIntersection(candidate, {{29.748182, -102.612879}, {29.738260999999998, -102.677192}}) ^ isIntersection(candidate, {{29.738260999999998, -102.677192}, {29.676506999999997, -102.693466}}) ^ isIntersection(candidate, {{29.676506999999997, -102.693466}, {29.621928999999998, -102.738428}}) ^ isIntersection(candidate, {{29.621928999999998, -102.738428}, {29.556497, -102.777531}}) ^ isIntersection(candidate, {{29.556497, -102.777531}, {29.522319, -102.808692}}) ^ isIntersection(candidate, {{29.522319, -102.808692}, {29.444267, -102.83097}}) ^ isIntersection(candidate, {{29.444267, -102.83097}, {29.399558, -102.824564}}) ^ isIntersection(candidate, {{29.399558, -102.824564}, {29.352093, -102.871857}}) ^ isIntersection(candidate, {{29.352093, -102.871857}, {29.287112999999998, -102.891022}}) ^ isIntersection(candidate, {{29.287112999999998, -102.891022}, {29.241625, -102.871347}}) ^ isIntersection(candidate, {{29.241625, -102.871347}, {29.190697, -102.917805}}) ^ isIntersection(candidate, {{29.190697, -102.917805}, {29.161219, -102.995688}}) ^ isIntersection(candidate, {{29.161219, -102.995688}, {29.103029, -103.035683}}) ^ isIntersection(candidate, {{29.103029, -103.035683}, {29.085721999999997, -103.076355}}) ^ isIntersection(candidate, {{29.085721999999997, -103.076355}, {29.026877, -103.100368}}) ^ isIntersection(candidate, {{29.026877, -103.100368}, {28.982124, -103.126748}}) ^ isIntersection(candidate, {{28.982124, -103.126748}, {28.991532, -103.227801}}) ^ isIntersection(candidate, {{28.991532, -103.227801}, {28.982138, -103.28119}});
                        }
                    } else {
                        if (candidate.longitude < -99.50439453125) {
                            return isIntersection(candidate, {{48.9991448340053, -101.496737}, {48.999078, -101.125434}}) ^ isIntersection(candidate, {{48.999078, -101.125434}, {48.999398, -100.431676}}) ^ isIntersection(candidate, {{48.999398, -100.431676}, {48.999230224641295, -100.18270698232801}}) ^ isIntersection(candidate, {{48.999230224641295, -100.18270698232801}, {48.999049, -99.91377999999999}}) ^ isIntersection(candidate, {{48.999049, -99.91377999999999}, {48.9992712911555, -99.5257000590717}}) ^ isIntersection(candidate, {{48.9992712911555, -99.5257000590717}, {48.999356999999996, -99.37606799999999}}) ^ isIntersection(candidate, {{27.294940999999998, -99.487937}, {27.306051, -99.529654}}) ^ isIntersection(candidate, {{27.306051, -99.529654}, {27.412395999999998, -99.487521}}) ^ isIntersection(candidate, {{27.500496, -99.497519}, {27.498896, -99.52832}}) ^ isIntersection(candidate, {{27.498896, -99.52832}, {27.580206999999998, -99.530138}}) ^ isIntersection(candidate, {{27.580206999999998, -99.530138}, {27.614335999999998, -99.556812}}) ^ isIntersection(candidate, {{27.614335999999998, -99.556812}, {27.634515, -99.624515}}) ^ isIntersection(candidate, {{27.634515, -99.624515}, {27.654954, -99.704601}}) ^ isIntersection(candidate, {{27.654954, -99.704601}, {27.717070999999997, -99.758534}}) ^ isIntersection(candidate, {{27.717070999999997, -99.758534}, {27.741771, -99.80165099999999}}) ^ isIntersection(candidate, {{27.741771, -99.80165099999999}, {27.778809, -99.844737}}) ^ isIntersection(candidate, {{27.778809, -99.844737}, {27.824375999999997, -99.87783999999999}}) ^ isIntersection(candidate, {{27.824375999999997, -99.87783999999999}, {27.875283999999997, -99.90438499999999}}) ^ isIntersection(candidate, {{27.875283999999997, -99.90438499999999}, {27.917973, -99.91746099999999}}) ^ isIntersection(candidate, {{27.917973, -99.91746099999999}, {27.96771, -99.932161}}) ^ isIntersection(candidate, {{27.96771, -99.932161}, {27.990728999999998, -99.984923}}) ^ isIntersection(candidate, {{27.990728999999998, -99.984923}, {28.073117999999997, -100.028725}}) ^ isIntersection(candidate, {{28.073117999999997, -100.028725}, {28.124882, -100.075474}}) ^ isIntersection(candidate, {{28.124882, -100.075474}, {28.179447999999997, -100.174413}}) ^ isIntersection(candidate, {{28.179447999999997, -100.174413}, {28.197000731139898, -100.197510055501}}) ^ isIntersection(candidate, {{28.197000731139898, -100.197510055501}, {28.250269, -100.267604}}) ^ isIntersection(candidate, {{28.250269, -100.267604}, {28.301092999999998, -100.287554}}) ^ isIntersection(candidate, {{28.301092999999998, -100.287554}, {28.362116999999998, -100.320393}}) ^ isIntersection(candidate, {{28.362116999999998, -100.320393}, {28.427151, -100.337059}}) ^ isIntersection(candidate, {{28.427151, -100.337059}, {28.477196, -100.368288}}) ^ isIntersection(candidate, {{28.477196, -100.368288}, {28.515748, -100.38886}}) ^ isIntersection(candidate, {{28.515748, -100.38886}, {28.575637, -100.39727}}) ^ isIntersection(candidate, {{28.575637, -100.39727}, {28.616774, -100.448648}}) ^ isIntersection(candidate, {{28.616774, -100.448648}, {28.661959999999997, -100.500354}}) ^ isIntersection(candidate, {{28.661959999999997, -100.500354}, {28.716745, -100.506701}}) ^ isIntersection(candidate, {{28.716745, -100.506701}, {28.763279999999998, -100.533017}}) ^ isIntersection(candidate, {{28.763279999999998, -100.533017}, {28.805888, -100.53583}}) ^ isIntersection(candidate, {{28.805888, -100.53583}, {28.836167999999997, -100.576846}}) ^ isIntersection(candidate, {{28.836167999999997, -100.576846}, {28.903734, -100.627206}}) ^ isIntersection(candidate, {{28.903734, -100.627206}, {28.957079, -100.646993}}) ^ isIntersection(candidate, {{28.957079, -100.646993}, {29.031496999999998, -100.660208}}) ^ isIntersection(candidate, {{29.031496999999998, -100.660208}, {29.0835160253445, -100.671215189194}}) ^ isIntersection(candidate, {{29.0835160253445, -100.671215189194}, {29.099777, -100.674656}}) ^ isIntersection(candidate, {{29.099777, -100.674656}, {29.129123, -100.727462}}) ^ isIntersection(candidate, {{29.129123, -100.727462}, {29.168491999999997, -100.772649}}) ^ isIntersection(candidate, {{29.168491999999997, -100.772649}, {29.227729999999998, -100.795681}}) ^ isIntersection(candidate, {{29.227729999999998, -100.795681}, {29.232831568098, -100.801867546029}}) ^ isIntersection(candidate, {{29.232831568098, -100.801867546029}, {29.271421, -100.848664}}) ^ isIntersection(candidate, {{29.271421, -100.848664}, {29.307848, -100.886842}}) ^ isIntersection(candidate, {{29.307848, -100.886842}, {29.363402999999998, -100.995607}}) ^ isIntersection(candidate, {{29.363402999999998, -100.995607}, {29.458661, -101.060151}}) ^ isIntersection(candidate, {{29.458661, -101.060151}, {29.473542, -101.137503}}) ^ isIntersection(candidate, {{29.473542, -101.137503}, {29.520284999999998, -101.19272}});
                        } else {
                            return isIntersection(candidate, {{48.9992712911555, -99.5257000590717}, {48.999356999999996, -99.37606799999999}}) ^ isIntersection(candidate, {{48.999356999999996, -99.37606799999999}, {48.9999862956524, -98.99980337271101}}) ^ isIntersection(candidate, {{48.9999862956524, -98.99980337271101}, {49.000205, -98.86903699999999}}) ^ isIntersection(candidate, {{49.000205, -98.86903699999999}, {49.0005151189384, -97.95020501151559}}) ^ isIntersection(candidate, {{49.0005151189384, -97.95020501151559}, {49.000574, -97.77575}}) ^ isIntersection(candidate, {{26.055218, -97.79529099999999}, {26.057746828440198, -97.8622815631063}}) ^ isIntersection(candidate, {{26.057746828440198, -97.8622815631063}, {26.058083, -97.87118699999999}}) ^ isIntersection(candidate, {{26.058083, -97.87118699999999}, {26.059621, -97.944345}}) ^ isIntersection(candidate, {{26.059621, -97.944345}, {26.063862999999998, -98.010971}}) ^ isIntersection(candidate, {{26.063862999999998, -98.010971}, {26.041275, -98.039239}}) ^ isIntersection(candidate, {{26.041275, -98.039239}, {26.059168999999997, -98.091038}}) ^ isIntersection(candidate, {{26.059168999999997, -98.091038}, {26.055813, -98.149463}}) ^ isIntersection(candidate, {{26.055813, -98.149463}, {26.056153, -98.197046}}) ^ isIntersection(candidate, {{26.056153, -98.197046}, {26.0587423360004, -98.20495395559239}}) ^ isIntersection(candidate, {{26.0587423360004, -98.20495395559239}, {26.073100999999998, -98.248806}}) ^ isIntersection(candidate, {{26.073100999999998, -98.248806}, {26.110049999999998, -98.302979}}) ^ isIntersection(candidate, {{26.110049999999998, -98.302979}, {26.1130325510287, -98.3082001170459}}) ^ isIntersection(candidate, {{26.1130325510287, -98.3082001170459}, {26.157871999999998, -98.38669399999999}}) ^ isIntersection(candidate, {{26.157871999999998, -98.38669399999999}, {26.199151, -98.44253599999999}}) ^ isIntersection(candidate, {{26.199151, -98.44253599999999}, {26.214798, -98.503492}}) ^ isIntersection(candidate, {{26.214798, -98.503492}, {26.235221, -98.576188}}) ^ isIntersection(candidate, {{26.235221, -98.576188}, {26.2429363486766, -98.5933002182792}}) ^ isIntersection(candidate, {{26.2429363486766, -98.5933002182792}, {26.252028, -98.61346499999999}}) ^ isIntersection(candidate, {{26.252028, -98.61346499999999}, {26.23596, -98.65422099999999}}) ^ isIntersection(candidate, {{26.23596, -98.65422099999999}, {26.265618999999997, -98.69885599999999}}) ^ isIntersection(candidate, {{26.265618999999997, -98.69885599999999}, {26.326542, -98.779912}}) ^ isIntersection(candidate, {{26.326542, -98.779912}, {26.369421, -98.80734799999999}}) ^ isIntersection(candidate, {{26.369421, -98.80734799999999}, {26.357568999999998, -98.890965}}) ^ isIntersection(candidate, {{26.357568999999998, -98.890965}, {26.394056, -98.958325}}) ^ isIntersection(candidate, {{26.394056, -98.958325}, {26.412081999999998, -99.032316}}) ^ isIntersection(candidate, {{26.412081999999998, -99.032316}, {26.39651, -99.08200199999999}}) ^ isIntersection(candidate, {{26.39651, -99.08200199999999}, {26.426278, -99.110855}}) ^ isIntersection(candidate, {{26.426278, -99.110855}, {26.476976999999998, -99.091635}}) ^ isIntersection(candidate, {{26.476976999999998, -99.091635}, {26.500335, -99.105031}}) ^ isIntersection(candidate, {{26.500335, -99.105031}, {26.549847999999997, -99.171404}}) ^ isIntersection(candidate, {{26.549847999999997, -99.171404}, {26.5696605553736, -99.1768160923811}}) ^ isIntersection(candidate, {{26.5696605553736, -99.1768160923811}, {26.656443, -99.20052199999999}}) ^ isIntersection(candidate, {{26.656443, -99.20052199999999}, {26.724760999999997, -99.208907}}) ^ isIntersection(candidate, {{26.724760999999997, -99.208907}, {26.788262, -99.24244399999999}}) ^ isIntersection(candidate, {{26.788262, -99.24244399999999}, {26.843213, -99.268613}}) ^ isIntersection(candidate, {{26.843213, -99.268613}, {26.879761, -99.3289}}) ^ isIntersection(candidate, {{26.879761, -99.3289}, {26.928921, -99.361144}}) ^ isIntersection(candidate, {{26.928921, -99.361144}, {26.982398999999997, -99.387367}}) ^ isIntersection(candidate, {{26.982398999999997, -99.387367}, {27.026025999999998, -99.44697}}) ^ isIntersection(candidate, {{27.026025999999998, -99.44697}, {27.106838999999997, -99.442123}}) ^ isIntersection(candidate, {{27.106838999999997, -99.442123}, {27.159149, -99.42998399999999}}) ^ isIntersection(candidate, {{27.159149, -99.42998399999999}, {27.223340999999998, -99.44523799999999}}) ^ isIntersection(candidate, {{27.223340999999998, -99.44523799999999}, {27.2622401970428, -99.4608257991343}}) ^ isIntersection(candidate, {{27.2622401970428, -99.4608257991343}, {27.268437, -99.463309}}) ^ isIntersection(candidate, {{27.268437, -99.463309}, {27.294940999999998, -99.487937}}) ^ isIntersection(candidate, {{27.294940999999998, -99.487937}, {27.306051, -99.529654}}) ^ isIntersection(candidate, {{27.306051, -99.529654}, {27.412395999999998, -99.487521}}) ^ isIntersection(candidate, {{27.412395999999998, -99.487521}, {27.451518, -99.495104}}) ^ isIntersection(candidate, {{27.451518, -99.495104}, {27.500496, -99.497519}}) ^ isIntersection(candidate, {{27.500496, -99.497519}, {27.498896, -99.52832}});
                        }
                    }
                }
            }
        } else {
            if (candidate.longitude < -89.0234375) {
                if (candidate.longitude < -91.484375) {
                    if (candidate.longitude < -94.12109375) {
                        if (candidate.longitude < -96.0546875) {
                            return isIntersection(candidate, {{49.0005151189384, -97.95020501151559}, {49.000574, -97.77575}}) ^ isIntersection(candidate, {{49.000574, -97.77575}, {49.000687, -97.229039}}) ^ isIntersection(candidate, {{49.000687, -97.229039}, {48.999984, -96.93096}}) ^ isIntersection(candidate, {{48.999984, -96.93096}, {48.999984, -96.405408}}) ^ isIntersection(candidate, {{48.999984, -96.405408}, {48.999984, -95.97538999999999}}) ^ isIntersection(candidate, {{28.588237999999997, -96.000682}, {28.502224, -96.194412}}) ^ isIntersection(candidate, {{28.502224, -96.194412}, {28.423658999999997, -96.328817}}) ^ isIntersection(candidate, {{28.423658999999997, -96.328817}, {28.3898650304879, -96.37853315928679}}) ^ isIntersection(candidate, {{28.3898650304879, -96.37853315928679}, {28.381815, -96.39037599999999}}) ^ isIntersection(candidate, {{28.381815, -96.39037599999999}, {28.317666, -96.442849}}) ^ isIntersection(candidate, {{28.317666, -96.442849}, {28.222821, -96.63201}}) ^ isIntersection(candidate, {{28.222821, -96.63201}, {28.164593999999997, -96.719627}}) ^ isIntersection(candidate, {{28.164593999999997, -96.719627}, {28.110497, -96.792158}}) ^ isIntersection(candidate, {{28.110497, -96.792158}, {28.0598208616046, -96.8520706227301}}) ^ isIntersection(candidate, {{28.0598208616046, -96.8520706227301}, {28.030734, -96.886459}}) ^ isIntersection(candidate, {{28.030734, -96.886459}, {27.908306999999997, -97.00332499999999}}) ^ isIntersection(candidate, {{27.908306999999997, -97.00332499999999}, {27.8365323534718, -97.0436840836865}}) ^ isIntersection(candidate, {{27.8365323534718, -97.0436840836865}, {27.834466, -97.04484599999999}}) ^ isIntersection(candidate, {{27.834466, -97.04484599999999}, {27.785888, -97.090735}}) ^ isIntersection(candidate, {{27.785888, -97.090735}, {27.716687999999998, -97.14085399999999}}) ^ isIntersection(candidate, {{27.716687999999998, -97.14085399999999}, {27.59642, -97.212679}}) ^ isIntersection(candidate, {{27.59642, -97.212679}, {27.5766073164796, -97.2229914075318}}) ^ isIntersection(candidate, {{27.5766073164796, -97.2229914075318}, {27.510644, -97.257325}}) ^ isIntersection(candidate, {{27.510644, -97.257325}, {27.427175, -97.29605699999999}}) ^ isIntersection(candidate, {{27.427175, -97.29605699999999}, {27.317818, -97.33612199999999}}) ^ isIntersection(candidate, {{27.317818, -97.33612199999999}, {27.2779588322095, -97.34685087695568}}) ^ isIntersection(candidate, {{27.2779588322095, -97.34685087695568}, {27.234796, -97.358469}}) ^ isIntersection(candidate, {{27.234796, -97.358469}, {27.060043999999998, -97.378697}}) ^ isIntersection(candidate, {{27.060043999999998, -97.378697}, {26.885581, -97.366872}}) ^ isIntersection(candidate, {{26.885581, -97.366872}, {26.701746, -97.32275}}) ^ isIntersection(candidate, {{26.701746, -97.32275}, {26.6003398814733, -97.28754111668579}}) ^ isIntersection(candidate, {{26.6003398814733, -97.28754111668579}, {26.503163999999998, -97.253801}}) ^ isIntersection(candidate, {{26.503163999999998, -97.253801}, {26.4114960053025, -97.2273802265218}}) ^ isIntersection(candidate, {{26.4114960053025, -97.2273802265218}, {26.305864999999997, -97.196935}}) ^ isIntersection(candidate, {{26.305864999999997, -97.196935}, {26.082659999999997, -97.15879799999999}}) ^ isIntersection(candidate, {{26.082659999999997, -97.15879799999999}, {26.017653, -97.151922}}) ^ isIntersection(candidate, {{26.017653, -97.151922}, {25.971131999999997, -97.145567}}) ^ isIntersection(candidate, {{25.971131999999997, -97.145567}, {25.949022, -97.15660799999999}}) ^ isIntersection(candidate, {{25.949022, -97.15660799999999}, {25.960898999999998, -97.20694499999999}}) ^ isIntersection(candidate, {{25.960898999999998, -97.20694499999999}, {25.935437999999998, -97.277163}}) ^ isIntersection(candidate, {{25.935437999999998, -97.277163}, {25.923125, -97.338346}}) ^ isIntersection(candidate, {{25.923125, -97.338346}, {25.902447, -97.36597599999999}}) ^ isIntersection(candidate, {{25.902447, -97.36597599999999}, {25.868873999999998, -97.36008199999999}}) ^ isIntersection(candidate, {{25.868873999999998, -97.36008199999999}, {25.840117, -97.37286399999999}}) ^ isIntersection(candidate, {{25.840117, -97.37286399999999}, {25.840377999999998, -97.422636}}) ^ isIntersection(candidate, {{25.840377999999998, -97.422636}, {25.879337, -97.45472699999999}}) ^ isIntersection(candidate, {{25.879337, -97.45472699999999}, {25.880058, -97.496861}}) ^ isIntersection(candidate, {{25.880058, -97.496861}, {25.920035, -97.542957}}) ^ isIntersection(candidate, {{25.920035, -97.542957}, {25.937856999999997, -97.582565}}) ^ isIntersection(candidate, {{25.937856999999997, -97.582565}, {26.006614, -97.64401099999999}}) ^ isIntersection(candidate, {{26.006614, -97.64401099999999}, {26.023455, -97.697069}}) ^ isIntersection(candidate, {{26.023455, -97.697069}, {26.032131, -97.758838}}) ^ isIntersection(candidate, {{26.032131, -97.758838}, {26.055218, -97.79529099999999}}) ^ isIntersection(candidate, {{26.055218, -97.79529099999999}, {26.057746828440198, -97.8622815631063}});
                        } else {
                            return isIntersection(candidate, {{48.999984, -96.405408}, {48.999984, -95.97538999999999}}) ^ isIntersection(candidate, {{48.999984, -95.97538999999999}, {48.99874, -95.34096199999999}}) ^ isIntersection(candidate, {{48.99874, -95.34096199999999}, {48.9987583440104, -95.3198887834722}}) ^ isIntersection(candidate, {{48.9987583440104, -95.3198887834722}, {48.998903, -95.153711}}) ^ isIntersection(candidate, {{48.998903, -95.153711}, {49.18488, -95.153309}}) ^ isIntersection(candidate, {{49.18488, -95.153309}, {49.309287, -95.15333}}) ^ isIntersection(candidate, {{49.309287, -95.15333}, {49.384358, -95.153314}}) ^ isIntersection(candidate, {{49.384358, -95.153314}, {49.35317, -95.058404}}) ^ isIntersection(candidate, {{49.35317, -95.058404}, {49.368897, -94.988908}}) ^ isIntersection(candidate, {{49.368897, -94.988908}, {49.368679, -94.952111}}) ^ isIntersection(candidate, {{49.368679, -94.952111}, {49.333192999999994, -94.87845399999999}}) ^ isIntersection(candidate, {{49.333192999999994, -94.87845399999999}, {49.320986999999995, -94.816222}}) ^ isIntersection(candidate, {{49.320986999999995, -94.816222}, {49.214284, -94.79724399999999}}) ^ isIntersection(candidate, {{49.214284, -94.79724399999999}, {49.124994, -94.774228}}) ^ isIntersection(candidate, {{49.124994, -94.774228}, {49.099762999999996, -94.750221}}) ^ isIntersection(candidate, {{49.099762999999996, -94.750221}, {48.999992, -94.75021799999999}}) ^ isIntersection(candidate, {{48.999992, -94.75021799999999}, {48.999990999999994, -94.718932}}) ^ isIntersection(candidate, {{48.999990999999994, -94.718932}, {48.883928999999995, -94.68306899999999}}) ^ isIntersection(candidate, {{48.883928999999995, -94.68306899999999}, {48.840118999999994, -94.685681}}) ^ isIntersection(candidate, {{48.840118999999994, -94.685681}, {48.789352, -94.694312}}) ^ isIntersection(candidate, {{48.789352, -94.694312}, {48.737373999999996, -94.61900999999999}}) ^ isIntersection(candidate, {{48.737373999999996, -94.61900999999999}, {48.700362, -94.508862}}) ^ isIntersection(candidate, {{48.700362, -94.508862}, {48.6929, -94.446604}}) ^ isIntersection(candidate, {{48.6929, -94.446604}, {48.698308785528496, -94.4302012792341}}) ^ isIntersection(candidate, {{48.698308785528496, -94.4302012792341}, {48.711945, -94.388848}}) ^ isIntersection(candidate, {{48.711945, -94.388848}, {48.705255, -94.281797}}) ^ isIntersection(candidate, {{48.705255, -94.281797}, {48.683513999999995, -94.25116899999999}}) ^ isIntersection(candidate, {{48.683513999999995, -94.25116899999999}, {48.656323, -94.250191}}) ^ isIntersection(candidate, {{48.656323, -94.250191}, {48.643668999999996, -94.09124399999999}}) ^ isIntersection(candidate, {{29.671163, -94.056506}, {29.636588, -94.161549}}) ^ isIntersection(candidate, {{29.636588, -94.161549}, {29.5621028201748, -94.3541225449137}}) ^ isIntersection(candidate, {{29.5621028201748, -94.3541225449137}, {29.555645988295, -94.37081599999999}}) ^ isIntersection(candidate, {{29.555645988295, -94.37081599999999}, {29.5112181336473, -94.48567951355409}}) ^ isIntersection(candidate, {{29.5112181336473, -94.48567951355409}, {29.505367, -94.500807}}) ^ isIntersection(candidate, {{29.505367, -94.500807}, {29.467903, -94.594853}}) ^ isIntersection(candidate, {{29.467903, -94.594853}, {29.43078, -94.670389}}) ^ isIntersection(candidate, {{29.43078, -94.670389}, {29.369141, -94.73104699999999}}) ^ isIntersection(candidate, {{29.369141, -94.73104699999999}, {29.331446, -94.72252999999999}}) ^ isIntersection(candidate, {{29.331446, -94.72252999999999}, {29.279237, -94.80369499999999}}) ^ isIntersection(candidate, {{29.279237, -94.80369499999999}, {29.148063999999998, -95.026219}}) ^ isIntersection(candidate, {{29.148063999999998, -95.026219}, {29.0755520224787, -95.11505050559829}}) ^ isIntersection(candidate, {{29.0755520224787, -95.11505050559829}, {29.067321, -95.125134}}) ^ isIntersection(candidate, {{29.067321, -95.125134}, {29.02309, -95.191391}}) ^ isIntersection(candidate, {{29.02309, -95.191391}, {28.934072999999998, -95.297147}}) ^ isIntersection(candidate, {{28.934072999999998, -95.297147}, {28.866348, -95.38239}}) ^ isIntersection(candidate, {{28.866348, -95.38239}, {28.859022, -95.439594}}) ^ isIntersection(candidate, {{28.859022, -95.439594}, {28.8247355121921, -95.507037396917}}) ^ isIntersection(candidate, {{28.8247355121921, -95.507037396917}, {28.783168999999997, -95.58880099999999}}) ^ isIntersection(candidate, {{28.783168999999997, -95.58880099999999}, {28.734040999999998, -95.684089}}) ^ isIntersection(candidate, {{28.734040999999998, -95.684089}, {28.664942, -95.81250399999999}}) ^ isIntersection(candidate, {{28.664942, -95.81250399999999}, {28.588237999999997, -96.000682}}) ^ isIntersection(candidate, {{28.588237999999997, -96.000682}, {28.502224, -96.194412}});
                        }
                    } else {
                        if (candidate.longitude < -92.1875) {
                            return isIntersection(candidate, {{48.656323, -94.250191}, {48.643668999999996, -94.09124399999999}}) ^ isIntersection(candidate, {{48.643668999999996, -94.09124399999999}, {48.63122, -93.927004}}) ^ isIntersection(candidate, {{48.63122, -93.927004}, {48.629394999999995, -93.844008}}) ^ isIntersection(candidate, {{48.629394999999995, -93.844008}, {48.570299, -93.80527}}) ^ isIntersection(candidate, {{48.570299, -93.80527}, {48.526508, -93.81517799999999}}) ^ isIntersection(candidate, {{48.526508, -93.81517799999999}, {48.516296999999994, -93.674568}}) ^ isIntersection(candidate, {{48.516296999999994, -93.674568}, {48.528897, -93.562062}}) ^ isIntersection(candidate, {{48.528897, -93.562062}, {48.545663999999995, -93.46750399999999}}) ^ isIntersection(candidate, {{48.545663999999995, -93.46750399999999}, {48.591792, -93.464308}}) ^ isIntersection(candidate, {{48.591792, -93.464308}, {48.605084999999995, -93.371156}}) ^ isIntersection(candidate, {{48.605084999999995, -93.371156}, {48.626619999999996, -93.347528}}) ^ isIntersection(candidate, {{48.626619999999996, -93.347528}, {48.642474, -93.207398}}) ^ isIntersection(candidate, {{48.642474, -93.207398}, {48.624924, -93.14242}}) ^ isIntersection(candidate, {{48.624924, -93.14242}, {48.6268142184965, -93.0884545352861}}) ^ isIntersection(candidate, {{48.6268142184965, -93.0884545352861}, {48.631493, -92.954876}}) ^ isIntersection(candidate, {{48.631493, -92.954876}, {48.594915, -92.89468699999999}}) ^ isIntersection(candidate, {{48.594915, -92.89468699999999}, {48.53929, -92.72804599999999}}) ^ isIntersection(candidate, {{48.53929, -92.72804599999999}, {48.542873, -92.634931}}) ^ isIntersection(candidate, {{48.542873, -92.634931}, {48.508252, -92.63111699999999}}) ^ isIntersection(candidate, {{48.508252, -92.63111699999999}, {48.466915, -92.657101}}) ^ isIntersection(candidate, {{48.466915, -92.657101}, {48.440827, -92.57563599999999}}) ^ isIntersection(candidate, {{48.440827, -92.57563599999999}, {48.448313, -92.51491}}) ^ isIntersection(candidate, {{48.448313, -92.51491}, {48.414204, -92.45632499999999}}) ^ isIntersection(candidate, {{48.414204, -92.45632499999999}, {48.351836, -92.469948}}) ^ isIntersection(candidate, {{48.351836, -92.469948}, {48.295463, -92.416285}}) ^ isIntersection(candidate, {{48.295463, -92.416285}, {48.220268, -92.369174}}) ^ isIntersection(candidate, {{48.220268, -92.369174}, {48.240527, -92.31466499999999}}) ^ isIntersection(candidate, {{48.240527, -92.31466499999999}, {48.278118, -92.29566799999999}}) ^ isIntersection(candidate, {{48.278118, -92.29566799999999}, {48.323957, -92.295412}}) ^ isIntersection(candidate, {{48.323957, -92.295412}, {48.354932999999996, -92.26227999999999}}) ^ isIntersection(candidate, {{48.354932999999996, -92.26227999999999}, {48.363279, -92.162161}}) ^ isIntersection(candidate, {{29.581616, -92.15862399999999}, {29.539354, -92.25186}}) ^ isIntersection(candidate, {{29.539354, -92.25186}, {29.531496999999998, -92.323465}}) ^ isIntersection(candidate, {{29.531496999999998, -92.323465}, {29.547476999999997, -92.40986}}) ^ isIntersection(candidate, {{29.547476999999997, -92.40986}, {29.561080999999998, -92.473585}}) ^ isIntersection(candidate, {{29.561080999999998, -92.473585}, {29.577396999999998, -92.568038}}) ^ isIntersection(candidate, {{29.577396999999998, -92.568038}, {29.5890590161735, -92.6172344374499}}) ^ isIntersection(candidate, {{29.5890590161735, -92.6172344374499}, {29.605000999999998, -92.68448599999999}}) ^ isIntersection(candidate, {{29.605000999999998, -92.68448599999999}, {29.680284999999998, -92.879992}}) ^ isIntersection(candidate, {{29.680284999999998, -92.879992}, {29.723845999999998, -92.993128}}) ^ isIntersection(candidate, {{29.723845999999998, -92.993128}, {29.749125, -93.08818199999999}}) ^ isIntersection(candidate, {{29.749125, -93.08818199999999}, {29.770487, -93.17693}}) ^ isIntersection(candidate, {{29.770487, -93.17693}, {29.775070999999997, -93.29557299999999}}) ^ isIntersection(candidate, {{29.775070999999997, -93.29557299999999}, {29.767356999999997, -93.411087}}) ^ isIntersection(candidate, {{29.767356999999997, -93.411087}, {29.763299, -93.538462}}) ^ isIntersection(candidate, {{29.763299, -93.538462}, {29.736342999999998, -93.741948}}) ^ isIntersection(candidate, {{29.736342999999998, -93.741948}, {29.715259999999997, -93.79925}}) ^ isIntersection(candidate, {{29.715259999999997, -93.79925}, {29.690618999999998, -93.837971}}) ^ isIntersection(candidate, {{29.690618999999998, -93.837971}, {29.679007, -93.861291}}) ^ isIntersection(candidate, {{29.679007, -93.861291}, {29.682212999999997, -93.961867}}) ^ isIntersection(candidate, {{29.682212999999997, -93.961867}, {29.671163, -94.056506}}) ^ isIntersection(candidate, {{29.671163, -94.056506}, {29.636588, -94.161549}});
                        } else {
                            return isIntersection(candidate, {{48.354932999999996, -92.26227999999999}, {48.363279, -92.162161}}) ^ isIntersection(candidate, {{48.363279, -92.162161}, {48.359213, -92.055228}}) ^ isIntersection(candidate, {{48.359213, -92.055228}, {48.321355, -92.00013299999999}}) ^ isIntersection(candidate, {{48.321355, -92.00013299999999}, {48.247800999999995, -91.980772}}) ^ isIntersection(candidate, {{48.247800999999995, -91.980772}, {48.237699, -91.89347}}) ^ isIntersection(candidate, {{48.237699, -91.89347}, {48.20577591545359, -91.7972835799087}}) ^ isIntersection(candidate, {{48.20577591545359, -91.7972835799087}, {48.200432, -91.781182}}) ^ isIntersection(candidate, {{48.200432, -91.781182}, {48.19913, -91.71493099999999}}) ^ isIntersection(candidate, {{48.19913, -91.71493099999999}, {48.11933, -91.69236599999999}}) ^ isIntersection(candidate, {{48.11933, -91.69236599999999}, {48.108267999999995, -91.55927199999999}}) ^ isIntersection(candidate, {{48.108267999999995, -91.55927199999999}, {48.053267999999996, -91.542512}}) ^ isIntersection(candidate, {{48.053267999999996, -91.542512}, {48.06677, -91.465499}}) ^ isIntersection(candidate, {{47.139156, -91.456965}, {47.089917, -91.57381699999999}}) ^ isIntersection(candidate, {{47.089917, -91.57381699999999}, {47.026491, -91.644564}}) ^ isIntersection(candidate, {{47.026491, -91.644564}, {46.982853, -91.73709799999999}}) ^ isIntersection(candidate, {{46.982853, -91.73709799999999}, {46.9427806471419, -91.7939959120814}}) ^ isIntersection(candidate, {{46.9427806471419, -91.7939959120814}, {46.933727, -91.806851}}) ^ isIntersection(candidate, {{46.933727, -91.806851}, {46.891236, -91.906483}}) ^ isIntersection(candidate, {{46.891236, -91.906483}, {46.833726999999996, -92.01340499999999}}) ^ isIntersection(candidate, {{46.833726999999996, -92.01340499999999}, {46.804038, -92.062088}}) ^ isIntersection(candidate, {{46.804038, -92.062088}, {46.706469, -92.01529}}) ^ isIntersection(candidate, {{46.706469, -92.01529}, {46.682539, -91.961889}}) ^ isIntersection(candidate, {{46.682539, -91.961889}, {46.690211, -91.886963}}) ^ isIntersection(candidate, {{46.690211, -91.886963}, {46.690176, -91.820027}}) ^ isIntersection(candidate, {{46.690176, -91.820027}, {46.734733, -91.645502}}) ^ isIntersection(candidate, {{46.734733, -91.645502}, {46.757487999999995, -91.574291}}) ^ isIntersection(candidate, {{46.757487999999995, -91.574291}, {46.7574752934595, -91.55134153565639}}) ^ isIntersection(candidate, {{46.7574752934595, -91.55134153565639}, {46.757453, -91.511077}}) ^ isIntersection(candidate, {{46.757453, -91.511077}, {46.78964, -91.411799}}) ^ isIntersection(candidate, {{29.469960999999998, -91.46096299999999}, {29.499115999999997, -91.48559}}) ^ isIntersection(candidate, {{29.499115999999997, -91.48559}, {29.531543, -91.531021}}) ^ isIntersection(candidate, {{29.531543, -91.531021}, {29.565887999999998, -91.53744499999999}}) ^ isIntersection(candidate, {{29.565887999999998, -91.53744499999999}, {29.594352999999998, -91.541974}}) ^ isIntersection(candidate, {{29.594352999999998, -91.541974}, {29.631155999999997, -91.600179}}) ^ isIntersection(candidate, {{29.631155999999997, -91.600179}, {29.630625, -91.64383199999999}}) ^ isIntersection(candidate, {{29.630625, -91.64383199999999}, {29.69924, -91.623829}}) ^ isIntersection(candidate, {{29.69924, -91.623829}, {29.745822, -91.66712799999999}}) ^ isIntersection(candidate, {{29.745822, -91.66712799999999}, {29.74937, -91.737253}}) ^ isIntersection(candidate, {{29.74937, -91.737253}, {29.725096999999998, -91.80814199999999}}) ^ isIntersection(candidate, {{29.725096999999998, -91.80814199999999}, {29.702935999999998, -91.85307}}) ^ isIntersection(candidate, {{29.702935999999998, -91.85307}, {29.6673954637599, -91.8625569965226}}) ^ isIntersection(candidate, {{29.6673954637599, -91.8625569965226}, {29.627277, -91.873266}}) ^ isIntersection(candidate, {{29.627277, -91.873266}, {29.595951999999997, -91.80373}}) ^ isIntersection(candidate, {{29.595951999999997, -91.80373}, {29.569328, -91.711081}}) ^ isIntersection(candidate, {{29.569328, -91.711081}, {29.490361999999998, -91.76826299999999}}) ^ isIntersection(candidate, {{29.490361999999998, -91.76826299999999}, {29.473924999999998, -91.821579}}) ^ isIntersection(candidate, {{29.473924999999998, -91.821579}, {29.518513, -91.91532099999999}}) ^ isIntersection(candidate, {{29.518513, -91.91532099999999}, {29.572668999999998, -92.030186}}) ^ isIntersection(candidate, {{29.572668999999998, -92.030186}, {29.577480288972, -92.0428943038274}}) ^ isIntersection(candidate, {{29.577480288972, -92.0428943038274}, {29.585665, -92.06451299999999}}) ^ isIntersection(candidate, {{29.585665, -92.06451299999999}, {29.581616, -92.15862399999999}}) ^ isIntersection(candidate, {{29.581616, -92.15862399999999}, {29.539354, -92.25186}});
                        }
                    }
                } else {
                    if (candidate.longitude < -90.078125) {
                        if (candidate.longitude < -90.84716796875) {
                            return isIntersection(candidate, {{48.053267999999996, -91.542512}, {48.06677, -91.465499}}) ^ isIntersection(candidate, {{48.06677, -91.465499}, {48.069627, -91.336578}}) ^ isIntersection(candidate, {{48.069627, -91.336578}, {48.084087, -91.250112}}) ^ isIntersection(candidate, {{48.084087, -91.250112}, {48.140474999999995, -91.15610699999999}}) ^ isIntersection(candidate, {{48.140474999999995, -91.15610699999999}, {48.189459, -91.03555}}) ^ isIntersection(candidate, {{48.189459, -91.03555}, {48.1905788218987, -91.0325394612651}}) ^ isIntersection(candidate, {{48.1905788218987, -91.0325394612651}, {48.237339, -90.906829}}) ^ isIntersection(candidate, {{48.237339, -90.906829}, {48.243576, -90.84362399999999}}) ^ isIntersection(candidate, {{47.624342999999996, -90.73592699999999}, {47.5569, -90.86827}}) ^ isIntersection(candidate, {{47.5569, -90.86827}, {47.464963999999995, -91.023124}}) ^ isIntersection(candidate, {{47.464963999999995, -91.023124}, {47.381464, -91.146958}}) ^ isIntersection(candidate, {{47.381464, -91.146958}, {47.279289999999996, -91.262512}}) ^ isIntersection(candidate, {{47.279289999999996, -91.262512}, {47.187293, -91.38702099999999}}) ^ isIntersection(candidate, {{47.187293, -91.38702099999999}, {47.139156, -91.456965}}) ^ isIntersection(candidate, {{47.139156, -91.456965}, {47.089917, -91.57381699999999}}) ^ isIntersection(candidate, {{46.757453, -91.511077}, {46.78964, -91.411799}}) ^ isIntersection(candidate, {{46.78964, -91.411799}, {46.798136, -91.360804}}) ^ isIntersection(candidate, {{46.798136, -91.360804}, {46.826825, -91.314815}}) ^ isIntersection(candidate, {{46.826825, -91.314815}, {46.836887, -91.256705}}) ^ isIntersection(candidate, {{46.836887, -91.256705}, {46.866824, -91.211647}}) ^ isIntersection(candidate, {{46.866824, -91.211647}, {46.84476, -91.16760099999999}}) ^ isIntersection(candidate, {{46.84476, -91.16760099999999}, {46.870008, -91.13047499999999}}) ^ isIntersection(candidate, {{46.870008, -91.13047499999999}, {46.879470999999995, -91.087357}}) ^ isIntersection(candidate, {{46.879470999999995, -91.087357}, {46.903053, -91.03451799999999}}) ^ isIntersection(candidate, {{46.903053, -91.03451799999999}, {46.925602, -90.984617}}) ^ isIntersection(candidate, {{46.925602, -90.984617}, {46.982274, -90.989375}}) ^ isIntersection(candidate, {{46.982274, -90.989375}, {47.001888, -90.924128}}) ^ isIntersection(candidate, {{47.001888, -90.924128}, {46.962558, -90.85284}}) ^ isIntersection(candidate, {{46.962558, -90.85284}, {46.938738, -90.80628}}) ^ isIntersection(candidate, {{46.823142999999995, -90.798936}, {46.765631, -90.861046}}) ^ isIntersection(candidate, {{46.765631, -90.861046}, {46.739957, -90.88084099999999}}) ^ isIntersection(candidate, {{46.739957, -90.88084099999999}, {46.699582, -90.852704}}) ^ isIntersection(candidate, {{46.699582, -90.852704}, {46.658409999999996, -90.91515199999999}}) ^ isIntersection(candidate, {{46.658409999999996, -90.91515199999999}, {46.617295999999996, -90.932626}}) ^ isIntersection(candidate, {{46.617295999999996, -90.932626}, {46.592503, -90.95564999999999}}) ^ isIntersection(candidate, {{46.592503, -90.95564999999999}, {46.5874880724456, -90.9252293953426}}) ^ isIntersection(candidate, {{46.5874880724456, -90.9252293953426}, {46.58305, -90.898308}}) ^ isIntersection(candidate, {{46.58305, -90.898308}, {46.616066, -90.829031}}) ^ isIntersection(candidate, {{29.042137999999998, -90.81255}, {29.056064, -90.867853}}) ^ isIntersection(candidate, {{29.056064, -90.867853}, {29.104891, -90.877583}}) ^ isIntersection(candidate, {{29.104891, -90.877583}, {29.162373, -90.94187699999999}}) ^ isIntersection(candidate, {{29.162373, -90.94187699999999}, {29.169480999999998, -91.000096}}) ^ isIntersection(candidate, {{29.169480999999998, -91.000096}, {29.187711, -91.094015}}) ^ isIntersection(candidate, {{29.187711, -91.094015}, {29.2181, -91.158148}}) ^ isIntersection(candidate, {{29.2181, -91.158148}, {29.247775999999998, -91.278792}}) ^ isIntersection(candidate, {{29.247775999999998, -91.278792}, {29.298775, -91.334885}}) ^ isIntersection(candidate, {{29.298775, -91.334885}, {29.329825, -91.276647}}) ^ isIntersection(candidate, {{29.329825, -91.276647}, {29.360975999999997, -91.265452}}) ^ isIntersection(candidate, {{29.360975999999997, -91.265452}, {29.361363733346, -91.2663226707192}}) ^ isIntersection(candidate, {{29.361363733346, -91.2663226707192}, {29.391524999999998, -91.334051}}) ^ isIntersection(candidate, {{29.391524999999998, -91.334051}, {29.420664, -91.363967}}) ^ isIntersection(candidate, {{29.420664, -91.363967}, {29.444437999999998, -91.34751399999999}}) ^ isIntersection(candidate, {{29.444437999999998, -91.34751399999999}, {29.497114999999997, -91.394307}}) ^ isIntersection(candidate, {{29.497114999999997, -91.394307}, {29.469960999999998, -91.46096299999999}}) ^ isIntersection(candidate, {{29.469960999999998, -91.46096299999999}, {29.499115999999997, -91.48559}});
                        } else {
                            return isIntersection(candidate, {{47.024324, -90.776921}, {47.036105, -90.74018}}) ^ isIntersection(candidate, {{47.036105, -90.74018}, {47.054677999999996, -90.65042199999999}}) ^ isIntersection(candidate, {{47.054677999999996, -90.65042199999999}, {47.037012999999995, -90.560936}}) ^ isIntersection(candidate, {{47.037012999999995, -90.560936}, {47.017382999999995, -90.54487499999999}}) ^ isIntersection(candidate, {{47.017382999999995, -90.54487499999999}, {46.961407, -90.511623}}) ^ isIntersection(candidate, {{46.961407, -90.511623}, {46.935663999999996, -90.524056}}) ^ isIntersection(candidate, {{46.935663999999996, -90.524056}, {46.915461, -90.549104}}) ^ isIntersection(candidate, {{46.915461, -90.549104}, {46.906724, -90.637124}}) ^ isIntersection(candidate, {{46.906724, -90.637124}, {46.956032, -90.679446}}) ^ isIntersection(candidate, {{46.956032, -90.679446}, {46.98526, -90.712032}}) ^ isIntersection(candidate, {{46.98526, -90.712032}, {47.002327, -90.767985}}) ^ isIntersection(candidate, {{47.002327, -90.767985}, {47.024324, -90.776921}}) ^ isIntersection(candidate, {{48.237339, -90.906829}, {48.243576, -90.84362399999999}}) ^ isIntersection(candidate, {{48.243576, -90.84362399999999}, {48.177833, -90.80420699999999}}) ^ isIntersection(candidate, {{48.177833, -90.80420699999999}, {48.122229, -90.77596199999999}}) ^ isIntersection(candidate, {{48.122229, -90.77596199999999}, {48.096008999999995, -90.70370199999999}}) ^ isIntersection(candidate, {{48.096008999999995, -90.70370199999999}, {48.12262, -90.566113}}) ^ isIntersection(candidate, {{48.12262, -90.566113}, {48.106075999999995, -90.471019}}) ^ isIntersection(candidate, {{48.106075999999995, -90.471019}, {48.103792999999996, -90.31723}}) ^ isIntersection(candidate, {{48.103792999999996, -90.31723}, {48.112136, -90.136191}}) ^ isIntersection(candidate, {{48.112136, -90.136191}, {48.087588, -90.029626}}) ^ isIntersection(candidate, {{47.811105, -90.072025}, {47.77813, -90.187636}}) ^ isIntersection(candidate, {{47.77813, -90.187636}, {47.753771, -90.32344599999999}}) ^ isIntersection(candidate, {{47.753771, -90.32344599999999}, {47.73515, -90.42139}}) ^ isIntersection(candidate, {{47.73515, -90.42139}, {47.703055, -90.537105}}) ^ isIntersection(candidate, {{47.703055, -90.537105}, {47.656175999999995, -90.647837}}) ^ isIntersection(candidate, {{47.656175999999995, -90.647837}, {47.624342999999996, -90.73592699999999}}) ^ isIntersection(candidate, {{47.624342999999996, -90.73592699999999}, {47.5569, -90.86827}}) ^ isIntersection(candidate, {{46.962558, -90.85284}, {46.938738, -90.80628}}) ^ isIntersection(candidate, {{46.938738, -90.80628}, {46.894254, -90.745305}}) ^ isIntersection(candidate, {{46.894254, -90.745305}, {46.823142999999995, -90.798936}}) ^ isIntersection(candidate, {{46.823142999999995, -90.798936}, {46.765631, -90.861046}}) ^ isIntersection(candidate, {{46.58305, -90.898308}, {46.616066, -90.829031}}) ^ isIntersection(candidate, {{46.616066, -90.829031}, {46.624941, -90.794775}}) ^ isIntersection(candidate, {{46.624941, -90.794775}, {46.646288999999996, -90.755287}}) ^ isIntersection(candidate, {{46.646288999999996, -90.755287}, {46.692267, -90.73725999999999}}) ^ isIntersection(candidate, {{46.692267, -90.73725999999999}, {46.645326, -90.66327299999999}}) ^ isIntersection(candidate, {{46.645326, -90.66327299999999}, {46.584891999999996, -90.56555999999999}}) ^ isIntersection(candidate, {{46.584891999999996, -90.56555999999999}, {46.586236258750496, -90.54857855596609}}) ^ isIntersection(candidate, {{46.586236258750496, -90.54857855596609}, {46.589614, -90.505909}}) ^ isIntersection(candidate, {{46.589614, -90.505909}, {46.561492, -90.437596}}) ^ isIntersection(candidate, {{46.561492, -90.437596}, {46.566094, -90.41813599999999}}) ^ isIntersection(candidate, {{46.566094, -90.41813599999999}, {46.607744, -90.327626}}) ^ isIntersection(candidate, {{46.607744, -90.327626}, {46.624485, -90.23760899999999}}) ^ isIntersection(candidate, {{46.624485, -90.23760899999999}, {46.668271999999995, -90.04542}}) ^ isIntersection(candidate, {{29.183687, -90.058512}, {29.1644753566211, -90.0898354481942}}) ^ isIntersection(candidate, {{29.1644753566211, -90.0898354481942}, {29.144285999999997, -90.122753}}) ^ isIntersection(candidate, {{29.144285999999997, -90.122753}, {29.085075, -90.223587}}) ^ isIntersection(candidate, {{29.085075, -90.223587}, {29.063803, -90.334935}}) ^ isIntersection(candidate, {{29.063803, -90.334935}, {29.058444385928198, -90.4094709017198}}) ^ isIntersection(candidate, {{29.058444385928198, -90.4094709017198}, {29.056053, -90.442734}}) ^ isIntersection(candidate, {{29.056053, -90.442734}, {29.05876, -90.488117}}) ^ isIntersection(candidate, {{29.05876, -90.488117}, {29.057720999999997, -90.65211599999999}}) ^ isIntersection(candidate, {{29.057720999999997, -90.65211599999999}, {29.04006, -90.74837699999999}}) ^ isIntersection(candidate, {{29.04006, -90.74837699999999}, {29.042137999999998, -90.81255}}) ^ isIntersection(candidate, {{29.042137999999998, -90.81255}, {29.056064, -90.867853}});
                        }
                    } else {
                        if (candidate.longitude < -89.48486328125) {
                            return isIntersection(candidate, {{48.112136, -90.136191}, {48.087588, -90.029626}}) ^ isIntersection(candidate, {{48.087588, -90.029626}, {48.02035, -89.973433}}) ^ isIntersection(candidate, {{48.02035, -89.973433}, {47.989898, -89.86815299999999}}) ^ isIntersection(candidate, {{47.989898, -89.86815299999999}, {48.023325, -89.749314}}) ^ isIntersection(candidate, {{48.023325, -89.749314}, {48.011517, -89.625087}}) ^ isIntersection(candidate, {{48.011517, -89.625087}, {48.014528, -89.489226}}) ^ isIntersection(candidate, {{48.014528, -89.489226}, {47.974849, -89.555015}}) ^ isIntersection(candidate, {{47.974849, -89.555015}, {47.951215999999995, -89.66061599999999}}) ^ isIntersection(candidate, {{47.951215999999995, -89.66061599999999}, {47.918183, -89.737539}}) ^ isIntersection(candidate, {{47.918183, -89.737539}, {47.891358, -89.793539}}) ^ isIntersection(candidate, {{47.891358, -89.793539}, {47.862061999999995, -89.923649}}) ^ isIntersection(candidate, {{47.862061999999995, -89.923649}, {47.830514, -89.974296}}) ^ isIntersection(candidate, {{47.830514, -89.974296}, {47.811105, -90.072025}}) ^ isIntersection(candidate, {{47.811105, -90.072025}, {47.77813, -90.187636}}) ^ isIntersection(candidate, {{46.624485, -90.23760899999999}, {46.668271999999995, -90.04542}}) ^ isIntersection(candidate, {{46.668271999999995, -90.04542}, {46.740324, -89.918466}}) ^ isIntersection(candidate, {{46.740324, -89.918466}, {46.765471149277, -89.88432958041149}}) ^ isIntersection(candidate, {{46.765471149277, -89.88432958041149}, {46.804052999999996, -89.83195599999999}}) ^ isIntersection(candidate, {{46.804052999999996, -89.83195599999999}, {46.830413, -89.720277}}) ^ isIntersection(candidate, {{46.830413, -89.720277}, {46.82534, -89.64225499999999}}) ^ isIntersection(candidate, {{46.82534, -89.64225499999999}, {46.831858999999994, -89.569808}}) ^ isIntersection(candidate, {{46.831858999999994, -89.569808}, {46.841620999999996, -89.49907999999999}}) ^ isIntersection(candidate, {{46.841620999999996, -89.49907999999999}, {46.843982999999994, -89.415154}}) ^ isIntersection(candidate, {{30.191561, -89.475824}, {30.180753, -89.524504}}) ^ isIntersection(candidate, {{30.180753, -89.524504}, {30.142814157559297, -89.6050884565546}}) ^ isIntersection(candidate, {{30.142814157559297, -89.6050884565546}, {30.118381, -89.65698599999999}}) ^ isIntersection(candidate, {{30.118381, -89.65698599999999}, {30.076017999999998, -89.683712}}) ^ isIntersection(candidate, {{30.076017999999998, -89.683712}, {30.045372, -89.782534}}) ^ isIntersection(candidate, {{30.045372, -89.782534}, {30.01841, -89.84506499999999}}) ^ isIntersection(candidate, {{30.01841, -89.84506499999999}, {30.016381840570098, -89.84529711957241}}) ^ isIntersection(candidate, {{30.016381840570098, -89.84529711957241}, {29.952721, -89.852583}}) ^ isIntersection(candidate, {{29.952721, -89.852583}, {29.934002999999997, -89.795969}}) ^ isIntersection(candidate, {{29.934002999999997, -89.795969}, {29.917647, -89.744272}}) ^ isIntersection(candidate, {{29.917647, -89.744272}, {29.874084999999997, -89.701725}}) ^ isIntersection(candidate, {{29.874084999999997, -89.701725}, {29.863602, -89.647064}}) ^ isIntersection(candidate, {{29.863602, -89.647064}, {29.881408999999998, -89.598129}}) ^ isIntersection(candidate, {{29.881408999999998, -89.598129}, {29.983738, -89.57442499999999}}) ^ isIntersection(candidate, {{29.983738, -89.57442499999999}, {30.040972, -89.494064}}) ^ isIntersection(candidate, {{30.040972, -89.494064}, {30.060958999999997, -89.44461799999999}}) ^ isIntersection(candidate, {{29.651737999999998, -89.46556199999999}, {29.6334554250588, -89.5009667531337}}) ^ isIntersection(candidate, {{29.6334554250588, -89.5009667531337}, {29.631508, -89.50473799999999}}) ^ isIntersection(candidate, {{29.631508, -89.50473799999999}, {29.648567, -89.535202}}) ^ isIntersection(candidate, {{29.648567, -89.535202}, {29.610294999999997, -89.602109}}) ^ isIntersection(candidate, {{29.610294999999997, -89.602109}, {29.543785999999997, -89.56461499999999}}) ^ isIntersection(candidate, {{29.543785999999997, -89.56461499999999}, {29.494044, -89.56960699999999}}) ^ isIntersection(candidate, {{29.494044, -89.56960699999999}, {29.434566999999998, -89.53215}}) ^ isIntersection(candidate, {{29.434566999999998, -89.53215}, {29.406222, -89.48231799999999}}) ^ isIntersection(candidate, {{29.215052999999997, -89.482844}, {29.242527, -89.564551}}) ^ isIntersection(candidate, {{29.242527, -89.564551}, {29.252022999999998, -89.606651}}) ^ isIntersection(candidate, {{29.252022999999998, -89.606651}, {29.290530999999998, -89.639663}}) ^ isIntersection(candidate, {{29.290530999999998, -89.639663}, {29.304026, -89.726162}}) ^ isIntersection(candidate, {{29.304026, -89.726162}, {29.318823, -89.842641}}) ^ isIntersection(candidate, {{29.318823, -89.842641}, {29.307102999999998, -89.88346299999999}}) ^ isIntersection(candidate, {{29.307102999999998, -89.88346299999999}, {29.293036606496003, -89.9027063240243}}) ^ isIntersection(candidate, {{29.293036606496003, -89.9027063240243}, {29.253743999999998, -89.95645999999999}}) ^ isIntersection(candidate, {{29.253743999999998, -89.95645999999999}, {29.183687, -90.058512}}) ^ isIntersection(candidate, {{29.183687, -90.058512}, {29.1644753566211, -90.0898354481942}});
                        } else {
                            return isIntersection(candidate, {{47.908069, -89.22133199999999}, {47.93503, -89.179154}}) ^ isIntersection(candidate, {{47.93503, -89.179154}, {47.992525, -89.018303}}) ^ isIntersection(candidate, {{47.900684999999996, -88.898986}, {47.85575, -89.044463}}) ^ isIntersection(candidate, {{47.85575, -89.044463}, {47.824014999999996, -89.157738}}) ^ isIntersection(candidate, {{47.824014999999996, -89.157738}, {47.850243, -89.20181199999999}}) ^ isIntersection(candidate, {{47.850243, -89.20181199999999}, {47.876101999999996, -89.255202}}) ^ isIntersection(candidate, {{47.876101999999996, -89.255202}, {47.908069, -89.22133199999999}}) ^ isIntersection(candidate, {{46.841620999999996, -89.49907999999999}, {46.843982999999994, -89.415154}}) ^ isIntersection(candidate, {{46.843982999999994, -89.415154}, {46.912954, -89.227914}}) ^ isIntersection(candidate, {{46.912954, -89.227914}, {46.984859, -89.142595}}) ^ isIntersection(candidate, {{46.984859, -89.142595}, {47.00114, -89.02893}}) ^ isIntersection(candidate, {{47.00114, -89.02893}, {47.008496, -88.959409}}) ^ isIntersection(candidate, {{30.390798, -88.971233}, {30.368097, -89.083237}}) ^ isIntersection(candidate, {{30.368097, -89.083237}, {30.331197, -89.18683999999999}}) ^ isIntersection(candidate, {{30.331197, -89.18683999999999}, {30.307596, -89.294444}}) ^ isIntersection(candidate, {{30.307596, -89.294444}, {30.3039947802441, -89.3070237608445}}) ^ isIntersection(candidate, {{30.3039947802441, -89.3070237608445}, {30.293196, -89.344746}}) ^ isIntersection(candidate, {{30.293196, -89.344746}, {30.245390999999998, -89.424624}}) ^ isIntersection(candidate, {{30.245390999999998, -89.424624}, {30.205098, -89.447465}}) ^ isIntersection(candidate, {{30.205098, -89.447465}, {30.191561, -89.475824}}) ^ isIntersection(candidate, {{30.191561, -89.475824}, {30.180753, -89.524504}}) ^ isIntersection(candidate, {{30.040972, -89.494064}, {30.060958999999997, -89.44461799999999}}) ^ isIntersection(candidate, {{30.060958999999997, -89.44461799999999}, {30.059172, -89.342163}}) ^ isIntersection(candidate, {{30.059172, -89.342163}, {30.091569999999997, -89.303026}}) ^ isIntersection(candidate, {{30.091569999999997, -89.303026}, {30.134957, -89.23316799999999}}) ^ isIntersection(candidate, {{30.134957, -89.23316799999999}, {30.149344, -89.183256}}) ^ isIntersection(candidate, {{30.149344, -89.183256}, {30.063934, -89.185799}}) ^ isIntersection(candidate, {{30.063934, -89.185799}, {29.993523, -89.21567499999999}}) ^ isIntersection(candidate, {{29.993523, -89.21567499999999}, {29.925483999999997, -89.231178}}) ^ isIntersection(candidate, {{29.925483999999997, -89.231178}, {29.877080999999997, -89.23629799999999}}) ^ isIntersection(candidate, {{29.877080999999997, -89.23629799999999}, {29.803053, -89.293251}}) ^ isIntersection(candidate, {{29.803053, -89.293251}, {29.756355, -89.271034}}) ^ isIntersection(candidate, {{29.756355, -89.271034}, {29.770591999999997, -89.39916199999999}}) ^ isIntersection(candidate, {{29.770591999999997, -89.39916199999999}, {29.681808, -89.403956}}) ^ isIntersection(candidate, {{29.681808, -89.403956}, {29.651737999999998, -89.46556199999999}}) ^ isIntersection(candidate, {{29.651737999999998, -89.46556199999999}, {29.6334554250588, -89.5009667531337}}) ^ isIntersection(candidate, {{29.434566999999998, -89.53215}, {29.406222, -89.48231799999999}}) ^ isIntersection(candidate, {{29.406222, -89.48231799999999}, {29.391785, -89.380001}}) ^ isIntersection(candidate, {{29.391785, -89.380001}, {29.388037999999998, -89.312085}}) ^ isIntersection(candidate, {{29.388037999999998, -89.312085}, {29.336872, -89.257852}}) ^ isIntersection(candidate, {{29.336872, -89.257852}, {29.344417999999997, -89.200389}}) ^ isIntersection(candidate, {{29.344417999999997, -89.200389}, {29.279339999999998, -89.134337}}) ^ isIntersection(candidate, {{29.279339999999998, -89.134337}, {29.219531999999997, -89.116653}}) ^ isIntersection(candidate, {{29.219531999999997, -89.116653}, {29.215152999999997, -89.02597399999999}}) ^ isIntersection(candidate, {{29.215152999999997, -89.02597399999999}, {29.166912999999997, -89.01428}}) ^ isIntersection(candidate, {{29.166912999999997, -89.01428}, {29.090714, -89.066617}}) ^ isIntersection(candidate, {{29.090714, -89.066617}, {29.074097, -89.11653}}) ^ isIntersection(candidate, {{29.074097, -89.11653}, {29.02967, -89.148792}}) ^ isIntersection(candidate, {{29.02967, -89.148792}, {28.991622999999997, -89.142866}}) ^ isIntersection(candidate, {{28.991622999999997, -89.142866}, {29.022515, -89.218673}}) ^ isIntersection(candidate, {{29.022515, -89.218673}, {29.058358, -89.259354}}) ^ isIntersection(candidate, {{29.058358, -89.259354}, {29.010251, -89.32201099999999}}) ^ isIntersection(candidate, {{29.010251, -89.32201099999999}, {28.933812, -89.400966}}) ^ isIntersection(candidate, {{28.933812, -89.400966}, {29.016963999999998, -89.40352999999999}}) ^ isIntersection(candidate, {{29.016963999999998, -89.40352999999999}, {29.071848, -89.361098}}) ^ isIntersection(candidate, {{29.071848, -89.361098}, {29.123576, -89.390515}}) ^ isIntersection(candidate, {{29.123576, -89.390515}, {29.149023, -89.432932}}) ^ isIntersection(candidate, {{29.149023, -89.432932}, {29.215052999999997, -89.482844}}) ^ isIntersection(candidate, {{29.215052999999997, -89.482844}, {29.242527, -89.564551}});
                        }
                    }
                }
            } else {
                if (candidate.longitude < -87.44140625) {
                    if (candidate.longitude < -87.880859375) {
                        if (candidate.longitude < -88.2763671875) {
                            return isIntersection(candidate, {{47.93503, -89.179154}, {47.992525, -89.018303}}) ^ isIntersection(candidate, {{47.992525, -89.018303}, {48.01959, -88.94088599999999}}) ^ isIntersection(candidate, {{48.01959, -88.94088599999999}, {48.034769999999995, -88.893701}}) ^ isIntersection(candidate, {{48.034769999999995, -88.893701}, {48.057006, -88.81608399999999}}) ^ isIntersection(candidate, {{48.057006, -88.81608399999999}, {48.101914, -88.72819799999999}}) ^ isIntersection(candidate, {{48.101914, -88.72819799999999}, {48.148306999999996, -88.631908}}) ^ isIntersection(candidate, {{48.148306999999996, -88.631908}, {48.174890999999995, -88.547033}}) ^ isIntersection(candidate, {{48.174890999999995, -88.547033}, {48.21065, -88.425162}}) ^ isIntersection(candidate, {{48.21065, -88.425162}, {48.166764, -88.427373}}) ^ isIntersection(candidate, {{48.166764, -88.427373}, {48.102111, -88.55044}}) ^ isIntersection(candidate, {{48.102111, -88.55044}, {48.040758, -88.579172}}) ^ isIntersection(candidate, {{48.040758, -88.579172}, {47.995134, -88.718555}}) ^ isIntersection(candidate, {{47.995134, -88.718555}, {47.965322, -88.85292299999999}}) ^ isIntersection(candidate, {{47.965322, -88.85292299999999}, {47.900684999999996, -88.898986}}) ^ isIntersection(candidate, {{47.900684999999996, -88.898986}, {47.85575, -89.044463}}) ^ isIntersection(candidate, {{47.00114, -89.02893}, {47.008496, -88.959409}}) ^ isIntersection(candidate, {{47.008496, -88.959409}, {47.033599097856005, -88.9333684513417}}) ^ isIntersection(candidate, {{47.033599097856005, -88.9333684513417}, {47.042156, -88.924492}}) ^ isIntersection(candidate, {{47.042156, -88.924492}, {47.100575, -88.88914}}) ^ isIntersection(candidate, {{47.100575, -88.88914}, {47.141399, -88.81483399999999}}) ^ isIntersection(candidate, {{47.141399, -88.81483399999999}, {47.204831, -88.69966}}) ^ isIntersection(candidate, {{47.204831, -88.69966}, {47.242360999999995, -88.584912}}) ^ isIntersection(candidate, {{47.242360999999995, -88.584912}, {47.286107247715, -88.5129465056361}}) ^ isIntersection(candidate, {{47.286107247715, -88.5129465056361}, {47.293503, -88.50077999999999}}) ^ isIntersection(candidate, {{47.293503, -88.50077999999999}, {47.371188, -88.418673}}) ^ isIntersection(candidate, {{47.371188, -88.418673}, {47.422391999999995, -88.285195}}) ^ isIntersection(candidate, {{47.422391999999995, -88.285195}, {47.448738, -88.217822}}) ^ isIntersection(candidate, {{47.139435999999996, -88.23989499999999}, {47.080493999999995, -88.340052}}) ^ isIntersection(candidate, {{47.080493999999995, -88.340052}, {47.004521999999994, -88.385606}}) ^ isIntersection(candidate, {{47.004521999999994, -88.385606}, {46.9419824250004, -88.4393631859438}}) ^ isIntersection(candidate, {{46.9419824250004, -88.4393631859438}, {46.923321, -88.455404}}) ^ isIntersection(candidate, {{46.923321, -88.455404}, {46.850559999999994, -88.477935}}) ^ isIntersection(candidate, {{46.850559999999994, -88.477935}, {46.872277, -88.372681}}) ^ isIntersection(candidate, {{46.872277, -88.372681}, {46.929612, -88.24443699999999}}) ^ isIntersection(candidate, {{30.318932999999998, -88.257764}, {30.368907999999998, -88.31160799999999}}) ^ isIntersection(candidate, {{30.368907999999998, -88.31160799999999}, {30.388005999999997, -88.36402199999999}}) ^ isIntersection(candidate, {{30.388005999999997, -88.36402199999999}, {30.369425, -88.395023}}) ^ isIntersection(candidate, {{30.369425, -88.395023}, {30.342115, -88.409927}}) ^ isIntersection(candidate, {{30.342115, -88.409927}, {30.347752999999997, -88.446495}}) ^ isIntersection(candidate, {{30.347752999999997, -88.446495}, {30.32002, -88.471875}}) ^ isIntersection(candidate, {{30.32002, -88.471875}, {30.340092, -88.522494}}) ^ isIntersection(candidate, {{30.340092, -88.522494}, {30.331063, -88.581929}}) ^ isIntersection(candidate, {{30.331063, -88.581929}, {30.353963999999998, -88.613006}}) ^ isIntersection(candidate, {{30.353963999999998, -88.613006}, {30.362098999999997, -88.66382}}) ^ isIntersection(candidate, {{30.362098999999997, -88.66382}, {30.343688999999998, -88.700587}}) ^ isIntersection(candidate, {{30.343688999999998, -88.700587}, {30.347621999999998, -88.746945}}) ^ isIntersection(candidate, {{30.347621999999998, -88.746945}, {30.357264173094897, -88.8003435152035}}) ^ isIntersection(candidate, {{30.357264173094897, -88.8003435152035}, {30.36059, -88.81876199999999}}) ^ isIntersection(candidate, {{30.36059, -88.81876199999999}, {30.393397999999998, -88.89393}}) ^ isIntersection(candidate, {{30.393397999999998, -88.89393}, {30.390798, -88.971233}}) ^ isIntersection(candidate, {{30.390798, -88.971233}, {30.368097, -89.083237}}) ^ isIntersection(candidate, {{29.215152999999997, -89.02597399999999}, {29.166912999999997, -89.01428}}) ^ isIntersection(candidate, {{29.166912999999997, -89.01428}, {29.090714, -89.066617}});
                        } else {
                            return isIntersection(candidate, {{47.422391999999995, -88.285195}, {47.448738, -88.217822}}) ^ isIntersection(candidate, {{47.448738, -88.217822}, {47.468961, -88.085252}}) ^ isIntersection(candidate, {{47.468961, -88.085252}, {47.478736999999995, -87.92926899999999}}) ^ isIntersection(candidate, {{47.478736999999995, -87.92926899999999}, {47.473301, -87.80118399999999}}) ^ isIntersection(candidate, {{47.392148, -87.800294}, {47.390073, -87.94161299999999}}) ^ isIntersection(candidate, {{47.390073, -87.94161299999999}, {47.335899, -87.94336}}) ^ isIntersection(candidate, {{47.335899, -87.94336}, {47.306275, -88.01647799999999}}) ^ isIntersection(candidate, {{47.306275, -88.01647799999999}, {47.261351, -88.096851}}) ^ isIntersection(candidate, {{47.261351, -88.096851}, {47.209241999999996, -88.19421799999999}}) ^ isIntersection(candidate, {{47.209241999999996, -88.19421799999999}, {47.199716895982, -88.2004506759337}}) ^ isIntersection(candidate, {{47.199716895982, -88.2004506759337}, {47.139435999999996, -88.23989499999999}}) ^ isIntersection(candidate, {{47.139435999999996, -88.23989499999999}, {47.080493999999995, -88.340052}}) ^ isIntersection(candidate, {{46.872277, -88.372681}, {46.929612, -88.24443699999999}}) ^ isIntersection(candidate, {{46.929612, -88.24443699999999}, {46.966665, -88.143688}}) ^ isIntersection(candidate, {{46.966665, -88.143688}, {46.918563, -88.065192}}) ^ isIntersection(candidate, {{46.918563, -88.065192}, {46.917449945276196, -88.04452168228148}}) ^ isIntersection(candidate, {{46.917449945276196, -88.04452168228148}, {46.909686, -87.900339}}) ^ isIntersection(candidate, {{46.909686, -87.900339}, {46.876726, -87.77693}}) ^ isIntersection(candidate, {{44.857771, -87.854681}, {44.818723, -87.904484}}) ^ isIntersection(candidate, {{44.818723, -87.904484}, {44.75608, -87.941453}}) ^ isIntersection(candidate, {{44.75608, -87.941453}, {44.720196, -87.983494}}) ^ isIntersection(candidate, {{44.720196, -87.983494}, {44.6776639390448, -87.9975734064425}}) ^ isIntersection(candidate, {{44.6776639390448, -87.9975734064425}, {44.664035, -88.002085}}) ^ isIntersection(candidate, {{44.664035, -88.002085}, {44.609288, -87.998716}}) ^ isIntersection(candidate, {{44.609288, -87.998716}, {44.572581, -88.041202}}) ^ isIntersection(candidate, {{44.572581, -88.041202}, {44.539215999999996, -88.005518}}) ^ isIntersection(candidate, {{44.539215999999996, -88.005518}, {44.529692999999995, -87.943801}}) ^ isIntersection(candidate, {{44.529692999999995, -87.943801}, {44.574135, -87.898888}}) ^ isIntersection(candidate, {{44.574135, -87.898888}, {44.608433999999995, -87.866884}}) ^ isIntersection(candidate, {{43.420677, -87.840955}, {43.307652, -87.889207}}) ^ isIntersection(candidate, {{43.307652, -87.889207}, {43.197108, -87.89628599999999}}) ^ isIntersection(candidate, {{43.197108, -87.89628599999999}, {43.192134632526496, -87.8965793111888}}) ^ isIntersection(candidate, {{43.192134632526496, -87.8965793111888}, {43.12591, -87.90048499999999}}) ^ isIntersection(candidate, {{43.12591, -87.90048499999999}, {43.064412, -87.870184}}) ^ isIntersection(candidate, {{43.064412, -87.870184}, {43.015814, -87.89578399999999}}) ^ isIntersection(candidate, {{43.015814, -87.89578399999999}, {42.944116, -87.842681}}) ^ isIntersection(candidate, {{30.228313999999997, -87.818867}, {30.239237, -87.89320099999999}}) ^ isIntersection(candidate, {{30.239237, -87.89320099999999}, {30.279798, -87.806466}}) ^ isIntersection(candidate, {{30.38345, -87.865017}, {30.446144, -87.914136}}) ^ isIntersection(candidate, {{30.446144, -87.914136}, {30.487357, -87.93335499999999}}) ^ isIntersection(candidate, {{30.487357, -87.93335499999999}, {30.550879, -87.90171099999999}}) ^ isIntersection(candidate, {{30.550879, -87.90171099999999}, {30.585893, -87.91495599999999}}) ^ isIntersection(candidate, {{30.585893, -87.91495599999999}, {30.652694, -87.93106999999999}}) ^ isIntersection(candidate, {{30.652694, -87.93106999999999}, {30.684956, -88.00839599999999}}) ^ isIntersection(candidate, {{30.684956, -88.00839599999999}, {30.644890999999998, -88.061998}}) ^ isIntersection(candidate, {{30.644890999999998, -88.061998}, {30.588292, -88.064898}}) ^ isIntersection(candidate, {{30.588292, -88.064898}, {30.546317, -88.081617}}) ^ isIntersection(candidate, {{30.546317, -88.081617}, {30.500902999999997, -88.103768}}) ^ isIntersection(candidate, {{30.500902999999997, -88.103768}, {30.401864999999997, -88.105699}}) ^ isIntersection(candidate, {{30.401864999999997, -88.105699}, {30.320729, -88.136173}}) ^ isIntersection(candidate, {{30.320729, -88.136173}, {30.321241999999998, -88.195664}}) ^ isIntersection(candidate, {{30.321241999999998, -88.195664}, {30.318932999999998, -88.257764}}) ^ isIntersection(candidate, {{30.318932999999998, -88.257764}, {30.368907999999998, -88.31160799999999}});
                        }
                    } else {
                        if (candidate.longitude < -87.716064453125) {
                            return isIntersection(candidate, {{47.478736999999995, -87.92926899999999}, {47.473301, -87.80118399999999}}) ^ isIntersection(candidate, {{47.473301, -87.80118399999999}, {47.455684999999995, -87.680067}}) ^ isIntersection(candidate, {{47.388625, -87.604704}, {47.392148, -87.800294}}) ^ isIntersection(candidate, {{47.392148, -87.800294}, {47.390073, -87.94161299999999}}) ^ isIntersection(candidate, {{46.909686, -87.900339}, {46.876726, -87.77693}}) ^ isIntersection(candidate, {{46.876726, -87.77693}, {46.841741999999996, -87.687164}}) ^ isIntersection(candidate, {{44.974233, -87.69649199999999}, {44.96275217176029, -87.7626384909711}}) ^ isIntersection(candidate, {{44.96275217176029, -87.7626384909711}, {44.954012999999996, -87.812989}}) ^ isIntersection(candidate, {{44.954012999999996, -87.812989}, {44.924355, -87.84343299999999}}) ^ isIntersection(candidate, {{44.924355, -87.84343299999999}, {44.873987, -87.838359}}) ^ isIntersection(candidate, {{44.873987, -87.838359}, {44.857771, -87.854681}}) ^ isIntersection(candidate, {{44.857771, -87.854681}, {44.818723, -87.904484}}) ^ isIntersection(candidate, {{44.574135, -87.898888}, {44.608433999999995, -87.866884}}) ^ isIntersection(candidate, {{44.608433999999995, -87.866884}, {44.639281, -87.77516}}) ^ isIntersection(candidate, {{44.639281, -87.77516}, {44.6536977497349, -87.7613076788851}}) ^ isIntersection(candidate, {{44.6536977497349, -87.7613076788851}, {44.667122, -87.748409}}) ^ isIntersection(candidate, {{44.667122, -87.748409}, {44.6770118161559, -87.73757086086628}}) ^ isIntersection(candidate, {{44.6770118161559, -87.73757086086628}, {44.693245999999995, -87.71978}}) ^ isIntersection(candidate, {{44.693245999999995, -87.71978}, {44.724548, -87.720889}}) ^ isIntersection(candidate, {{44.724548, -87.720889}, {44.798739, -87.64630000000001}}) ^ isIntersection(candidate, {{43.965936, -87.69892}, {43.892208887456796, -87.72857954230889}}) ^ isIntersection(candidate, {{43.892208887456796, -87.72857954230889}, {43.873720999999996, -87.73601699999999}}) ^ isIntersection(candidate, {{43.873720999999996, -87.73601699999999}, {43.810445, -87.726407}}) ^ isIntersection(candidate, {{43.810445, -87.726407}, {43.76735, -87.700251}}) ^ isIntersection(candidate, {{43.679542, -87.706204}, {43.563054, -87.79013499999999}}) ^ isIntersection(candidate, {{43.563054, -87.79013499999999}, {43.543015444928, -87.7910201400285}}) ^ isIntersection(candidate, {{43.543015444928, -87.7910201400285}, {43.492782999999996, -87.793239}}) ^ isIntersection(candidate, {{43.492782999999996, -87.793239}, {43.420677, -87.840955}}) ^ isIntersection(candidate, {{43.420677, -87.840955}, {43.307652, -87.889207}}) ^ isIntersection(candidate, {{43.12591, -87.90048499999999}, {43.064412, -87.870184}}) ^ isIntersection(candidate, {{43.064412, -87.870184}, {43.015814, -87.89578399999999}}) ^ isIntersection(candidate, {{43.015814, -87.89578399999999}, {42.944116, -87.842681}}) ^ isIntersection(candidate, {{42.944116, -87.842681}, {42.856716999999996, -87.834879}}) ^ isIntersection(candidate, {{42.856716999999996, -87.834879}, {42.8489230088186, -87.8274775244631}}) ^ isIntersection(candidate, {{42.8489230088186, -87.8274775244631}, {42.8422735467354, -87.821162938034}}) ^ isIntersection(candidate, {{42.8422735467354, -87.821162938034}, {42.784895999999996, -87.76667499999999}}) ^ isIntersection(candidate, {{42.784895999999996, -87.76667499999999}, {42.700818999999996, -87.785074}}) ^ isIntersection(candidate, {{42.700818999999996, -87.785074}, {42.668311061176695, -87.80201505510959}}) ^ isIntersection(candidate, {{42.668311061176695, -87.80201505510959}, {42.64402, -87.814674}}) ^ isIntersection(candidate, {{42.64402, -87.814674}, {42.57922, -87.813273}}) ^ isIntersection(candidate, {{42.57922, -87.813273}, {42.49192, -87.800477}}) ^ isIntersection(candidate, {{42.49192, -87.800477}, {42.420621, -87.80337}}) ^ isIntersection(candidate, {{42.420621, -87.80337}, {42.361584, -87.820858}}) ^ isIntersection(candidate, {{42.361584, -87.820858}, {42.301522, -87.834769}}) ^ isIntersection(candidate, {{42.301522, -87.834769}, {42.2977737051545, -87.83337777156702}}) ^ isIntersection(candidate, {{42.2977737051545, -87.83337777156702}, {42.209586949469006, -87.8006461090443}}) ^ isIntersection(candidate, {{42.209586949469006, -87.8006461090443}, {42.208023999999995, -87.800066}}) ^ isIntersection(candidate, {{42.208023999999995, -87.800066}, {42.1523619789799, -87.7593265652386}}) ^ isIntersection(candidate, {{42.1523619789799, -87.7593265652386}, {42.1282651594678, -87.74168992918979}}) ^ isIntersection(candidate, {{42.1282651594678, -87.74168992918979}, {42.128226999999995, -87.74166199999999}}) ^ isIntersection(candidate, {{42.128226999999995, -87.74166199999999}, {42.1279554347716, -87.74135523340429}}) ^ isIntersection(candidate, {{42.1279554347716, -87.74135523340429}, {42.0818519403908, -87.68927562032829}}) ^ isIntersection(candidate, {{30.249709, -87.656888}, {30.228313999999997, -87.818867}}) ^ isIntersection(candidate, {{30.228313999999997, -87.818867}, {30.239237, -87.89320099999999}}) ^ isIntersection(candidate, {{30.239237, -87.89320099999999}, {30.279798, -87.806466}}) ^ isIntersection(candidate, {{30.279798, -87.806466}, {30.324198, -87.796717}}) ^ isIntersection(candidate, {{30.324198, -87.796717}, {30.38345, -87.865017}}) ^ isIntersection(candidate, {{30.38345, -87.865017}, {30.446144, -87.914136}});
                        } else {
                            return isIntersection(candidate, {{47.473301, -87.80118399999999}, {47.455684999999995, -87.680067}}) ^ isIntersection(candidate, {{47.455684999999995, -87.680067}, {47.424113, -87.591498}}) ^ isIntersection(candidate, {{47.424113, -87.591498}, {47.388625, -87.604704}}) ^ isIntersection(candidate, {{47.388625, -87.604704}, {47.392148, -87.800294}}) ^ isIntersection(candidate, {{46.876726, -87.77693}, {46.841741999999996, -87.687164}}) ^ isIntersection(candidate, {{46.841741999999996, -87.687164}, {46.78295, -87.59530699999999}}) ^ isIntersection(candidate, {{46.78295, -87.59530699999999}, {46.720470999999996, -87.57320299999999}}) ^ isIntersection(candidate, {{46.720470999999996, -87.57320299999999}, {46.647497, -87.503025}}) ^ isIntersection(candidate, {{46.647497, -87.503025}, {46.580059, -87.381649}}) ^ isIntersection(candidate, {{45.407742999999996, -87.35085199999999}, {45.273351, -87.465201}}) ^ isIntersection(candidate, {{45.273351, -87.465201}, {45.191590999999995, -87.548964}}) ^ isIntersection(candidate, {{45.191590999999995, -87.548964}, {45.095264, -87.59020799999999}}) ^ isIntersection(candidate, {{45.095264, -87.59020799999999}, {45.045156999999996, -87.625748}}) ^ isIntersection(candidate, {{45.045156999999996, -87.625748}, {44.976865, -87.630298}}) ^ isIntersection(candidate, {{44.976865, -87.630298}, {44.974233, -87.69649199999999}}) ^ isIntersection(candidate, {{44.974233, -87.69649199999999}, {44.96275217176029, -87.7626384909711}}) ^ isIntersection(candidate, {{44.724548, -87.720889}, {44.798739, -87.64630000000001}}) ^ isIntersection(candidate, {{44.798739, -87.64630000000001}, {44.851791, -87.581306}}) ^ isIntersection(candidate, {{44.851791, -87.581306}, {44.857437, -87.530999}}) ^ isIntersection(candidate, {{44.857437, -87.530999}, {44.869596, -87.515142}}) ^ isIntersection(candidate, {{44.869596, -87.515142}, {44.886109, -87.446477}}) ^ isIntersection(candidate, {{44.886109, -87.446477}, {44.934393, -87.393405}}) ^ isIntersection(candidate, {{44.631191, -87.401629}, {44.586273999999996, -87.446963}}) ^ isIntersection(candidate, {{44.586273999999996, -87.446963}, {44.460685999999995, -87.498662}}) ^ isIntersection(candidate, {{44.460685999999995, -87.498662}, {44.3275128561299, -87.5433267854761}}) ^ isIntersection(candidate, {{44.3275128561299, -87.5433267854761}, {44.321385, -87.54538199999999}}) ^ isIntersection(candidate, {{44.321385, -87.54538199999999}, {44.259957, -87.521755}}) ^ isIntersection(candidate, {{44.259957, -87.521755}, {44.210803, -87.507419}}) ^ isIntersection(candidate, {{44.210803, -87.507419}, {44.15969, -87.53994}}) ^ isIntersection(candidate, {{44.15969, -87.53994}, {44.131695, -87.600882}}) ^ isIntersection(candidate, {{44.131695, -87.600882}, {44.081894, -87.655183}}) ^ isIntersection(candidate, {{44.081894, -87.655183}, {43.965936, -87.69892}}) ^ isIntersection(candidate, {{43.965936, -87.69892}, {43.892208887456796, -87.72857954230889}}) ^ isIntersection(candidate, {{43.810445, -87.726407}, {43.76735, -87.700251}}) ^ isIntersection(candidate, {{43.76735, -87.700251}, {43.722895, -87.708185}}) ^ isIntersection(candidate, {{43.722895, -87.708185}, {43.679542, -87.706204}}) ^ isIntersection(candidate, {{43.679542, -87.706204}, {43.563054, -87.79013499999999}}) ^ isIntersection(candidate, {{42.1279554347716, -87.74135523340429}, {42.0818519403908, -87.68927562032829}}) ^ isIntersection(candidate, {{42.0818519403908, -87.68927562032829}, {42.075728999999995, -87.68235899999999}}) ^ isIntersection(candidate, {{42.075728999999995, -87.68235899999999}, {42.029142, -87.668982}}) ^ isIntersection(candidate, {{42.029142, -87.668982}, {41.9329102403255, -87.63436753388702}}) ^ isIntersection(candidate, {{41.9329102403255, -87.63436753388702}, {41.90681781070359, -87.62498211348101}}) ^ isIntersection(candidate, {{41.90681781070359, -87.62498211348101}, {41.904232, -87.62405199999999}}) ^ isIntersection(candidate, {{41.904232, -87.62405199999999}, {41.893335, -87.612291}}) ^ isIntersection(candidate, {{41.893335, -87.612291}, {41.884479999999996, -87.613556}}) ^ isIntersection(candidate, {{41.884479999999996, -87.613556}, {41.870929, -87.616293}}) ^ isIntersection(candidate, {{41.870929, -87.616293}, {41.845233, -87.60945}}) ^ isIntersection(candidate, {{41.845233, -87.60945}, {41.8110340761664, -87.5883759425147}}) ^ isIntersection(candidate, {{41.8110340761664, -87.5883759425147}, {41.8089264254106, -87.587077166173}}) ^ isIntersection(candidate, {{41.8089264254106, -87.587077166173}, {41.8000424127, -87.5816026607332}}) ^ isIntersection(candidate, {{41.8000424127, -87.5816026607332}, {41.766034, -87.56064599999999}}) ^ isIntersection(candidate, {{41.766034, -87.56064599999999}, {41.748235, -87.530745}}) ^ isIntersection(candidate, {{41.748235, -87.530745}, {41.72399, -87.524141}}) ^ isIntersection(candidate, {{41.72399, -87.524141}, {41.708335, -87.52404399999999}}) ^ isIntersection(candidate, {{41.708335, -87.52404399999999}, {41.672835, -87.470742}}) ^ isIntersection(candidate, {{41.672835, -87.470742}, {41.688182999999995, -87.41581599999999}}) ^ isIntersection(candidate, {{30.297127999999997, -87.419859}, {30.280434999999997, -87.51832399999999}}) ^ isIntersection(candidate, {{30.280434999999997, -87.51832399999999}, {30.249709, -87.656888}}) ^ isIntersection(candidate, {{30.249709, -87.656888}, {30.228313999999997, -87.818867}});
                        }
                    }
                } else {
                    if (candidate.longitude < -86.38671875) {
                        if (candidate.longitude < -86.8701171875) {
                            return isIntersection(candidate, {{45.421149, -86.934276}, {45.450188, -86.83574899999999}}) ^ isIntersection(candidate, {{45.353065, -86.86774299999999}, {45.295185, -86.899891}}) ^ isIntersection(candidate, {{45.295185, -86.899891}, {45.352005999999996, -86.956198}}) ^ isIntersection(candidate, {{45.352005999999996, -86.956198}, {45.421149, -86.934276}}) ^ isIntersection(candidate, {{46.647497, -87.503025}, {46.580059, -87.381649}}) ^ isIntersection(candidate, {{46.580059, -87.381649}, {46.507303, -87.366767}}) ^ isIntersection(candidate, {{46.507303, -87.366767}, {46.497547999999995, -87.17506499999999}}) ^ isIntersection(candidate, {{46.497547999999995, -87.17506499999999}, {46.506151402120494, -87.1163595894707}}) ^ isIntersection(candidate, {{46.506151402120494, -87.1163595894707}, {46.526581, -86.976958}}) ^ isIntersection(candidate, {{46.526581, -86.976958}, {46.466138, -86.903742}}) ^ isIntersection(candidate, {{46.466138, -86.903742}, {46.449663, -86.81096699999999}}) ^ isIntersection(candidate, {{45.722307, -86.838746}, {45.672761, -86.964275}}) ^ isIntersection(candidate, {{45.672761, -86.964275}, {45.718779, -87.070442}}) ^ isIntersection(candidate, {{45.718779, -87.070442}, {45.661788, -87.172241}}) ^ isIntersection(candidate, {{45.661788, -87.172241}, {45.5501155908891, -87.25344962878019}}) ^ isIntersection(candidate, {{45.5501155908891, -87.25344962878019}, {45.501605999999995, -87.288726}}) ^ isIntersection(candidate, {{45.501605999999995, -87.288726}, {45.407742999999996, -87.35085199999999}}) ^ isIntersection(candidate, {{45.407742999999996, -87.35085199999999}, {45.273351, -87.465201}}) ^ isIntersection(candidate, {{44.886109, -87.446477}, {44.934393, -87.393405}}) ^ isIntersection(candidate, {{44.934393, -87.393405}, {45.013529999999996, -87.336457}}) ^ isIntersection(candidate, {{45.013529999999996, -87.336457}, {45.081361, -87.264877}}) ^ isIntersection(candidate, {{45.081361, -87.264877}, {45.167259, -87.238224}}) ^ isIntersection(candidate, {{45.167259, -87.238224}, {45.173049999999996, -87.175068}}) ^ isIntersection(candidate, {{45.173049999999996, -87.175068}, {45.209782999999995, -87.12160899999999}}) ^ isIntersection(candidate, {{45.209782999999995, -87.12160899999999}, {45.257003, -87.10874299999999}}) ^ isIntersection(candidate, {{45.257003, -87.10874299999999}, {45.292837999999996, -87.057627}}) ^ isIntersection(candidate, {{45.292837999999996, -87.057627}, {45.299254, -87.01703599999999}}) ^ isIntersection(candidate, {{45.299254, -87.01703599999999}, {45.290684, -86.97778}}) ^ isIntersection(candidate, {{45.290684, -86.97778}, {45.227332999999994, -86.978759}}) ^ isIntersection(candidate, {{45.227332999999994, -86.978759}, {45.186946, -87.04417}}) ^ isIntersection(candidate, {{45.186946, -87.04417}, {45.134986999999995, -87.04574799999999}}) ^ isIntersection(candidate, {{45.134986999999995, -87.04574799999999}, {45.079316, -87.06315699999999}}) ^ isIntersection(candidate, {{45.079316, -87.06315699999999}, {45.012564999999995, -87.13938399999999}}) ^ isIntersection(candidate, {{45.012564999999995, -87.13938399999999}, {44.948077, -87.188375}}) ^ isIntersection(candidate, {{44.948077, -87.188375}, {44.885928, -87.206285}}) ^ isIntersection(candidate, {{44.885928, -87.206285}, {44.83318, -87.27602999999999}}) ^ isIntersection(candidate, {{44.83318, -87.27602999999999}, {44.771335, -87.31898199999999}}) ^ isIntersection(candidate, {{44.771335, -87.31898199999999}, {44.675512109805, -87.3754915502194}}) ^ isIntersection(candidate, {{44.675512109805, -87.3754915502194}, {44.631191, -87.401629}}) ^ isIntersection(candidate, {{44.631191, -87.401629}, {44.586273999999996, -87.446963}}) ^ isIntersection(candidate, {{41.672835, -87.470742}, {41.688182999999995, -87.41581599999999}}) ^ isIntersection(candidate, {{41.688182999999995, -87.41581599999999}, {41.629536, -87.365439}}) ^ isIntersection(candidate, {{41.629536, -87.365439}, {41.620335999999995, -87.26153599999999}}) ^ isIntersection(candidate, {{41.620335999999995, -87.26153599999999}, {41.628889838960006, -87.2227999491184}}) ^ isIntersection(candidate, {{41.628889838960006, -87.2227999491184}, {41.650301999999996, -87.125835}}) ^ isIntersection(candidate, {{41.650301999999996, -87.125835}, {41.674661, -87.02788799999999}}) ^ isIntersection(candidate, {{41.674661, -87.02788799999999}, {41.7164969379022, -86.93284902849439}}) ^ isIntersection(candidate, {{41.7164969379022, -86.93284902849439}, {41.726938, -86.90912999999999}}) ^ isIntersection(candidate, {{41.726938, -86.90912999999999}, {41.760239999999996, -86.824828}}) ^ isIntersection(candidate, {{30.380967, -86.850625}, {30.3689914721225, -86.9192047498008}}) ^ isIntersection(candidate, {{30.3689914721225, -86.9192047498008}, {30.327748, -87.15539199999999}}) ^ isIntersection(candidate, {{30.327748, -87.15539199999999}, {30.319632929801003, -87.2297658113648}}) ^ isIntersection(candidate, {{30.319632929801003, -87.2297658113648}, {30.315479999999997, -87.267827}}) ^ isIntersection(candidate, {{30.315479999999997, -87.267827}, {30.317814, -87.319518}}) ^ isIntersection(candidate, {{30.317814, -87.319518}, {30.297127999999997, -87.419859}}) ^ isIntersection(candidate, {{30.297127999999997, -87.419859}, {30.280434999999997, -87.51832399999999}});
                        } else {
                            return isIntersection(candidate, {{45.421149, -86.934276}, {45.450188, -86.83574899999999}}) ^ isIntersection(candidate, {{45.450188, -86.83574899999999}, {45.412903, -86.80586799999999}}) ^ isIntersection(candidate, {{45.412903, -86.80586799999999}, {45.353065, -86.86774299999999}}) ^ isIntersection(candidate, {{45.353065, -86.86774299999999}, {45.295185, -86.899891}}) ^ isIntersection(candidate, {{46.466138, -86.903742}, {46.449663, -86.81096699999999}}) ^ isIntersection(candidate, {{46.449663, -86.81096699999999}, {46.479109, -86.750157}}) ^ isIntersection(candidate, {{46.479109, -86.750157}, {46.555026, -86.695645}}) ^ isIntersection(candidate, {{46.555026, -86.695645}, {46.53371, -86.62738}}) ^ isIntersection(candidate, {{46.53371, -86.62738}, {46.487434, -86.55773099999999}}) ^ isIntersection(candidate, {{46.487434, -86.55773099999999}, {46.551928, -86.45993}}) ^ isIntersection(candidate, {{46.551928, -86.45993}, {46.654008, -86.188024}}) ^ isIntersection(candidate, {{45.83416, -86.34913399999999}, {45.760669, -86.439661}}) ^ isIntersection(candidate, {{45.760669, -86.439661}, {45.750226550596, -86.4598805177494}}) ^ isIntersection(candidate, {{45.750226550596, -86.4598805177494}, {45.70811, -86.54142999999999}}) ^ isIntersection(candidate, {{45.70811, -86.54142999999999}, {45.620581, -86.61697199999999}}) ^ isIntersection(candidate, {{45.620581, -86.61697199999999}, {45.542052999999996, -86.636895}}) ^ isIntersection(candidate, {{45.542052999999996, -86.636895}, {45.610938999999995, -86.712328}}) ^ isIntersection(candidate, {{45.610938999999995, -86.712328}, {45.690901, -86.705184}}) ^ isIntersection(candidate, {{45.690901, -86.705184}, {45.732617999999995, -86.647319}}) ^ isIntersection(candidate, {{45.732617999999995, -86.647319}, {45.811385, -86.773279}}) ^ isIntersection(candidate, {{45.811385, -86.773279}, {45.722307, -86.838746}}) ^ isIntersection(candidate, {{45.722307, -86.838746}, {45.672761, -86.964275}}) ^ isIntersection(candidate, {{41.726938, -86.90912999999999}, {41.760239999999996, -86.824828}}) ^ isIntersection(candidate, {{41.760239999999996, -86.824828}, {41.835403, -86.69326699999999}}) ^ isIntersection(candidate, {{41.835403, -86.69326699999999}, {41.918290999999996, -86.597899}}) ^ isIntersection(candidate, {{41.918290999999996, -86.597899}, {42.08454, -86.501322}}) ^ isIntersection(candidate, {{42.08454, -86.501322}, {42.134406, -86.466262}}) ^ isIntersection(candidate, {{42.134406, -86.466262}, {42.24310772718089, -86.3663791270383}}) ^ isIntersection(candidate, {{43.195114, -86.316259}, {43.338436, -86.407832}}) ^ isIntersection(candidate, {{43.338436, -86.407832}, {43.432013, -86.448743}}) ^ isIntersection(candidate, {{43.432013, -86.448743}, {43.472329699506695, -86.46351688668109}}) ^ isIntersection(candidate, {{43.472329699506695, -86.46351688668109}, {43.515335, -86.479276}}) ^ isIntersection(candidate, {{43.515335, -86.479276}, {43.593461999999995, -86.529507}}) ^ isIntersection(candidate, {{43.593461999999995, -86.529507}, {43.644593, -86.540787}}) ^ isIntersection(candidate, {{43.644593, -86.540787}, {43.698625, -86.510319}}) ^ isIntersection(candidate, {{43.698625, -86.510319}, {43.771564, -86.445123}}) ^ isIntersection(candidate, {{43.771564, -86.445123}, {43.8194291980042, -86.4354850382583}}) ^ isIntersection(candidate, {{43.8194291980042, -86.4354850382583}, {43.84072, -86.431198}}) ^ isIntersection(candidate, {{43.84072, -86.431198}, {43.918088999999995, -86.447915}}) ^ isIntersection(candidate, {{43.918088999999995, -86.447915}, {43.970976, -86.46313599999999}}) ^ isIntersection(candidate, {{43.970976, -86.46313599999999}, {43.9710645597197, -86.46320311524849}}) ^ isIntersection(candidate, {{43.9710645597197, -86.46320311524849}, {44.021912, -86.501738}}) ^ isIntersection(candidate, {{44.021912, -86.501738}, {44.058119, -86.514702}}) ^ isIntersection(candidate, {{44.058119, -86.514702}, {44.09928779829529, -86.4580652757377}}) ^ isIntersection(candidate, {{44.09928779829529, -86.4580652757377}, {44.119782, -86.42987099999999}}) ^ isIntersection(candidate, {{44.119782, -86.42987099999999}, {44.173701998925104, -86.3913991469087}}) ^ isIntersection(candidate, {{44.173701998925104, -86.3913991469087}, {44.178694, -86.3878373602652}}) ^ isIntersection(candidate, {{44.178694, -86.3878373602652}, {44.229428999999996, -86.351638}}) ^ isIntersection(candidate, {{30.343584999999997, -86.222561}, {30.3774952804191, -86.3973796065024}}) ^ isIntersection(candidate, {{30.3774952804191, -86.3973796065024}, {30.380346, -86.412076}}) ^ isIntersection(candidate, {{30.380346, -86.412076}, {30.396299, -86.632953}}) ^ isIntersection(candidate, {{30.396299, -86.632953}, {30.3845080873776, -86.80035135196589}}) ^ isIntersection(candidate, {{30.3845080873776, -86.80035135196589}, {30.380967, -86.850625}}) ^ isIntersection(candidate, {{30.380967, -86.850625}, {30.3689914721225, -86.9192047498008}});
                        }
                    } else {
                        if (candidate.longitude < -85.8154296875) {
                            return isIntersection(candidate, {{45.043037999999996, -86.13809499999999}, {45.159582, -86.04442999999999}}) ^ isIntersection(candidate, {{45.159582, -86.04442999999999}, {45.151069, -85.989412}}) ^ isIntersection(candidate, {{45.151069, -85.989412}, {45.119281, -85.954021}}) ^ isIntersection(candidate, {{45.119281, -85.954021}, {45.06266, -85.976883}}) ^ isIntersection(candidate, {{45.06266, -85.976883}, {44.990096, -86.081487}}) ^ isIntersection(candidate, {{44.990096, -86.081487}, {45.002393999999995, -86.15482399999999}}) ^ isIntersection(candidate, {{45.002393999999995, -86.15482399999999}, {45.043037999999996, -86.13809499999999}}) ^ isIntersection(candidate, {{46.551928, -86.45993}, {46.654008, -86.188024}}) ^ isIntersection(candidate, {{46.654008, -86.188024}, {46.672934999999995, -86.138295}}) ^ isIntersection(candidate, {{46.672934999999995, -86.138295}, {46.673676, -85.995044}}) ^ isIntersection(candidate, {{46.673676, -85.995044}, {46.6865683155134, -85.86460714132919}}) ^ isIntersection(candidate, {{46.6865683155134, -85.86460714132919}, {46.688896, -85.84105699999999}}) ^ isIntersection(candidate, {{46.688896, -85.84105699999999}, {46.680431999999996, -85.482096}}) ^ isIntersection(candidate, {{45.980087, -85.810442}, {45.947571073185294, -85.8658399219427}}) ^ isIntersection(candidate, {{45.947571073185294, -85.8658399219427}, {45.919439, -85.913769}}) ^ isIntersection(candidate, {{45.919439, -85.913769}, {45.965312999999995, -86.07206699999999}}) ^ isIntersection(candidate, {{45.965312999999995, -86.07206699999999}, {45.942057, -86.278007}}) ^ isIntersection(candidate, {{45.942057, -86.278007}, {45.83416, -86.34913399999999}}) ^ isIntersection(candidate, {{45.83416, -86.34913399999999}, {45.760669, -86.439661}}) ^ isIntersection(candidate, {{42.134406, -86.466262}, {42.24310772718089, -86.3663791270383}}) ^ isIntersection(candidate, {{42.24310772718089, -86.3663791270383}, {42.254166, -86.356218}}) ^ isIntersection(candidate, {{42.254166, -86.356218}, {42.394563, -86.284448}}) ^ isIntersection(candidate, {{42.394563, -86.284448}, {42.419310315926296, -86.2769940445315}}) ^ isIntersection(candidate, {{42.419310315926296, -86.2769940445315}, {42.54, -86.240642}}) ^ isIntersection(candidate, {{42.54, -86.240642}, {42.6295118547012, -86.22869480100229}}) ^ isIntersection(candidate, {{42.6295118547012, -86.22869480100229}, {42.644922, -86.226638}}) ^ isIntersection(candidate, {{42.644922, -86.226638}, {42.762789, -86.208309}}) ^ isIntersection(candidate, {{42.762789, -86.208309}, {42.7675438719157, -86.20853850290969}}) ^ isIntersection(candidate, {{42.7675438719157, -86.20853850290969}, {42.883555, -86.21413799999999}}) ^ isIntersection(candidate, {{42.883555, -86.21413799999999}, {42.988284, -86.226305}}) ^ isIntersection(candidate, {{42.988284, -86.226305}, {43.083408999999996, -86.254646}}) ^ isIntersection(candidate, {{43.083408999999996, -86.254646}, {43.1183679687078, -86.27392827867139}}) ^ isIntersection(candidate, {{43.1183679687078, -86.27392827867139}, {43.195114, -86.316259}}) ^ isIntersection(candidate, {{43.195114, -86.316259}, {43.338436, -86.407832}}) ^ isIntersection(candidate, {{44.178694, -86.3878373602652}, {44.229428999999996, -86.351638}}) ^ isIntersection(candidate, {{44.229428999999996, -86.351638}, {44.345324, -86.26871}}) ^ isIntersection(candidate, {{44.345324, -86.26871}, {44.400984, -86.251926}}) ^ isIntersection(candidate, {{44.400984, -86.251926}, {44.483004, -86.248914}}) ^ isIntersection(candidate, {{44.483004, -86.248914}, {44.5182985861447, -86.2370208650165}}) ^ isIntersection(candidate, {{44.5182985861447, -86.2370208650165}, {44.566742, -86.220697}}) ^ isIntersection(candidate, {{44.566742, -86.220697}, {44.64808, -86.25394999999999}}) ^ isIntersection(candidate, {{44.64808, -86.25394999999999}, {44.699045999999996, -86.248474}}) ^ isIntersection(candidate, {{44.699045999999996, -86.248474}, {44.728189, -86.160268}}) ^ isIntersection(candidate, {{44.728189, -86.160268}, {44.741496, -86.089186}}) ^ isIntersection(candidate, {{44.741496, -86.089186}, {44.778330747660895, -86.0784981880303}}) ^ isIntersection(candidate, {{44.778330747660895, -86.0784981880303}, {44.821521999999995, -86.065966}}) ^ isIntersection(candidate, {{44.821521999999995, -86.065966}, {44.911012, -86.05886199999999}}) ^ isIntersection(candidate, {{44.911012, -86.05886199999999}, {44.906136, -85.98021899999999}}) ^ isIntersection(candidate, {{44.906136, -85.98021899999999}, {44.968787999999996, -85.9316}}) ^ isIntersection(candidate, {{44.968787999999996, -85.9316}, {44.938147, -85.854304}}) ^ isIntersection(candidate, {{44.938147, -85.854304}, {44.977931999999996, -85.780439}}) ^ isIntersection(candidate, {{30.17832, -85.811219}, {30.2689013812091, -85.996102593976}}) ^ isIntersection(candidate, {{30.2689013812091, -85.996102593976}, {30.27078, -85.999937}}) ^ isIntersection(candidate, {{30.27078, -85.999937}, {30.303569, -86.089963}}) ^ isIntersection(candidate, {{30.303569, -86.089963}, {30.343584999999997, -86.222561}}) ^ isIntersection(candidate, {{30.343584999999997, -86.222561}, {30.3774952804191, -86.3973796065024}});
                        } else {
                            return isIntersection(candidate, {{45.736129, -85.701809}, {45.743139, -85.651866}}) ^ isIntersection(candidate, {{45.743139, -85.651866}, {45.829794, -85.52444799999999}}) ^ isIntersection(candidate, {{45.829794, -85.52444799999999}, {45.817554, -85.360952}}) ^ isIntersection(candidate, {{45.817554, -85.360952}, {45.769013, -85.377132}}) ^ isIntersection(candidate, {{45.769013, -85.377132}, {45.596475, -85.509276}}) ^ isIntersection(candidate, {{45.596475, -85.509276}, {45.572213, -85.561634}}) ^ isIntersection(candidate, {{45.572213, -85.561634}, {45.586028, -85.62274099999999}}) ^ isIntersection(candidate, {{45.586028, -85.62274099999999}, {45.69725, -85.696872}}) ^ isIntersection(candidate, {{45.69725, -85.696872}, {45.736129, -85.701809}}) ^ isIntersection(candidate, {{46.688896, -85.84105699999999}, {46.680431999999996, -85.482096}}) ^ isIntersection(candidate, {{46.680431999999996, -85.482096}, {46.75338, -85.25686}}) ^ isIntersection(candidate, {{46.75338, -85.25686}, {46.7557027812565, -85.23787317735959}}) ^ isIntersection(candidate, {{46.7557027812565, -85.23787317735959}, {46.763633999999996, -85.173042}}) ^ isIntersection(candidate, {{46.763633999999996, -85.173042}, {46.772845, -84.964652}}) ^ isIntersection(candidate, {{46.050725, -85.15202699999999}, {46.065779, -85.266385}}) ^ isIntersection(candidate, {{46.065779, -85.266385}, {46.082043999999996, -85.381394}}) ^ isIntersection(candidate, {{46.082043999999996, -85.381394}, {46.079581, -85.540858}}) ^ isIntersection(candidate, {{46.079581, -85.540858}, {45.983695, -85.648581}}) ^ isIntersection(candidate, {{45.983695, -85.648581}, {45.960158, -85.697203}}) ^ isIntersection(candidate, {{45.960158, -85.697203}, {45.980087, -85.810442}}) ^ isIntersection(candidate, {{45.980087, -85.810442}, {45.947571073185294, -85.8658399219427}}) ^ isIntersection(candidate, {{44.938147, -85.854304}, {44.977931999999996, -85.780439}}) ^ isIntersection(candidate, {{44.977931999999996, -85.780439}, {45.051229, -85.746444}}) ^ isIntersection(candidate, {{45.051229, -85.746444}, {45.092693, -85.681096}}) ^ isIntersection(candidate, {{45.092693, -85.681096}, {45.170899, -85.633124}}) ^ isIntersection(candidate, {{45.170899, -85.633124}, {45.210741999999996, -85.55107199999999}}) ^ isIntersection(candidate, {{45.210741999999996, -85.55107199999999}, {45.177247, -85.531461}}) ^ isIntersection(candidate, {{45.177247, -85.531461}, {45.043633, -85.56613}}) ^ isIntersection(candidate, {{45.043633, -85.56613}, {45.0270345441369, -85.55514270270879}}) ^ isIntersection(candidate, {{45.0270345441369, -85.55514270270879}, {44.973996, -85.520034}}) ^ isIntersection(candidate, {{44.973996, -85.520034}, {44.991053, -85.47520399999999}}) ^ isIntersection(candidate, {{44.991053, -85.47520399999999}, {45.0166494527177, -85.43141547500831}}) ^ isIntersection(candidate, {{45.0166494527177, -85.43141547500831}, {45.046319, -85.380659}}) ^ isIntersection(candidate, {{45.046319, -85.380659}, {45.101591, -85.366749}}) ^ isIntersection(candidate, {{45.101591, -85.366749}, {45.180876, -85.38046399999999}}) ^ isIntersection(candidate, {{45.180876, -85.38046399999999}, {45.20764440248689, -85.37782429593301}}) ^ isIntersection(candidate, {{45.20764440248689, -85.37782429593301}, {45.270834, -85.37159299999999}}) ^ isIntersection(candidate, {{45.270834, -85.37159299999999}, {45.316407999999996, -85.294848}}) ^ isIntersection(candidate, {{45.316407999999996, -85.294848}, {45.360641, -85.196704}}) ^ isIntersection(candidate, {{45.360641, -85.196704}, {45.363088040434796, -85.096056872271}}) ^ isIntersection(candidate, {{29.586990999999998, -85.045074}, {29.642889999999998, -85.15731}}) ^ isIntersection(candidate, {{29.642889999999998, -85.15731}, {29.669559997762004, -85.2284251330731}}) ^ isIntersection(candidate, {{29.669559997762004, -85.2284251330731}, {29.681296, -85.25971899999999}}) ^ isIntersection(candidate, {{29.681296, -85.25971899999999}, {29.659786999999998, -85.352615}}) ^ isIntersection(candidate, {{29.659786999999998, -85.352615}, {29.758782, -85.40283}}) ^ isIntersection(candidate, {{29.758782, -85.40283}, {29.842627999999998, -85.41654799999999}}) ^ isIntersection(candidate, {{29.842627999999998, -85.41654799999999}, {29.920949, -85.38472999999999}}) ^ isIntersection(candidate, {{29.920949, -85.38472999999999}, {29.924114862603698, -85.389240033232}}) ^ isIntersection(candidate, {{29.924114862603698, -85.389240033232}, {29.949887999999998, -85.425956}}) ^ isIntersection(candidate, {{29.949887999999998, -85.425956}, {29.961226999999997, -85.487764}}) ^ isIntersection(candidate, {{29.961226999999997, -85.487764}, {30.026439999999997, -85.571907}}) ^ isIntersection(candidate, {{30.026439999999997, -85.571907}, {30.056341999999997, -85.60117799999999}}) ^ isIntersection(candidate, {{30.056341999999997, -85.60117799999999}, {30.09689, -85.69681}}) ^ isIntersection(candidate, {{30.09689, -85.69681}, {30.17832, -85.811219}}) ^ isIntersection(candidate, {{30.17832, -85.811219}, {30.2689013812091, -85.996102593976}});
                        }
                    }
                }
            }
        }
    } else {
        if (candidate.longitude < -76.279296875) {
            if (candidate.longitude < -81.11328125) {
                if (candidate.longitude < -82.87109375) {
                    if (candidate.longitude < -83.75) {
                        if (candidate.longitude < -84.4091796875) {
                            return isIntersection(candidate, {{45.89447, -84.61622}, {45.828542999999996, -84.517895}}) ^ isIntersection(candidate, {{45.828542999999996, -84.517895}, {45.799822999999996, -84.419696}}) ^ isIntersection(candidate, {{45.799822999999996, -84.419696}, {45.771895, -84.35602}}) ^ isIntersection(candidate, {{45.727623, -84.394038}, {45.730709999999995, -84.484128}}) ^ isIntersection(candidate, {{45.730709999999995, -84.484128}, {45.8067, -84.587572}}) ^ isIntersection(candidate, {{45.8067, -84.587572}, {45.85921, -84.65078299999999}}) ^ isIntersection(candidate, {{45.85921, -84.65078299999999}, {45.89447, -84.61622}}) ^ isIntersection(candidate, {{46.763633999999996, -85.173042}, {46.772845, -84.964652}}) ^ isIntersection(candidate, {{46.772845, -84.964652}, {46.675125, -85.028291}}) ^ isIntersection(candidate, {{46.675125, -85.028291}, {46.553756, -85.027374}}) ^ isIntersection(candidate, {{46.553756, -85.027374}, {46.47629, -84.969464}}) ^ isIntersection(candidate, {{46.47629, -84.969464}, {46.460245, -84.849767}}) ^ isIntersection(candidate, {{46.460245, -84.849767}, {46.487694, -84.678423}}) ^ isIntersection(candidate, {{46.487694, -84.678423}, {46.456747, -84.607945}}) ^ isIntersection(candidate, {{46.456747, -84.607945}, {46.440312999999996, -84.49340099999999}}) ^ isIntersection(candidate, {{46.440312999999996, -84.49340099999999}, {46.466566, -84.461827}}) ^ isIntersection(candidate, {{46.466566, -84.461827}, {46.501076999999995, -84.42027399999999}}) ^ isIntersection(candidate, {{46.501076999999995, -84.42027399999999}, {46.492802999999995, -84.293016}}) ^ isIntersection(candidate, {{45.931962, -84.376429}, {45.977764, -84.480436}}) ^ isIntersection(candidate, {{45.977764, -84.480436}, {45.947702, -84.567493}}) ^ isIntersection(candidate, {{45.947702, -84.567493}, {45.951007, -84.63285499999999}}) ^ isIntersection(candidate, {{45.951007, -84.63285499999999}, {45.907025999999995, -84.73400199999999}}) ^ isIntersection(candidate, {{45.907025999999995, -84.73400199999999}, {45.848658, -84.706383}}) ^ isIntersection(candidate, {{45.848658, -84.706383}, {45.858691, -84.792763}}) ^ isIntersection(candidate, {{45.858691, -84.792763}, {45.93067, -84.917484}}) ^ isIntersection(candidate, {{45.93067, -84.917484}, {46.00613, -85.003597}}) ^ isIntersection(candidate, {{46.00613, -85.003597}, {46.050725, -85.15202699999999}}) ^ isIntersection(candidate, {{46.050725, -85.15202699999999}, {46.065779, -85.266385}}) ^ isIntersection(candidate, {{45.360641, -85.196704}, {45.363088040434796, -85.096056872271}}) ^ isIntersection(candidate, {{45.363088040434796, -85.096056872271}, {45.364090999999995, -85.054805}}) ^ isIntersection(candidate, {{45.364090999999995, -85.054805}, {45.375972999999995, -84.959119}}) ^ isIntersection(candidate, {{45.375972999999995, -84.959119}, {45.409776, -84.912956}}) ^ isIntersection(candidate, {{45.409776, -84.912956}, {45.429382, -84.980953}}) ^ isIntersection(candidate, {{45.429382, -84.980953}, {45.436701, -85.040936}}) ^ isIntersection(candidate, {{45.436701, -85.040936}, {45.521626, -85.109252}}) ^ isIntersection(candidate, {{45.521626, -85.109252}, {45.569026, -85.119737}}) ^ isIntersection(candidate, {{45.569026, -85.119737}, {45.639505, -85.061488}}) ^ isIntersection(candidate, {{45.639505, -85.061488}, {45.686333999999995, -84.97095}}) ^ isIntersection(candidate, {{45.686333999999995, -84.97095}, {45.760329, -85.01450899999999}}) ^ isIntersection(candidate, {{45.760329, -85.01450899999999}, {45.752066, -84.866976}}) ^ isIntersection(candidate, {{45.752066, -84.866976}, {45.789300999999995, -84.77276499999999}}) ^ isIntersection(candidate, {{45.789300999999995, -84.77276499999999}, {45.780496853289, -84.732242}}) ^ isIntersection(candidate, {{45.780496853289, -84.732242}, {45.777598999999995, -84.718904}}) ^ isIntersection(candidate, {{45.777598999999995, -84.718904}, {45.698566, -84.553311}}) ^ isIntersection(candidate, {{45.698566, -84.553311}, {45.652404, -84.46168}}) ^ isIntersection(candidate, {{45.652404, -84.46168}, {45.669427, -84.413642}}) ^ isIntersection(candidate, {{45.669427, -84.413642}, {45.66438, -84.329537}}) ^ isIntersection(candidate, {{29.896811999999997, -84.349066}, {29.902995999999998, -84.423834}}) ^ isIntersection(candidate, {{29.902995999999998, -84.423834}, {29.924523999999998, -84.470323}}) ^ isIntersection(candidate, {{29.924523999999998, -84.470323}, {29.910092, -84.535873}}) ^ isIntersection(candidate, {{29.910092, -84.535873}, {29.887828, -84.57744}}) ^ isIntersection(candidate, {{29.887828, -84.57744}, {29.81018, -84.564976}}) ^ isIntersection(candidate, {{29.81018, -84.564976}, {29.786020999999998, -84.60400299999999}}) ^ isIntersection(candidate, {{29.786020999999998, -84.60400299999999}, {29.763039, -84.692619}}) ^ isIntersection(candidate, {{29.763039, -84.692619}, {29.692190999999998, -84.77695399999999}}) ^ isIntersection(candidate, {{29.692190999999998, -84.77695399999999}, {29.655758, -84.87673099999999}}) ^ isIntersection(candidate, {{29.655758, -84.87673099999999}, {29.586990999999998, -85.045074}}) ^ isIntersection(candidate, {{29.586990999999998, -85.045074}, {29.642889999999998, -85.15731}});
                        } else {
                            return isIntersection(candidate, {{45.799822999999996, -84.419696}, {45.771895, -84.35602}}) ^ isIntersection(candidate, {{45.771895, -84.35602}, {45.727623, -84.394038}}) ^ isIntersection(candidate, {{45.727623, -84.394038}, {45.730709999999995, -84.484128}}) ^ isIntersection(candidate, {{46.501076999999995, -84.42027399999999}, {46.492802999999995, -84.293016}}) ^ isIntersection(candidate, {{46.492802999999995, -84.293016}, {46.539919999999995, -84.19372899999999}}) ^ isIntersection(candidate, {{46.539919999999995, -84.19372899999999}, {46.517618999999996, -84.117925}}) ^ isIntersection(candidate, {{46.517618999999996, -84.117925}, {46.470143, -84.12502599999999}}) ^ isIntersection(candidate, {{46.470143, -84.12502599999999}, {46.372220999999996, -84.13890599999999}}) ^ isIntersection(candidate, {{46.372220999999996, -84.13890599999999}, {46.256512, -84.097766}}) ^ isIntersection(candidate, {{46.256512, -84.097766}, {46.241237999999996, -84.10808899999999}}) ^ isIntersection(candidate, {{46.241237999999996, -84.10808899999999}, {46.174113999999996, -84.114941}}) ^ isIntersection(candidate, {{46.174113999999996, -84.114941}, {46.131648, -84.026536}}) ^ isIntersection(candidate, {{46.131648, -84.026536}, {46.081551999999995, -83.974012}}) ^ isIntersection(candidate, {{46.081551999999995, -83.974012}, {46.042065, -83.882303}}) ^ isIntersection(candidate, {{46.042065, -83.882303}, {46.108529, -83.815826}}) ^ isIntersection(candidate, {{46.108529, -83.815826}, {46.101031, -83.719791}}) ^ isIntersection(candidate, {{45.945463, -83.65765999999999}, {45.937582, -83.80104}}) ^ isIntersection(candidate, {{45.937582, -83.80104}, {45.965613, -83.910838}}) ^ isIntersection(candidate, {{45.965613, -83.910838}, {45.970822, -84.08007099999999}}) ^ isIntersection(candidate, {{45.970822, -84.08007099999999}, {45.9679083747954, -84.1146065625188}}) ^ isIntersection(candidate, {{45.9679083747954, -84.1146065625188}, {45.956067999999995, -84.254952}}) ^ isIntersection(candidate, {{45.956067999999995, -84.254952}, {45.931962, -84.376429}}) ^ isIntersection(candidate, {{45.931962, -84.376429}, {45.977764, -84.480436}}) ^ isIntersection(candidate, {{45.669427, -84.413642}, {45.66438, -84.329537}}) ^ isIntersection(candidate, {{45.66438, -84.329537}, {45.6262310178484, -84.2108933455563}}) ^ isIntersection(candidate, {{45.6262310178484, -84.2108933455563}, {45.621455999999995, -84.196043}}) ^ isIntersection(candidate, {{45.621455999999995, -84.196043}, {45.556616, -84.126532}}) ^ isIntersection(candidate, {{45.556616, -84.126532}, {45.497298, -84.095905}}) ^ isIntersection(candidate, {{45.497298, -84.095905}, {45.491158, -83.99835}}) ^ isIntersection(candidate, {{45.491158, -83.99835}, {45.485783999999995, -83.909472}}) ^ isIntersection(candidate, {{45.485783999999995, -83.909472}, {45.435286999999995, -83.841543}}) ^ isIntersection(candidate, {{45.435286999999995, -83.841543}, {45.396239, -83.697316}}) ^ isIntersection(candidate, {{43.988769999999995, -83.693214}, {43.985279, -83.787863}}) ^ isIntersection(candidate, {{43.985279, -83.787863}, {43.960719, -83.869406}}) ^ isIntersection(candidate, {{43.960719, -83.869406}, {43.908427050844196, -83.90132935218101}}) ^ isIntersection(candidate, {{43.908427050844196, -83.90132935218101}, {43.89322, -83.910613}}) ^ isIntersection(candidate, {{43.89322, -83.910613}, {43.777091, -83.929375}}) ^ isIntersection(candidate, {{43.777091, -83.929375}, {43.735164999999995, -83.94774}}) ^ isIntersection(candidate, {{43.735164999999995, -83.94774}, {43.672622, -83.90947899999999}}) ^ isIntersection(candidate, {{43.672622, -83.90947899999999}, {43.673789, -83.817894}}) ^ isIntersection(candidate, {{43.673789, -83.817894}, {43.623369, -83.731005}}) ^ isIntersection(candidate, {{29.918512999999997, -83.67921899999999}, {29.976982, -83.78872899999999}}) ^ isIntersection(candidate, {{29.976982, -83.78872899999999}, {30.039068, -83.93151}}) ^ isIntersection(candidate, {{30.039068, -83.93151}, {30.0892687377287, -83.992310340478}}) ^ isIntersection(candidate, {{30.0892687377287, -83.992310340478}, {30.096208999999998, -84.000716}}) ^ isIntersection(candidate, {{30.096208999999998, -84.000716}, {30.101378, -84.06299}}) ^ isIntersection(candidate, {{30.101378, -84.06299}, {30.099089883730098, -84.0761320719114}}) ^ isIntersection(candidate, {{30.099089883730098, -84.0761320719114}, {30.090601, -84.124889}}) ^ isIntersection(candidate, {{30.090601, -84.124889}, {30.073186999999997, -84.179149}}) ^ isIntersection(candidate, {{30.073186999999997, -84.179149}, {30.084775999999998, -84.20801}}) ^ isIntersection(candidate, {{30.084775999999998, -84.20801}, {30.057197, -84.289727}}) ^ isIntersection(candidate, {{30.057197, -84.289727}, {30.008661999999998, -84.366115}}) ^ isIntersection(candidate, {{30.008661999999998, -84.366115}, {29.962208, -84.341439}}) ^ isIntersection(candidate, {{29.962208, -84.341439}, {29.9607563361054, -84.34114883318159}}) ^ isIntersection(candidate, {{29.9607563361054, -84.34114883318159}, {29.923720999999997, -84.33374599999999}}) ^ isIntersection(candidate, {{29.923720999999997, -84.33374599999999}, {29.896811999999997, -84.349066}}) ^ isIntersection(candidate, {{29.896811999999997, -84.349066}, {29.902995999999998, -84.423834}});
                        }
                    } else {
                        if (candidate.longitude < -83.343505859375) {
                            return isIntersection(candidate, {{46.108529, -83.815826}, {46.101031, -83.719791}}) ^ isIntersection(candidate, {{46.101031, -83.719791}, {46.090084999999995, -83.598612}}) ^ isIntersection(candidate, {{46.090084999999995, -83.598612}, {45.996164, -83.480639}}) ^ isIntersection(candidate, {{45.996164, -83.480639}, {45.918636, -83.526347}}) ^ isIntersection(candidate, {{45.918636, -83.526347}, {45.915918999999995, -83.583052}}) ^ isIntersection(candidate, {{45.915918999999995, -83.583052}, {45.945463, -83.65765999999999}}) ^ isIntersection(candidate, {{45.945463, -83.65765999999999}, {45.937582, -83.80104}}) ^ isIntersection(candidate, {{45.435286999999995, -83.841543}, {45.396239, -83.697316}}) ^ isIntersection(candidate, {{45.396239, -83.697316}, {45.352561, -83.599273}}) ^ isIntersection(candidate, {{45.352561, -83.599273}, {45.355872, -83.488826}}) ^ isIntersection(candidate, {{45.355872, -83.488826}, {45.274195, -83.385104}}) ^ isIntersection(candidate, {{45.274195, -83.385104}, {45.227157, -83.405914}}) ^ isIntersection(candidate, {{45.227157, -83.405914}, {45.207103993148, -83.38521107925649}}) ^ isIntersection(candidate, {{45.207103993148, -83.38521107925649}, {45.139992, -83.315924}}) ^ isIntersection(candidate, {{45.041545, -83.340257}, {45.070364, -83.399255}}) ^ isIntersection(candidate, {{45.070364, -83.399255}, {45.051055999999996, -83.44205199999999}}) ^ isIntersection(candidate, {{45.051055999999996, -83.44205199999999}, {45.000012, -83.435822}}) ^ isIntersection(candidate, {{45.000012, -83.435822}, {44.940843, -83.438856}}) ^ isIntersection(candidate, {{44.940843, -83.438856}, {44.886164, -83.35281499999999}}) ^ isIntersection(candidate, {{44.886164, -83.35281499999999}, {44.880570999999996, -83.320503}}) ^ isIntersection(candidate, {{44.332919, -83.33698799999999}, {44.301831, -83.401822}}) ^ isIntersection(candidate, {{44.301831, -83.401822}, {44.265361, -83.442731}}) ^ isIntersection(candidate, {{44.265361, -83.442731}, {44.261558, -83.524817}}) ^ isIntersection(candidate, {{44.261558, -83.524817}, {44.163524818403, -83.5646457924967}}) ^ isIntersection(candidate, {{44.163524818403, -83.5646457924967}, {44.155899, -83.56774399999999}}) ^ isIntersection(candidate, {{44.155899, -83.56774399999999}, {44.056748, -83.58408999999999}}) ^ isIntersection(candidate, {{44.056748, -83.58408999999999}, {44.036364999999996, -83.679654}}) ^ isIntersection(candidate, {{44.036364999999996, -83.679654}, {43.988769999999995, -83.693214}}) ^ isIntersection(candidate, {{43.988769999999995, -83.693214}, {43.985279, -83.787863}}) ^ isIntersection(candidate, {{43.673789, -83.817894}, {43.623369, -83.731005}}) ^ isIntersection(candidate, {{43.623369, -83.731005}, {43.601637150256494, -83.6994170918811}}) ^ isIntersection(candidate, {{43.601637150256494, -83.6994170918811}, {43.590584, -83.683351}}) ^ isIntersection(candidate, {{43.590584, -83.683351}, {43.719244919104895, -83.529640471734}}) ^ isIntersection(candidate, {{43.719244919104895, -83.529640471734}, {43.733726, -83.51234}}) ^ isIntersection(candidate, {{43.733726, -83.51234}, {43.7451572131399, -83.5060855525428}}) ^ isIntersection(candidate, {{43.7451572131399, -83.5060855525428}, {43.793625, -83.479567}}) ^ isIntersection(candidate, {{43.793625, -83.479567}, {43.885273, -83.43261}}) ^ isIntersection(candidate, {{43.885273, -83.43261}, {43.919807, -83.407146}}) ^ isIntersection(candidate, {{43.919807, -83.407146}, {43.938030999999995, -83.28231}}) ^ isIntersection(candidate, {{41.879956, -83.341557}, {41.852965, -83.39622}}) ^ isIntersection(candidate, {{41.852965, -83.39622}, {41.808645999999996, -83.44166799999999}}) ^ isIntersection(candidate, {{41.808645999999996, -83.44166799999999}, {41.740738, -83.424076}}) ^ isIntersection(candidate, {{41.740738, -83.424076}, {41.732647, -83.45383199999999}}) ^ isIntersection(candidate, {{41.732647, -83.45383199999999}, {41.691247, -83.409531}}) ^ isIntersection(candidate, {{41.691247, -83.409531}, {41.701561999999996, -83.326825}}) ^ isIntersection(candidate, {{29.468861, -83.307828}, {29.523291, -83.401552}}) ^ isIntersection(candidate, {{29.523291, -83.401552}, {29.59557, -83.405068}}) ^ isIntersection(candidate, {{29.59557, -83.405068}, {29.6660652244827, -83.4141265131585}}) ^ isIntersection(candidate, {{29.6660652244827, -83.4141265131585}, {29.670536, -83.414701}}) ^ isIntersection(candidate, {{29.670536, -83.414701}, {29.698542, -83.483567}}) ^ isIntersection(candidate, {{29.698542, -83.483567}, {29.72306, -83.537645}}) ^ isIntersection(candidate, {{29.72306, -83.537645}, {29.787307, -83.583045}}) ^ isIntersection(candidate, {{29.787307, -83.583045}, {29.856892, -83.62502599999999}}) ^ isIntersection(candidate, {{29.856892, -83.62502599999999}, {29.918512999999997, -83.67921899999999}}) ^ isIntersection(candidate, {{29.918512999999997, -83.67921899999999}, {29.976982, -83.78872899999999}});
                        } else {
                            return isIntersection(candidate, {{45.207103993148, -83.38521107925649}, {45.139992, -83.315924}}) ^ isIntersection(candidate, {{45.139992, -83.315924}, {45.026844, -83.265896}}) ^ isIntersection(candidate, {{45.026844, -83.265896}, {45.041545, -83.340257}}) ^ isIntersection(candidate, {{45.041545, -83.340257}, {45.070364, -83.399255}}) ^ isIntersection(candidate, {{44.886164, -83.35281499999999}, {44.880570999999996, -83.320503}}) ^ isIntersection(candidate, {{44.880570999999996, -83.320503}, {44.858591450560894, -83.3162661085766}}) ^ isIntersection(candidate, {{44.858591450560894, -83.3162661085766}, {44.758494999999996, -83.296971}}) ^ isIntersection(candidate, {{44.758494999999996, -83.296971}, {44.689353999999994, -83.276836}}) ^ isIntersection(candidate, {{44.689353999999994, -83.276836}, {44.608725, -83.314517}}) ^ isIntersection(candidate, {{44.608725, -83.314517}, {44.5116830117597, -83.3169638754402}}) ^ isIntersection(candidate, {{44.5116830117597, -83.3169638754402}, {44.486058, -83.31761}}) ^ isIntersection(candidate, {{44.486058, -83.31761}, {44.332919, -83.33698799999999}}) ^ isIntersection(candidate, {{44.332919, -83.33698799999999}, {44.301831, -83.401822}}) ^ isIntersection(candidate, {{43.919807, -83.407146}, {43.938030999999995, -83.28231}}) ^ isIntersection(candidate, {{43.938030999999995, -83.28231}, {43.973524999999995, -83.26153}}) ^ isIntersection(candidate, {{43.973524999999995, -83.26153}, {43.993147, -83.134881}}) ^ isIntersection(candidate, {{43.993147, -83.134881}, {44.01571, -83.046577}}) ^ isIntersection(candidate, {{44.01571, -83.046577}, {44.045173999999996, -83.024604}}) ^ isIntersection(candidate, {{44.045173999999996, -83.024604}, {44.069389, -82.928884}}) ^ isIntersection(candidate, {{44.069389, -82.928884}, {44.023247, -82.793205}}) ^ isIntersection(candidate, {{42.450888, -82.870347}, {42.352067999999996, -82.92397}}) ^ isIntersection(candidate, {{42.352067999999996, -82.92397}, {42.3442642212205, -82.94967209864559}}) ^ isIntersection(candidate, {{42.3442642212205, -82.94967209864559}, {42.332439, -82.988619}}) ^ isIntersection(candidate, {{42.332439, -82.988619}, {42.290138, -83.096521}}) ^ isIntersection(candidate, {{42.290138, -83.096521}, {42.2860113652487, -83.09785849625611}}) ^ isIntersection(candidate, {{42.2860113652487, -83.09785849625611}, {42.2310171461909, -83.11568284140249}}) ^ isIntersection(candidate, {{42.2310171461909, -83.11568284140249}, {42.17474, -83.133923}}) ^ isIntersection(candidate, {{42.17474, -83.133923}, {42.088142999999995, -83.133511}}) ^ isIntersection(candidate, {{42.088142999999995, -83.133511}, {42.052243, -83.185526}}) ^ isIntersection(candidate, {{42.052243, -83.185526}, {42.033107926811006, -83.1949523116895}}) ^ isIntersection(candidate, {{42.033107926811006, -83.1949523116895}, {41.988561, -83.216897}}) ^ isIntersection(candidate, {{41.988561, -83.216897}, {41.939042, -83.269521}}) ^ isIntersection(candidate, {{41.939042, -83.269521}, {41.924960999999996, -83.32602399999999}}) ^ isIntersection(candidate, {{41.924960999999996, -83.32602399999999}, {41.879956, -83.341557}}) ^ isIntersection(candidate, {{41.879956, -83.341557}, {41.852965, -83.39622}}) ^ isIntersection(candidate, {{41.691247, -83.409531}, {41.701561999999996, -83.326825}}) ^ isIntersection(candidate, {{41.701561999999996, -83.326825}, {41.644217999999995, -83.23165999999999}}) ^ isIntersection(candidate, {{41.644217999999995, -83.23165999999999}, {41.624130312973996, -83.1638214175228}}) ^ isIntersection(candidate, {{41.624130312973996, -83.1638214175228}, {41.59534, -83.066593}}) ^ isIntersection(candidate, {{41.59534, -83.066593}, {41.555656, -83.028072}}) ^ isIntersection(candidate, {{41.555656, -83.028072}, {41.514353, -82.93436899999999}}) ^ isIntersection(candidate, {{41.514353, -82.93436899999999}, {41.576370999999995, -82.85953099999999}}) ^ isIntersection(candidate, {{29.158424999999998, -82.827073}, {29.168906999999997, -82.92710699999999}}) ^ isIntersection(candidate, {{29.168906999999997, -82.92710699999999}, {29.178074, -82.996144}}) ^ isIntersection(candidate, {{29.178074, -82.996144}, {29.125370999999998, -83.01624799999999}}) ^ isIntersection(candidate, {{29.125370999999998, -83.01624799999999}, {29.130838999999998, -83.053207}}) ^ isIntersection(candidate, {{29.130838999999998, -83.053207}, {29.196944, -83.078986}}) ^ isIntersection(candidate, {{29.196944, -83.078986}, {29.247975, -83.07473399999999}}) ^ isIntersection(candidate, {{29.247975, -83.07473399999999}, {29.268888999999998, -83.107477}}) ^ isIntersection(candidate, {{29.268888999999998, -83.107477}, {29.2890918426466, -83.1659218115864}}) ^ isIntersection(candidate, {{29.2890918426466, -83.1659218115864}, {29.290354999999998, -83.16957599999999}}) ^ isIntersection(candidate, {{29.290354999999998, -83.16957599999999}, {29.34469, -83.175518}}) ^ isIntersection(candidate, {{29.34469, -83.175518}, {29.394422, -83.202446}}) ^ isIntersection(candidate, {{29.394422, -83.202446}, {29.433177999999998, -83.240509}}) ^ isIntersection(candidate, {{29.433177999999998, -83.240509}, {29.437922999999998, -83.294747}}) ^ isIntersection(candidate, {{29.437922999999998, -83.294747}, {29.468861, -83.307828}}) ^ isIntersection(candidate, {{29.468861, -83.307828}, {29.523291, -83.401552}});
                        }
                    }
                } else {
                    if (candidate.longitude < -82.255859375) {
                        if (candidate.longitude < -82.684326171875) {
                            return isIntersection(candidate, {{41.693692999999996, -82.863342}, {41.722809999999996, -82.82571999999999}}) ^ isIntersection(candidate, {{41.722809999999996, -82.82571999999999}, {41.694002999999995, -82.782719}}) ^ isIntersection(candidate, {{41.694002999999995, -82.782719}, {41.643046999999996, -82.788876}}) ^ isIntersection(candidate, {{41.643046999999996, -82.788876}, {41.628322999999995, -82.84209899999999}}) ^ isIntersection(candidate, {{41.628322999999995, -82.84209899999999}, {41.693692999999996, -82.863342}}) ^ isIntersection(candidate, {{44.069389, -82.928884}, {44.023247, -82.793205}}) ^ isIntersection(candidate, {{44.023247, -82.793205}, {43.948226, -82.709839}}) ^ isIntersection(candidate, {{43.948226, -82.709839}, {43.831224, -82.633641}}) ^ isIntersection(candidate, {{42.52221, -82.679059}, {42.621106999999995, -82.70637099999999}}) ^ isIntersection(candidate, {{42.621106999999995, -82.70637099999999}, {42.661232999999996, -82.639701}}) ^ isIntersection(candidate, {{42.661232999999996, -82.639701}, {42.675497, -82.70788499999999}}) ^ isIntersection(candidate, {{42.675497, -82.70788499999999}, {42.629545, -82.801022}}) ^ isIntersection(candidate, {{42.629545, -82.801022}, {42.600051, -82.766004}}) ^ isIntersection(candidate, {{42.600051, -82.766004}, {42.564415, -82.755927}}) ^ isIntersection(candidate, {{42.564415, -82.755927}, {42.541934999999995, -82.85931599999999}}) ^ isIntersection(candidate, {{42.541934999999995, -82.85931599999999}, {42.5408532196089, -82.8594470654881}}) ^ isIntersection(candidate, {{42.5408532196089, -82.8594470654881}, {42.5345545050925, -82.86021020013101}}) ^ isIntersection(candidate, {{42.5345545050925, -82.86021020013101}, {42.474122730693104, -82.8675319449814}}) ^ isIntersection(candidate, {{42.474122730693104, -82.8675319449814}, {42.451009584205096, -82.87033226919759}}) ^ isIntersection(candidate, {{42.451009584205096, -82.87033226919759}, {42.450888, -82.870347}}) ^ isIntersection(candidate, {{42.450888, -82.870347}, {42.352067999999996, -82.92397}}) ^ isIntersection(candidate, {{41.514353, -82.93436899999999}, {41.576370999999995, -82.85953099999999}}) ^ isIntersection(candidate, {{41.576370999999995, -82.85953099999999}, {41.587587, -82.83410099999999}}) ^ isIntersection(candidate, {{41.587587, -82.83410099999999}, {41.54193, -82.717878}}) ^ isIntersection(candidate, {{41.54193, -82.717878}, {41.496705795438196, -82.6905671606649}}) ^ isIntersection(candidate, {{41.496705795438196, -82.6905671606649}, {41.492323999999996, -82.687921}}) ^ isIntersection(candidate, {{41.492323999999996, -82.687921}, {41.428425, -82.616952}}) ^ isIntersection(candidate, {{27.38972, -82.64817061685949}, {27.437217999999998, -82.69182099999999}}) ^ isIntersection(candidate, {{27.437217999999998, -82.69182099999999}, {27.531086, -82.743017}}) ^ isIntersection(candidate, {{27.531086, -82.743017}, {27.528933, -82.719852}}) ^ isIntersection(candidate, {{27.528933, -82.719852}, {27.523114999999997, -82.65071999999999}}) ^ isIntersection(candidate, {{27.700307, -82.652521}, {27.62531, -82.705017}}) ^ isIntersection(candidate, {{27.62531, -82.705017}, {27.612972, -82.733076}}) ^ isIntersection(candidate, {{27.612972, -82.733076}, {27.678504, -82.738467}}) ^ isIntersection(candidate, {{27.678504, -82.738467}, {27.731306, -82.746223}}) ^ isIntersection(candidate, {{27.731306, -82.746223}, {27.791603, -82.790224}}) ^ isIntersection(candidate, {{27.791603, -82.790224}, {27.854301, -82.846526}}) ^ isIntersection(candidate, {{27.854301, -82.846526}, {27.937161999999997, -82.840882}}) ^ isIntersection(candidate, {{27.937161999999997, -82.840882}, {28.0190315348922, -82.82833139477509}}) ^ isIntersection(candidate, {{28.0190315348922, -82.82833139477509}, {28.020129999999998, -82.82816299999999}}) ^ isIntersection(candidate, {{28.020129999999998, -82.82816299999999}, {28.102451, -82.850881}}) ^ isIntersection(candidate, {{28.102451, -82.850881}, {28.1721750746045, -82.85938495603301}}) ^ isIntersection(candidate, {{28.1721750746045, -82.85938495603301}, {28.174135, -82.859624}}) ^ isIntersection(candidate, {{28.174135, -82.859624}, {28.244345, -82.76410299999999}}) ^ isIntersection(candidate, {{28.244345, -82.76410299999999}, {28.325075, -82.73146}}) ^ isIntersection(candidate, {{28.325075, -82.73146}, {28.420166, -82.69743299999999}}) ^ isIntersection(candidate, {{28.420166, -82.69743299999999}, {28.433341925762697, -82.69079501337609}}) ^ isIntersection(candidate, {{28.433341925762697, -82.69079501337609}, {28.484434, -82.665055}}) ^ isIntersection(candidate, {{28.695657999999998, -82.668722}, {28.720920999999997, -82.712373}}) ^ isIntersection(candidate, {{28.720920999999997, -82.712373}, {28.800283, -82.713121}}) ^ isIntersection(candidate, {{28.800283, -82.713121}, {28.850154999999997, -82.730245}}) ^ isIntersection(candidate, {{28.850154999999997, -82.730245}, {28.905609, -82.688864}}) ^ isIntersection(candidate, {{28.905609, -82.688864}, {28.953505999999997, -82.723861}}) ^ isIntersection(candidate, {{28.953505999999997, -82.723861}, {29.0009301182604, -82.7555738086957}}) ^ isIntersection(candidate, {{29.0009301182604, -82.7555738086957}, {29.006618999999997, -82.759378}}) ^ isIntersection(candidate, {{29.006618999999997, -82.759378}, {29.054191999999997, -82.759704}}) ^ isIntersection(candidate, {{29.054191999999997, -82.759704}, {29.098902, -82.82365899999999}}) ^ isIntersection(candidate, {{29.098902, -82.82365899999999}, {29.114504, -82.79887599999999}}) ^ isIntersection(candidate, {{29.114504, -82.79887599999999}, {29.158424999999998, -82.827073}}) ^ isIntersection(candidate, {{29.158424999999998, -82.827073}, {29.168906999999997, -82.92710699999999}});
                        } else {
                            return isIntersection(candidate, {{43.948226, -82.709839}, {43.831224, -82.633641}}) ^ isIntersection(candidate, {{43.831224, -82.633641}, {43.739771, -82.612224}}) ^ isIntersection(candidate, {{43.739771, -82.612224}, {43.6904492707095, -82.60647908283809}}) ^ isIntersection(candidate, {{43.6904492707095, -82.60647908283809}, {43.581466999999996, -82.593785}}) ^ isIntersection(candidate, {{43.581466999999996, -82.593785}, {43.422377999999995, -82.53993}}) ^ isIntersection(candidate, {{43.422377999999995, -82.53993}, {43.225361, -82.52308599999999}}) ^ isIntersection(candidate, {{43.225361, -82.52308599999999}, {43.1688273713115, -82.5060424049551}}) ^ isIntersection(candidate, {{43.1688273713115, -82.5060424049551}, {43.102486, -82.486042}}) ^ isIntersection(candidate, {{43.102486, -82.486042}, {43.005555, -82.415937}}) ^ isIntersection(candidate, {{43.005555, -82.415937}, {42.952000999999996, -82.428603}}) ^ isIntersection(candidate, {{42.952000999999996, -82.428603}, {42.887459, -82.469912}}) ^ isIntersection(candidate, {{42.887459, -82.469912}, {42.76191, -82.467483}}) ^ isIntersection(candidate, {{42.76191, -82.467483}, {42.637294, -82.509935}}) ^ isIntersection(candidate, {{42.637294, -82.509935}, {42.554041, -82.583996}}) ^ isIntersection(candidate, {{42.554041, -82.583996}, {42.52221, -82.679059}}) ^ isIntersection(candidate, {{42.52221, -82.679059}, {42.621106999999995, -82.70637099999999}}) ^ isIntersection(candidate, {{42.621106999999995, -82.70637099999999}, {42.661232999999996, -82.639701}}) ^ isIntersection(candidate, {{42.661232999999996, -82.639701}, {42.675497, -82.70788499999999}}) ^ isIntersection(candidate, {{41.492323999999996, -82.687921}, {41.428425, -82.616952}}) ^ isIntersection(candidate, {{41.428425, -82.616952}, {41.391157, -82.533208}}) ^ isIntersection(candidate, {{41.391157, -82.533208}, {41.386316, -82.460599}}) ^ isIntersection(candidate, {{41.386316, -82.460599}, {41.426643999999996, -82.361784}}) ^ isIntersection(candidate, {{41.426643999999996, -82.361784}, {41.427263308734496, -82.3480192068912}}) ^ isIntersection(candidate, {{41.427263308734496, -82.3480192068912}, {41.430842, -82.268479}}) ^ isIntersection(candidate, {{41.430842, -82.268479}, {41.471634, -82.181598}}) ^ isIntersection(candidate, {{26.601094, -82.245395}, {26.698496, -82.26435099999999}}) ^ isIntersection(candidate, {{26.698496, -82.26435099999999}, {26.756836, -82.264682}}) ^ isIntersection(candidate, {{26.756836, -82.264682}, {26.7893085864431, -82.2805412776288}}) ^ isIntersection(candidate, {{26.7893085864431, -82.2805412776288}, {26.858383999999997, -82.31427699999999}}) ^ isIntersection(candidate, {{26.858383999999997, -82.31427699999999}, {26.9460810256335, -82.36920139216909}}) ^ isIntersection(candidate, {{26.9460810256335, -82.36920139216909}, {27.079359, -82.45267299999999}}) ^ isIntersection(candidate, {{27.079359, -82.45267299999999}, {27.2078263032418, -82.5165854227882}}) ^ isIntersection(candidate, {{27.2078263032418, -82.5165854227882}, {27.254326, -82.53971899999999}}) ^ isIntersection(candidate, {{27.254326, -82.53971899999999}, {27.348817, -82.610581}}) ^ isIntersection(candidate, {{27.348817, -82.610581}, {27.38972, -82.64817061685949}}) ^ isIntersection(candidate, {{27.38972, -82.64817061685949}, {27.437217999999998, -82.69182099999999}}) ^ isIntersection(candidate, {{27.528933, -82.719852}, {27.523114999999997, -82.65071999999999}}) ^ isIntersection(candidate, {{27.523114999999997, -82.65071999999999}, {27.596021, -82.58462899999999}}) ^ isIntersection(candidate, {{27.596021, -82.58462899999999}, {27.645447596365496, -82.55288720706359}}) ^ isIntersection(candidate, {{27.645447596365496, -82.55288720706359}, {27.705588, -82.514265}}) ^ isIntersection(candidate, {{27.705588, -82.514265}, {27.723004, -82.477638}}) ^ isIntersection(candidate, {{27.723004, -82.477638}, {27.768092, -82.43198}}) ^ isIntersection(candidate, {{27.768092, -82.43198}, {27.810036, -82.448786}}) ^ isIntersection(candidate, {{27.810036, -82.448786}, {27.817585625527297, -82.4734467487892}}) ^ isIntersection(candidate, {{27.817585625527297, -82.4734467487892}, {27.822606999999998, -82.48984899999999}}) ^ isIntersection(candidate, {{27.822606999999998, -82.48984899999999}, {27.848461999999998, -82.553946}}) ^ isIntersection(candidate, {{27.848461999999998, -82.553946}, {27.836338217713397, -82.56638052125129}}) ^ isIntersection(candidate, {{27.836338217713397, -82.56638052125129}, {27.816703, -82.586519}}) ^ isIntersection(candidate, {{27.816703, -82.586519}, {27.779868, -82.622723}}) ^ isIntersection(candidate, {{27.779868, -82.622723}, {27.732706, -82.62501999999999}}) ^ isIntersection(candidate, {{27.732706, -82.62501999999999}, {27.700307, -82.652521}}) ^ isIntersection(candidate, {{27.700307, -82.652521}, {27.62531, -82.705017}}) ^ isIntersection(candidate, {{28.433341925762697, -82.69079501337609}, {28.484434, -82.665055}}) ^ isIntersection(candidate, {{28.484434, -82.665055}, {28.544814, -82.656694}}) ^ isIntersection(candidate, {{28.544814, -82.656694}, {28.622411, -82.668149}}) ^ isIntersection(candidate, {{28.622411, -82.668149}, {28.694303268585198, -82.66871140214481}}) ^ isIntersection(candidate, {{28.694303268585198, -82.66871140214481}, {28.695657999999998, -82.668722}}) ^ isIntersection(candidate, {{28.695657999999998, -82.668722}, {28.720920999999997, -82.712373}});
                        }
                    } else {
                        if (candidate.longitude < -81.44287109375) {
                            return isIntersection(candidate, {{24.568745, -81.81169299999999}, {24.653516999999997, -81.751266}}) ^ isIntersection(candidate, {{24.653516999999997, -81.751266}, {24.699514, -81.672338}}) ^ isIntersection(candidate, {{24.699514, -81.672338}, {24.736696, -81.584599}}) ^ isIntersection(candidate, {{24.736696, -81.584599}, {24.756353999999998, -81.571151}}) ^ isIntersection(candidate, {{24.756353999999998, -81.571151}, {24.813364, -81.44351}}) ^ isIntersection(candidate, {{24.813364, -81.44351}, {24.755184999999997, -81.305054}}) ^ isIntersection(candidate, {{24.623544, -81.401889}, {24.642677, -81.44391499999999}}) ^ isIntersection(candidate, {{24.642677, -81.44391499999999}, {24.621239, -81.517404}}) ^ isIntersection(candidate, {{24.621239, -81.517404}, {24.593107, -81.595334}}) ^ isIntersection(candidate, {{24.593107, -81.595334}, {24.558676, -81.685243}}) ^ isIntersection(candidate, {{24.558676, -81.685243}, {24.545469, -81.812536}}) ^ isIntersection(candidate, {{24.545469, -81.812536}, {24.568745, -81.81169299999999}}) ^ isIntersection(candidate, {{24.543070999999998, -82.01491}, {24.580682, -81.983908}}) ^ isIntersection(candidate, {{24.580682, -81.983908}, {24.58412, -81.86871099999999}}) ^ isIntersection(candidate, {{24.58412, -81.86871099999999}, {24.498130999999997, -81.918855}}) ^ isIntersection(candidate, {{24.498130999999997, -81.918855}, {24.498715999999998, -82.02809099999999}}) ^ isIntersection(candidate, {{24.498715999999998, -82.02809099999999}, {24.543070999999998, -82.01491}}) ^ isIntersection(candidate, {{24.574699, -82.188031}, {24.622481, -82.144099}}) ^ isIntersection(candidate, {{24.622481, -82.144099}, {24.590071, -82.086643}}) ^ isIntersection(candidate, {{24.590071, -82.086643}, {24.533288, -82.100757}}) ^ isIntersection(candidate, {{24.533288, -82.100757}, {24.52947, -82.17945399999999}}) ^ isIntersection(candidate, {{24.52947, -82.17945399999999}, {24.574699, -82.188031}}) ^ isIntersection(candidate, {{41.430842, -82.268479}, {41.471634, -82.181598}}) ^ isIntersection(candidate, {{41.471634, -82.181598}, {41.496911986784696, -82.07115045287361}}) ^ isIntersection(candidate, {{41.496911986784696, -82.07115045287361}, {41.51444, -81.994565}}) ^ isIntersection(candidate, {{41.51444, -81.994565}, {41.5038610079018, -81.968480702529}}) ^ isIntersection(candidate, {{41.5038610079018, -81.968480702529}, {41.50055329259779, -81.9603249700039}}) ^ isIntersection(candidate, {{41.50055329259779, -81.9603249700039}, {41.491443, -81.937862}}) ^ isIntersection(candidate, {{41.491443, -81.937862}, {41.4952594192894, -81.8225035796994}}) ^ isIntersection(candidate, {{41.4952594192894, -81.8225035796994}, {41.495647999999996, -81.81075799999999}}) ^ isIntersection(candidate, {{41.495647999999996, -81.81075799999999}, {41.4914896464763, -81.7685751416216}}) ^ isIntersection(candidate, {{41.4914896464763, -81.7685751416216}, {41.48855, -81.738755}}) ^ isIntersection(candidate, {{41.48855, -81.738755}, {41.540458, -81.633652}}) ^ isIntersection(candidate, {{41.540458, -81.633652}, {41.634463927820896, -81.48868273340901}}) ^ isIntersection(candidate, {{41.634463927820896, -81.48868273340901}, {41.649148, -81.466038}}) ^ isIntersection(candidate, {{41.649148, -81.466038}, {41.707144, -81.388632}}) ^ isIntersection(candidate, {{30.821368999999997, -81.44013}, {30.769911999999998, -81.460061}}) ^ isIntersection(candidate, {{30.769911999999998, -81.460061}, {30.709713999999998, -81.444124}}) ^ isIntersection(candidate, {{30.709713999999998, -81.444124}, {30.69802, -81.42742}}) ^ isIntersection(candidate, {{30.69802, -81.42742}, {30.600938, -81.44309899999999}}) ^ isIntersection(candidate, {{30.600938, -81.44309899999999}, {30.522568999999997, -81.43406399999999}}) ^ isIntersection(candidate, {{25.803129028431, -81.44186477179919}, {25.81693, -81.472239}}) ^ isIntersection(candidate, {{25.81693, -81.472239}, {25.893977, -81.614735}}) ^ isIntersection(candidate, {{25.893977, -81.614735}, {25.8775375792851, -81.6402369580568}}) ^ isIntersection(candidate, {{25.8775375792851, -81.6402369580568}, {25.856654, -81.67263299999999}}) ^ isIntersection(candidate, {{25.856654, -81.67263299999999}, {25.907207, -81.727086}}) ^ isIntersection(candidate, {{25.907207, -81.727086}, {26.000373999999997, -81.757463}}) ^ isIntersection(candidate, {{26.000373999999997, -81.757463}, {26.152245999999998, -81.80883299999999}}) ^ isIntersection(candidate, {{26.152245999999998, -81.80883299999999}, {26.327712, -81.844555}}) ^ isIntersection(candidate, {{26.327712, -81.844555}, {26.330372048502802, -81.8464852479618}}) ^ isIntersection(candidate, {{26.330372048502802, -81.8464852479618}, {26.436657999999998, -81.923611}}) ^ isIntersection(candidate, {{26.436657999999998, -81.923611}, {26.452358, -81.956611}}) ^ isIntersection(candidate, {{26.452358, -81.956611}, {26.452057999999997, -82.013913}}) ^ isIntersection(candidate, {{26.452057999999997, -82.013913}, {26.422058999999997, -82.075015}}) ^ isIntersection(candidate, {{26.422058999999997, -82.075015}, {26.436279, -82.126671}}) ^ isIntersection(candidate, {{26.436279, -82.126671}, {26.476257, -82.180717}}) ^ isIntersection(candidate, {{26.476257, -82.180717}, {26.601094, -82.245395}}) ^ isIntersection(candidate, {{26.601094, -82.245395}, {26.698496, -82.26435099999999}});
                        } else {
                            return isIntersection(candidate, {{24.813364, -81.44351}, {24.755184999999997, -81.305054}}) ^ isIntersection(candidate, {{24.755184999999997, -81.305054}, {24.673997999999997, -81.24323199999999}}) ^ isIntersection(candidate, {{24.673997999999997, -81.24323199999999}, {24.637774, -81.342192}}) ^ isIntersection(candidate, {{24.637774, -81.342192}, {24.623544, -81.401889}}) ^ isIntersection(candidate, {{24.623544, -81.401889}, {24.642677, -81.44391499999999}}) ^ isIntersection(candidate, {{41.649148, -81.466038}, {41.707144, -81.388632}}) ^ isIntersection(candidate, {{41.707144, -81.388632}, {41.760242999999996, -81.286925}}) ^ isIntersection(candidate, {{41.760242999999996, -81.286925}, {41.786671, -81.18436799999999}}) ^ isIntersection(candidate, {{41.786671, -81.18436799999999}, {41.839557, -81.05192}}) ^ isIntersection(candidate, {{31.761256, -81.077057}, {31.722692, -81.130634}}) ^ isIntersection(candidate, {{31.722692, -81.130634}, {31.710564597966098, -81.13529859020049}}) ^ isIntersection(candidate, {{31.710564597966098, -81.13529859020049}, {31.699917, -81.139394}}) ^ isIntersection(candidate, {{31.699917, -81.139394}, {31.623348, -81.133493}}) ^ isIntersection(candidate, {{31.623348, -81.133493}, {31.555908, -81.173079}}) ^ isIntersection(candidate, {{31.555908, -81.173079}, {31.5395964494948, -81.1748326365906}}) ^ isIntersection(candidate, {{31.5395964494948, -81.1748326365906}, {31.517073999999997, -81.17725399999999}}) ^ isIntersection(candidate, {{31.517073999999997, -81.17725399999999}, {31.462818, -81.213493}}) ^ isIntersection(candidate, {{31.462818, -81.213493}, {31.404425, -81.25861599999999}}) ^ isIntersection(candidate, {{31.404425, -81.25861599999999}, {31.351126999999998, -81.279338}}) ^ isIntersection(candidate, {{31.351126999999998, -81.279338}, {31.30391, -81.260958}}) ^ isIntersection(candidate, {{31.30391, -81.260958}, {31.294599064745498, -81.2643779480884}}) ^ isIntersection(candidate, {{31.294599064745498, -81.2643779480884}, {31.244329999999998, -81.282842}}) ^ isIntersection(candidate, {{31.244329999999998, -81.282842}, {31.206173, -81.304957}}) ^ isIntersection(candidate, {{31.206173, -81.304957}, {31.136533999999997, -81.368241}}) ^ isIntersection(candidate, {{31.136533999999997, -81.368241}, {31.125383, -81.402096}}) ^ isIntersection(candidate, {{31.125383, -81.402096}, {31.072781, -81.40126699999999}}) ^ isIntersection(candidate, {{31.072781, -81.40126699999999}, {31.016703, -81.420474}}) ^ isIntersection(candidate, {{31.016703, -81.420474}, {30.9908345035084, -81.4125180355795}}) ^ isIntersection(candidate, {{30.9908345035084, -81.4125180355795}, {30.977718, -81.408484}}) ^ isIntersection(candidate, {{30.977718, -81.408484}, {30.908203, -81.405153}}) ^ isIntersection(candidate, {{30.908203, -81.405153}, {30.821368999999997, -81.44013}}) ^ isIntersection(candidate, {{30.821368999999997, -81.44013}, {30.769911999999998, -81.460061}}) ^ isIntersection(candidate, {{30.709713999999998, -81.444124}, {30.69802, -81.42742}}) ^ isIntersection(candidate, {{30.69802, -81.42742}, {30.600938, -81.44309899999999}}) ^ isIntersection(candidate, {{30.600938, -81.44309899999999}, {30.522568999999997, -81.43406399999999}}) ^ isIntersection(candidate, {{30.522568999999997, -81.43406399999999}, {30.5061830741652, -81.4289547376433}}) ^ isIntersection(candidate, {{30.5061830741652, -81.4289547376433}, {30.496738999999998, -81.42600999999999}}) ^ isIntersection(candidate, {{30.496738999999998, -81.42600999999999}, {30.482039, -81.410809}}) ^ isIntersection(candidate, {{30.482039, -81.410809}, {30.34004, -81.396407}}) ^ isIntersection(candidate, {{30.34004, -81.396407}, {30.252931, -81.3743761280233}}) ^ isIntersection(candidate, {{30.252931, -81.3743761280233}, {29.91518, -81.288955}}) ^ isIntersection(candidate, {{29.91518, -81.288955}, {29.883105999999998, -81.270442}}) ^ isIntersection(candidate, {{29.883105999999998, -81.270442}, {29.822123486676098, -81.2619334605748}}) ^ isIntersection(candidate, {{29.822123486676098, -81.2619334605748}, {29.784692999999997, -81.256711}}) ^ isIntersection(candidate, {{29.784692999999997, -81.256711}, {29.6706408057043, -81.2104095965538}}) ^ isIntersection(candidate, {{29.6706408057043, -81.2104095965538}, {29.55529, -81.163581}}) ^ isIntersection(candidate, {{29.55529, -81.163581}, {29.426996650452, -81.10296735174539}}) ^ isIntersection(candidate, {{24.669463, -81.10337299999999}, {24.710476999999997, -81.148718}}) ^ isIntersection(candidate, {{24.710476999999997, -81.148718}, {24.772596, -81.03890799999999}}) ^ isIntersection(candidate, {{25.118796999999997, -81.079859}, {25.183, -81.14227799999999}}) ^ isIntersection(candidate, {{25.183, -81.14227799999999}, {25.245856999999997, -81.170907}}) ^ isIntersection(candidate, {{25.245856999999997, -81.170907}, {25.332793, -81.14810299999999}}) ^ isIntersection(candidate, {{25.332793, -81.14810299999999}, {25.407577, -81.146765}}) ^ isIntersection(candidate, {{25.407577, -81.146765}, {25.504936999999998, -81.208201}}) ^ isIntersection(candidate, {{25.504936999999998, -81.208201}, {25.599041, -81.24051899999999}}) ^ isIntersection(candidate, {{25.599041, -81.24051899999999}, {25.673554, -81.289901}}) ^ isIntersection(candidate, {{25.673554, -81.289901}, {25.703526, -81.355986}}) ^ isIntersection(candidate, {{25.703526, -81.355986}, {25.776750999999997, -81.38381}}) ^ isIntersection(candidate, {{25.776750999999997, -81.38381}, {25.803129028431, -81.44186477179919}}) ^ isIntersection(candidate, {{25.803129028431, -81.44186477179919}, {25.81693, -81.472239}});
                        }
                    }
                }
            } else {
                if (candidate.longitude < -78.125) {
                    if (candidate.longitude < -80.12451171875) {
                        if (candidate.longitude < -80.5859375) {
                            return isIntersection(candidate, {{41.786671, -81.18436799999999}, {41.839557, -81.05192}}) ^ isIntersection(candidate, {{41.839557, -81.05192}, {41.849172466437594, -81.0022694065175}}) ^ isIntersection(candidate, {{41.849172466437594, -81.0022694065175}, {41.868911999999995, -80.900342}}) ^ isIntersection(candidate, {{41.868911999999995, -80.900342}, {41.909635, -80.800794}}) ^ isIntersection(candidate, {{41.909635, -80.800794}, {41.957609999999995, -80.581882}}) ^ isIntersection(candidate, {{32.287023999999995, -80.539429}, {32.273548999999996, -80.59639399999999}}) ^ isIntersection(candidate, {{32.273548999999996, -80.59639399999999}, {32.291497, -80.64479399999999}}) ^ isIntersection(candidate, {{32.291497, -80.64479399999999}, {32.325655999999995, -80.714601}}) ^ isIntersection(candidate, {{32.325655999999995, -80.714601}, {32.292608, -80.766038}}) ^ isIntersection(candidate, {{32.292608, -80.766038}, {32.265706, -80.726967}}) ^ isIntersection(candidate, {{32.265706, -80.726967}, {32.216783, -80.66916599999999}}) ^ isIntersection(candidate, {{32.216783, -80.66916599999999}, {32.160427, -80.721463}}) ^ isIntersection(candidate, {{32.160427, -80.721463}, {32.109746, -80.81250299999999}}) ^ isIntersection(candidate, {{32.109746, -80.81250299999999}, {32.099581, -80.858735}}) ^ isIntersection(candidate, {{32.099581, -80.858735}, {32.078489999999995, -80.8674276818916}}) ^ isIntersection(candidate, {{32.078489999999995, -80.8674276818916}, {32.034600000000005, -80.885517}}) ^ isIntersection(candidate, {{32.034600000000005, -80.885517}, {32.024226, -80.84313}}) ^ isIntersection(candidate, {{32.024226, -80.84313}, {31.988279, -80.848441}}) ^ isIntersection(candidate, {{31.988279, -80.848441}, {31.943769, -80.91120699999999}}) ^ isIntersection(candidate, {{31.943769, -80.91120699999999}, {31.912983999999998, -80.94135899999999}}) ^ isIntersection(candidate, {{31.912983999999998, -80.94135899999999}, {31.856744, -81.000317}}) ^ isIntersection(candidate, {{31.856744, -81.000317}, {31.812721, -81.036873}}) ^ isIntersection(candidate, {{31.812721, -81.036873}, {31.761256, -81.077057}}) ^ isIntersection(candidate, {{31.761256, -81.077057}, {31.722692, -81.130634}}) ^ isIntersection(candidate, {{29.55529, -81.163581}, {29.426996650452, -81.10296735174539}}) ^ isIntersection(candidate, {{29.426996650452, -81.10296735174539}, {29.307855999999997, -81.046678}}) ^ isIntersection(candidate, {{29.307855999999997, -81.046678}, {29.147959999999998, -80.96617599999999}}) ^ isIntersection(candidate, {{29.147959999999998, -80.96617599999999}, {29.064262, -80.907275}}) ^ isIntersection(candidate, {{29.064262, -80.907275}, {28.875266, -80.787021}}) ^ isIntersection(candidate, {{28.875266, -80.787021}, {28.7911928713227, -80.7275056700737}}) ^ isIntersection(candidate, {{28.7911928713227, -80.7275056700737}, {28.677875, -80.647288}}) ^ isIntersection(candidate, {{28.677875, -80.647288}, {28.597704999999998, -80.583884}}) ^ isIntersection(candidate, {{28.459453999999997, -80.525094}, {28.410856, -80.587813}}) ^ isIntersection(candidate, {{28.410856, -80.587813}, {28.336484, -80.60687399999999}}) ^ isIntersection(candidate, {{28.336484, -80.60687399999999}, {28.257732999999998, -80.604214}}) ^ isIntersection(candidate, {{28.257732999999998, -80.604214}, {28.177989999999998, -80.589975}}) ^ isIntersection(candidate, {{28.177989999999998, -80.589975}, {28.048795, -80.547675}}) ^ isIntersection(candidate, {{24.999323999999998, -80.49676099999999}, {24.866131, -80.651189}}) ^ isIntersection(candidate, {{24.866131, -80.651189}, {24.707852, -80.966245}}) ^ isIntersection(candidate, {{24.707852, -80.966245}, {24.669463, -81.10337299999999}}) ^ isIntersection(candidate, {{24.669463, -81.10337299999999}, {24.710476999999997, -81.148718}}) ^ isIntersection(candidate, {{24.710476999999997, -81.148718}, {24.772596, -81.03890799999999}}) ^ isIntersection(candidate, {{24.772596, -81.03890799999999}, {24.851753, -80.847471}}) ^ isIntersection(candidate, {{24.851753, -80.847471}, {25.006995, -80.610869}}) ^ isIntersection(candidate, {{25.006995, -80.610869}, {25.095457, -80.516571}}) ^ isIntersection(candidate, {{25.206379, -80.542391}, {25.189097, -80.650532}}) ^ isIntersection(candidate, {{25.189097, -80.650532}, {25.15253, -80.710607}}) ^ isIntersection(candidate, {{25.15253, -80.710607}, {25.147441, -80.74774599999999}}) ^ isIntersection(candidate, {{25.147441, -80.74774599999999}, {25.186038999999997, -80.812133}}) ^ isIntersection(candidate, {{25.186038999999997, -80.812133}, {25.177520326526096, -80.8581700400306}}) ^ isIntersection(candidate, {{25.177520326526096, -80.8581700400306}, {25.174321, -80.87545999999999}}) ^ isIntersection(candidate, {{25.174321, -80.87545999999999}, {25.141301, -80.91592399999999}}) ^ isIntersection(candidate, {{25.141301, -80.91592399999999}, {25.125403, -81.009598}}) ^ isIntersection(candidate, {{25.125403, -81.009598}, {25.118796999999997, -81.079859}}) ^ isIntersection(candidate, {{25.118796999999997, -81.079859}, {25.183, -81.14227799999999}});
                        } else {
                            return isIntersection(candidate, {{41.909635, -80.800794}, {41.957609999999995, -80.581882}}) ^ isIntersection(candidate, {{41.957609999999995, -80.581882}, {41.977523, -80.519425}}) ^ isIntersection(candidate, {{41.977523, -80.519425}, {42.036167999999996, -80.329976}}) ^ isIntersection(candidate, {{42.036167999999996, -80.329976}, {42.114757, -80.154084}}) ^ isIntersection(candidate, {{42.114757, -80.154084}, {42.149937, -80.136213}}) ^ isIntersection(candidate, {{42.149937, -80.136213}, {42.173184, -80.088512}}) ^ isIntersection(candidate, {{32.603319, -80.077039}, {32.578479, -80.148406}}) ^ isIntersection(candidate, {{32.578479, -80.148406}, {32.546841, -80.190108}}) ^ isIntersection(candidate, {{32.546841, -80.190108}, {32.531113999999995, -80.246361}}) ^ isIntersection(candidate, {{32.531113999999995, -80.246361}, {32.5293593843875, -80.2494423292999}}) ^ isIntersection(candidate, {{32.5293593843875, -80.2494423292999}, {32.47873, -80.338354}}) ^ isIntersection(candidate, {{32.47873, -80.338354}, {32.471174, -80.413505}}) ^ isIntersection(candidate, {{32.471174, -80.413505}, {32.4953, -80.46571}}) ^ isIntersection(candidate, {{32.4953, -80.46571}, {32.4833489145801, -80.4722931246951}}) ^ isIntersection(candidate, {{32.4833489145801, -80.4722931246951}, {32.460975999999995, -80.484617}}) ^ isIntersection(candidate, {{32.460975999999995, -80.484617}, {32.410264, -80.45750199999999}}) ^ isIntersection(candidate, {{32.410264, -80.45750199999999}, {32.375192999999996, -80.434303}}) ^ isIntersection(candidate, {{32.375192999999996, -80.434303}, {32.326457999999995, -80.455192}}) ^ isIntersection(candidate, {{32.326457999999995, -80.455192}, {32.287023999999995, -80.539429}}) ^ isIntersection(candidate, {{32.287023999999995, -80.539429}, {32.273548999999996, -80.59639399999999}}) ^ isIntersection(candidate, {{28.677875, -80.647288}, {28.597704999999998, -80.583884}}) ^ isIntersection(candidate, {{28.597704999999998, -80.583884}, {28.459453999999997, -80.525094}}) ^ isIntersection(candidate, {{28.459453999999997, -80.525094}, {28.410856, -80.587813}}) ^ isIntersection(candidate, {{28.177989999999998, -80.589975}, {28.048795, -80.547675}}) ^ isIntersection(candidate, {{28.048795, -80.547675}, {27.860513513361003, -80.4476769492176}}) ^ isIntersection(candidate, {{27.860513513361003, -80.4476769492176}, {27.740045, -80.383695}}) ^ isIntersection(candidate, {{27.740045, -80.383695}, {27.597541, -80.330956}}) ^ isIntersection(candidate, {{27.597541, -80.330956}, {27.5573400246076, -80.31668661162038}}) ^ isIntersection(candidate, {{27.5573400246076, -80.31668661162038}, {27.37979, -80.253665}}) ^ isIntersection(candidate, {{27.37979, -80.253665}, {27.2630088036725, -80.1980213526587}}) ^ isIntersection(candidate, {{27.2630088036725, -80.1980213526587}, {27.169307999999997, -80.153375}}) ^ isIntersection(candidate, {{27.169307999999997, -80.153375}, {27.111517, -80.138605}}) ^ isIntersection(candidate, {{27.111517, -80.138605}, {27.072397, -80.116772}}) ^ isIntersection(candidate, {{25.762767, -80.123806}, {25.66549, -80.154972}}) ^ isIntersection(candidate, {{25.66549, -80.154972}, {25.685062, -80.17691599999999}}) ^ isIntersection(candidate, {{25.685062, -80.17691599999999}, {25.732509, -80.229107}}) ^ isIntersection(candidate, {{25.732509, -80.229107}, {25.658372999999997, -80.265879}}) ^ isIntersection(candidate, {{25.658372999999997, -80.265879}, {25.613298999999998, -80.301464}}) ^ isIntersection(candidate, {{25.613298999999998, -80.301464}, {25.539164, -80.313918}}) ^ isIntersection(candidate, {{25.539164, -80.313918}, {25.532620827266097, -80.3159759814327}}) ^ isIntersection(candidate, {{25.532620827266097, -80.3159759814327}, {25.465621, -80.337049}}) ^ isIntersection(candidate, {{25.465621, -80.337049}, {25.389706999999998, -80.31036}}) ^ isIntersection(candidate, {{25.389706999999998, -80.31036}, {25.42196, -80.234849}}) ^ isIntersection(candidate, {{25.42196, -80.234849}, {25.521154, -80.176024}}) ^ isIntersection(candidate, {{25.521154, -80.176024}, {25.452184, -80.163156}}) ^ isIntersection(candidate, {{25.452184, -80.163156}, {25.3370694594127, -80.23239055893039}}) ^ isIntersection(candidate, {{25.3370694594127, -80.23239055893039}, {25.326819999999998, -80.23855499999999}}) ^ isIntersection(candidate, {{25.326819999999998, -80.23855499999999}, {25.153228, -80.358183}}) ^ isIntersection(candidate, {{25.153228, -80.358183}, {24.999323999999998, -80.49676099999999}}) ^ isIntersection(candidate, {{24.999323999999998, -80.49676099999999}, {24.866131, -80.651189}}) ^ isIntersection(candidate, {{25.006995, -80.610869}, {25.095457, -80.516571}}) ^ isIntersection(candidate, {{25.095457, -80.516571}, {25.156674, -80.500513}}) ^ isIntersection(candidate, {{25.156674, -80.500513}, {25.199807999999997, -80.49539399999999}}) ^ isIntersection(candidate, {{25.199807999999997, -80.49539399999999}, {25.206379, -80.542391}}) ^ isIntersection(candidate, {{25.206379, -80.542391}, {25.189097, -80.650532}});
                        }
                    } else {
                        if (candidate.longitude < -79.3115234375) {
                            return isIntersection(candidate, {{42.149937, -80.136213}, {42.173184, -80.088512}}) ^ isIntersection(candidate, {{42.173184, -80.088512}, {42.163115999999995, -80.02032299999999}}) ^ isIntersection(candidate, {{42.163115999999995, -80.02032299999999}, {42.207546, -79.923924}}) ^ isIntersection(candidate, {{42.207546, -79.923924}, {42.235486, -79.844661}}) ^ isIntersection(candidate, {{42.235486, -79.844661}, {42.26986, -79.761951}}) ^ isIntersection(candidate, {{42.26986, -79.761951}, {42.324686, -79.627484}}) ^ isIntersection(candidate, {{42.324686, -79.627484}, {42.411156999999996, -79.453533}}) ^ isIntersection(candidate, {{42.411156999999996, -79.453533}, {42.466491, -79.38194299999999}}) ^ isIntersection(candidate, {{42.466491, -79.38194299999999}, {42.511227999999996, -79.28336399999999}}) ^ isIntersection(candidate, {{33.109773, -79.291591}, {33.089985999999996, -79.329909}}) ^ isIntersection(candidate, {{33.089985999999996, -79.329909}, {33.050336, -79.33931299999999}}) ^ isIntersection(candidate, {{33.050336, -79.33931299999999}, {33.006672, -79.359961}}) ^ isIntersection(candidate, {{33.006672, -79.359961}, {33.015085, -79.423447}}) ^ isIntersection(candidate, {{33.015085, -79.423447}, {33.001265, -79.483499}}) ^ isIntersection(candidate, {{33.001265, -79.483499}, {33.03535, -79.522449}}) ^ isIntersection(candidate, {{33.03535, -79.522449}, {33.006447, -79.580725}}) ^ isIntersection(candidate, {{33.006447, -79.580725}, {32.972248, -79.60661499999999}}) ^ isIntersection(candidate, {{32.972248, -79.60661499999999}, {32.926691999999996, -79.569762}}) ^ isIntersection(candidate, {{32.926691999999996, -79.569762}, {32.89815, -79.601309}}) ^ isIntersection(candidate, {{32.89815, -79.601309}, {32.850398, -79.69514099999999}}) ^ isIntersection(candidate, {{32.850398, -79.69514099999999}, {32.805996, -79.726389}}) ^ isIntersection(candidate, {{32.805996, -79.726389}, {32.766352, -79.818237}}) ^ isIntersection(candidate, {{32.766352, -79.818237}, {32.734849, -79.868352}}) ^ isIntersection(candidate, {{32.734849, -79.868352}, {32.684402, -79.88496099999999}}) ^ isIntersection(candidate, {{32.684402, -79.88496099999999}, {32.639731999999995, -79.968468}}) ^ isIntersection(candidate, {{32.639731999999995, -79.968468}, {32.605892, -80.000801}}) ^ isIntersection(candidate, {{32.605892, -80.000801}, {32.603319, -80.077039}}) ^ isIntersection(candidate, {{32.603319, -80.077039}, {32.578479, -80.148406}}) ^ isIntersection(candidate, {{27.111517, -80.138605}, {27.072397, -80.116772}}) ^ isIntersection(candidate, {{27.072397, -80.116772}, {26.970533999999997, -80.08307762975531}}) ^ isIntersection(candidate, {{26.970533999999997, -80.08307762975531}, {26.859237999999998, -80.046263}}) ^ isIntersection(candidate, {{26.859237999999998, -80.046263}, {26.805032294969898, -80.03752227753179}}) ^ isIntersection(candidate, {{26.805032294969898, -80.03752227753179}, {26.781856951962396, -80.03378523101209}}) ^ isIntersection(candidate, {{26.781856951962396, -80.03378523101209}, {26.77153, -80.03211999999999}}) ^ isIntersection(candidate, {{26.77153, -80.03211999999999}, {26.676043, -80.035763}}) ^ isIntersection(candidate, {{26.676043, -80.035763}, {26.644904088788902, -80.0355674560264}}) ^ isIntersection(candidate, {{26.644904088788902, -80.0355674560264}, {26.612346, -80.03536299999999}}) ^ isIntersection(candidate, {{26.612346, -80.03536299999999}, {26.569347, -80.03886299999999}}) ^ isIntersection(candidate, {{26.569347, -80.03886299999999}, {26.509549, -80.05036299999999}}) ^ isIntersection(candidate, {{26.509549, -80.05036299999999}, {26.4264024766503, -80.06160785733199}}) ^ isIntersection(candidate, {{26.4264024766503, -80.06160785733199}, {26.3209127698802, -80.0758744394432}}) ^ isIntersection(candidate, {{26.3209127698802, -80.0758744394432}, {26.249259, -80.085565}}) ^ isIntersection(candidate, {{26.249259, -80.085565}, {26.0932938862554, -80.10865850558919}}) ^ isIntersection(candidate, {{26.0932938862554, -80.10865850558919}, {26.087165, -80.109566}}) ^ isIntersection(candidate, {{26.087165, -80.109566}, {26.017023960834003, -80.1129782512854}}) ^ isIntersection(candidate, {{26.017023960834003, -80.1129782512854}, {25.975096332267896, -80.1150179645}}) ^ isIntersection(candidate, {{25.975096332267896, -80.1150179645}, {25.972815490010596, -80.1151289238901}}) ^ isIntersection(candidate, {{25.972815490010596, -80.1151289238901}, {25.915772, -80.117904}}) ^ isIntersection(candidate, {{25.915772, -80.117904}, {25.874199634692097, -80.1145142441078}}) ^ isIntersection(candidate, {{25.874199634692097, -80.1145142441078}, {25.872617320287898, -80.1143852242761}}) ^ isIntersection(candidate, {{25.872617320287898, -80.1143852242761}, {25.81826, -80.10995299999999}}) ^ isIntersection(candidate, {{25.81826, -80.10995299999999}, {25.762767, -80.123806}}) ^ isIntersection(candidate, {{25.762767, -80.123806}, {25.66549, -80.154972}});
                        } else {
                            return isIntersection(candidate, {{42.466491, -79.38194299999999}, {42.511227999999996, -79.28336399999999}}) ^ isIntersection(candidate, {{42.511227999999996, -79.28336399999999}, {42.545881, -79.193232}}) ^ isIntersection(candidate, {{42.545881, -79.193232}, {42.564462, -79.13856899999999}}) ^ isIntersection(candidate, {{42.564462, -79.13856899999999}, {42.5691787099736, -79.1359444040216}}) ^ isIntersection(candidate, {{42.5691787099736, -79.1359444040216}, {42.613358, -79.111361}}) ^ isIntersection(candidate, {{42.613358, -79.111361}, {42.644757999999996, -79.06376}}) ^ isIntersection(candidate, {{42.644757999999996, -79.06376}, {42.689158, -79.04885999999999}}) ^ isIntersection(candidate, {{42.689158, -79.04885999999999}, {42.715990999999995, -78.97237799999999}}) ^ isIntersection(candidate, {{42.715990999999995, -78.97237799999999}, {42.746120999999995, -78.904843}}) ^ isIntersection(candidate, {{42.746120999999995, -78.904843}, {42.791758, -78.851355}}) ^ isIntersection(candidate, {{42.791758, -78.851355}, {42.8052919998773, -78.85688499234989}}) ^ isIntersection(candidate, {{42.8052919998773, -78.85688499234989}, {42.826758, -78.865656}}) ^ isIntersection(candidate, {{42.826758, -78.865656}, {42.867258, -78.88255699999999}}) ^ isIntersection(candidate, {{42.867258, -78.88255699999999}, {42.886556999999996, -78.912458}}) ^ isIntersection(candidate, {{42.886556999999996, -78.912458}, {42.933257, -78.909159}}) ^ isIntersection(candidate, {{42.933257, -78.909159}, {42.952922, -78.92795699999999}}) ^ isIntersection(candidate, {{42.952922, -78.92795699999999}, {42.957755999999996, -78.961761}}) ^ isIntersection(candidate, {{42.957755999999996, -78.961761}, {42.994755999999995, -79.019964}}) ^ isIntersection(candidate, {{42.994755999999995, -79.019964}, {43.057231, -79.00545}}) ^ isIntersection(candidate, {{43.057231, -79.00545}, {43.066016, -79.01824599999999}}) ^ isIntersection(candidate, {{43.066016, -79.01824599999999}, {43.0662964678904, -79.0195778848943}}) ^ isIntersection(candidate, {{43.0662964678904, -79.0195778848943}, {43.077855, -79.074467}}) ^ isIntersection(candidate, {{43.077855, -79.074467}, {43.124798999999996, -79.060206}}) ^ isIntersection(candidate, {{43.124798999999996, -79.060206}, {43.133812266617, -79.0552524409396}}) ^ isIntersection(candidate, {{43.133812266617, -79.0552524409396}, {43.153255, -79.044567}}) ^ isIntersection(candidate, {{43.153255, -79.044567}, {43.222054, -79.05286799999999}}) ^ isIntersection(candidate, {{43.222054, -79.05286799999999}, {43.262454, -79.070469}}) ^ isIntersection(candidate, {{43.262454, -79.070469}, {43.317555, -78.83406099999999}}) ^ isIntersection(candidate, {{43.317555, -78.83406099999999}, {43.369541, -78.547395}}) ^ isIntersection(candidate, {{43.369541, -78.547395}, {43.3708954221664, -78.46555118759609}}) ^ isIntersection(candidate, {{43.3708954221664, -78.46555118759609}, {43.373149, -78.329374}}) ^ isIntersection(candidate, {{43.373149, -78.329374}, {43.37551, -78.145195}}) ^ isIntersection(candidate, {{43.37551, -78.145195}, {43.3653102556776, -77.9955897949384}}) ^ isIntersection(candidate, {{33.888289, -78.018689}, {33.912178, -78.136952}}) ^ isIntersection(candidate, {{33.912178, -78.136952}, {33.912364, -78.276147}}) ^ isIntersection(candidate, {{33.912364, -78.276147}, {33.901945999999995, -78.38396399999999}}) ^ isIntersection(candidate, {{33.901945999999995, -78.38396399999999}, {33.851112, -78.54108699999999}}) ^ isIntersection(candidate, {{33.851112, -78.54108699999999}, {33.817586999999996, -78.67226}}) ^ isIntersection(candidate, {{33.817586999999996, -78.67226}, {33.768511, -78.77273699999999}}) ^ isIntersection(candidate, {{33.768511, -78.77273699999999}, {33.705653999999996, -78.862931}}) ^ isIntersection(candidate, {{33.705653999999996, -78.862931}, {33.639826, -78.938076}}) ^ isIntersection(candidate, {{33.639826, -78.938076}, {33.572663999999996, -78.9951309899024}}) ^ isIntersection(candidate, {{33.572663999999996, -78.9951309899024}, {33.533364999999996, -79.028516}}) ^ isIntersection(candidate, {{33.533364999999996, -79.028516}, {33.483669, -79.084588}}) ^ isIntersection(candidate, {{33.483669, -79.084588}, {33.403867, -79.135441}}) ^ isIntersection(candidate, {{33.403867, -79.135441}, {33.327245999999995, -79.16233199999999}}) ^ isIntersection(candidate, {{33.327245999999995, -79.16233199999999}, {33.237955, -79.18056299999999}}) ^ isIntersection(candidate, {{33.237955, -79.18056299999999}, {33.206576999999996, -79.172394}}) ^ isIntersection(candidate, {{33.206576999999996, -79.172394}, {33.155569, -79.215453}}) ^ isIntersection(candidate, {{33.155569, -79.215453}, {33.1200562677204, -79.2744945846428}}) ^ isIntersection(candidate, {{33.1200562677204, -79.2744945846428}, {33.109773, -79.291591}}) ^ isIntersection(candidate, {{33.109773, -79.291591}, {33.089985999999996, -79.329909}});
                        }
                    }
                } else {
                    if (candidate.longitude < -76.47705078125) {
                        if (candidate.longitude < -76.993408203125) {
                            return isIntersection(candidate, {{43.37551, -78.145195}, {43.3653102556776, -77.9955897949384}}) ^ isIntersection(candidate, {{43.3653102556776, -77.9955897949384}, {43.365258999999995, -77.994838}}) ^ isIntersection(candidate, {{43.365258999999995, -77.994838}, {43.34356, -77.81653299999999}}) ^ isIntersection(candidate, {{43.34356, -77.81653299999999}, {43.3432076368983, -77.80826340960719}}) ^ isIntersection(candidate, {{43.3432076368983, -77.80826340960719}, {43.341161, -77.76023099999999}}) ^ isIntersection(candidate, {{43.341161, -77.76023099999999}, {43.282998, -77.660359}}) ^ isIntersection(candidate, {{43.282998, -77.660359}, {43.235763, -77.551022}}) ^ isIntersection(candidate, {{43.235763, -77.551022}, {43.250363, -77.50092}}) ^ isIntersection(candidate, {{43.250363, -77.50092}, {43.274033763487, -77.37605199595339}}) ^ isIntersection(candidate, {{43.274033763487, -77.37605199595339}, {43.280660999999995, -77.341092}}) ^ isIntersection(candidate, {{43.280660999999995, -77.341092}, {43.277363, -77.26417699999999}}) ^ isIntersection(candidate, {{43.277363, -77.26417699999999}, {43.285635, -77.13042899999999}}) ^ isIntersection(candidate, {{43.285635, -77.13042899999999}, {43.271456, -76.999691}}) ^ isIntersection(candidate, {{43.271456, -76.999691}, {43.270692, -76.952174}}) ^ isIntersection(candidate, {{38.347327, -76.975492}, {38.421952, -77.001638}}) ^ isIntersection(candidate, {{38.421952, -77.001638}, {38.445572, -77.01637099999999}}) ^ isIntersection(candidate, {{38.445572, -77.01637099999999}, {38.42471, -77.07548899999999}}) ^ isIntersection(candidate, {{38.42471, -77.07548899999999}, {38.410646, -77.123325}}) ^ isIntersection(candidate, {{38.410646, -77.123325}, {38.380662, -77.21118799999999}}) ^ isIntersection(candidate, {{38.380662, -77.21118799999999}, {38.435821, -77.259962}}) ^ isIntersection(candidate, {{38.435821, -77.259962}, {38.538340999999996, -77.246584}}) ^ isIntersection(candidate, {{38.538340999999996, -77.246584}, {38.600699, -77.183767}}) ^ isIntersection(candidate, {{38.600699, -77.183767}, {38.614363999999995, -77.12908399999999}}) ^ isIntersection(candidate, {{38.614363999999995, -77.12908399999999}, {38.635017, -77.1302}}) ^ isIntersection(candidate, {{38.635017, -77.1302}, {38.635178274900895, -77.22414585530149}}) ^ isIntersection(candidate, {{38.635178274900895, -77.22414585530149}, {38.635217, -77.246704}}) ^ isIntersection(candidate, {{38.635217, -77.246704}, {38.562125, -77.29527399999999}}) ^ isIntersection(candidate, {{38.562125, -77.29527399999999}, {38.548376738510896, -77.29923201266611}}) ^ isIntersection(candidate, {{38.548376738510896, -77.29923201266611}, {38.50192780058409, -77.31260428411929}}) ^ isIntersection(candidate, {{38.50192780058409, -77.31260428411929}, {38.467130999999995, -77.322622}}) ^ isIntersection(candidate, {{38.467130999999995, -77.322622}, {38.383576, -77.31728799999999}}) ^ isIntersection(candidate, {{38.383576, -77.31728799999999}, {38.3516368165143, -77.28434649979219}}) ^ isIntersection(candidate, {{38.3516368165143, -77.28434649979219}, {38.333165, -77.265295}}) ^ isIntersection(candidate, {{38.333165, -77.265295}, {38.345994, -77.16269199999999}}) ^ isIntersection(candidate, {{38.345994, -77.16269199999999}, {38.352801, -77.093713}}) ^ isIntersection(candidate, {{38.352801, -77.093713}, {38.360144999999996, -77.048137}}) ^ isIntersection(candidate, {{38.360144999999996, -77.048137}, {38.329273, -77.02094699999999}}) ^ isIntersection(candidate, {{38.329273, -77.02094699999999}, {38.302685, -77.026304}}) ^ isIntersection(candidate, {{38.302685, -77.026304}, {38.2791478339799, -76.9967912592049}}) ^ isIntersection(candidate, {{38.2791478339799, -76.9967912592049}, {38.273935, -76.99025499999999}}) ^ isIntersection(candidate, {{34.68282, -76.906257}, {34.6380928323915, -77.1129643930768}}) ^ isIntersection(candidate, {{34.6380928323915, -77.1129643930768}, {34.632926, -77.136843}}) ^ isIntersection(candidate, {{34.632926, -77.136843}, {34.587506999999995, -77.240991}}) ^ isIntersection(candidate, {{34.587506999999995, -77.240991}, {34.535574, -77.322524}}) ^ isIntersection(candidate, {{34.535574, -77.322524}, {34.471354, -77.46292199999999}}) ^ isIntersection(candidate, {{34.471354, -77.46292199999999}, {34.4373849694266, -77.51521654458479}}) ^ isIntersection(candidate, {{34.4373849694266, -77.51521654458479}, {34.359555, -77.63503399999999}}) ^ isIntersection(candidate, {{34.359555, -77.63503399999999}, {34.2902471866868, -77.7135131704588}}) ^ isIntersection(candidate, {{34.2902471866868, -77.7135131704588}, {34.245641, -77.764022}}) ^ isIntersection(candidate, {{34.245641, -77.764022}, {34.162618, -77.82920899999999}}) ^ isIntersection(candidate, {{34.162618, -77.82920899999999}, {34.038240984853005, -77.8854550755211}}) ^ isIntersection(candidate, {{34.038240984853005, -77.8854550755211}, {33.971723, -77.915536}}) ^ isIntersection(candidate, {{33.971723, -77.915536}, {33.9205485057973, -77.9348271350857}}) ^ isIntersection(candidate, {{33.9205485057973, -77.9348271350857}, {33.853314999999995, -77.960172}}) ^ isIntersection(candidate, {{33.853314999999995, -77.960172}, {33.858703999999996, -78.006765}}) ^ isIntersection(candidate, {{33.858703999999996, -78.006765}, {33.888289, -78.018689}}) ^ isIntersection(candidate, {{33.888289, -78.018689}, {33.912178, -78.136952}});
                        } else {
                            return isIntersection(candidate, {{43.271456, -76.999691}, {43.270692, -76.952174}}) ^ isIntersection(candidate, {{43.270692, -76.952174}, {43.305399, -76.841675}}) ^ isIntersection(candidate, {{43.305399, -76.841675}, {43.318452, -76.769025}}) ^ isIntersection(candidate, {{43.318452, -76.769025}, {43.337580195981396, -76.7220025657128}}) ^ isIntersection(candidate, {{43.337580195981396, -76.7220025657128}, {43.352691, -76.684856}}) ^ isIntersection(candidate, {{43.352691, -76.684856}, {43.413356, -76.630774}}) ^ isIntersection(candidate, {{43.413356, -76.630774}, {43.4201755544656, -76.6172137325776}}) ^ isIntersection(candidate, {{43.4201755544656, -76.6172137325776}, {43.471136, -76.51588199999999}}) ^ isIntersection(candidate, {{43.471136, -76.51588199999999}, {43.521285, -76.417581}}) ^ isIntersection(candidate, {{39.205908, -76.463483}, {39.204808, -76.498384}}) ^ isIntersection(candidate, {{39.204808, -76.498384}, {39.199286249126004, -76.5040085909181}}) ^ isIntersection(candidate, {{39.199286249126004, -76.5040085909181}, {39.177907999999995, -76.525785}}) ^ isIntersection(candidate, {{39.177907999999995, -76.525785}, {39.131709, -76.428681}}) ^ isIntersection(candidate, {{38.9026933786299, -76.4739761636555}, {38.884814, -76.49068}}) ^ isIntersection(candidate, {{38.884814, -76.49068}, {38.851157, -76.516944}}) ^ isIntersection(candidate, {{38.851157, -76.516944}, {38.838715, -76.48987799999999}}) ^ isIntersection(candidate, {{38.838715, -76.48987799999999}, {38.787016, -76.526979}}) ^ isIntersection(candidate, {{38.787016, -76.526979}, {38.756352, -76.55874299999999}}) ^ isIntersection(candidate, {{38.756352, -76.55874299999999}, {38.72443, -76.52665499999999}}) ^ isIntersection(candidate, {{38.72443, -76.52665499999999}, {38.7127503012383, -76.52709254739419}}) ^ isIntersection(candidate, {{38.7127503012383, -76.52709254739419}, {38.663889, -76.52892299999999}}) ^ isIntersection(candidate, {{38.663889, -76.52892299999999}, {38.615745, -76.51127799999999}}) ^ isIntersection(candidate, {{38.615745, -76.51127799999999}, {38.539148999999995, -76.517506}}) ^ isIntersection(candidate, {{38.539148999999995, -76.517506}, {38.482849, -76.492699}}) ^ isIntersection(candidate, {{38.482849, -76.492699}, {38.442422, -76.450937}}) ^ isIntersection(candidate, {{38.119383, -76.430425}, {38.115873, -76.481036}}) ^ isIntersection(candidate, {{38.115873, -76.481036}, {38.152991, -76.54038}}) ^ isIntersection(candidate, {{38.152991, -76.54038}, {38.214211999999996, -76.590637}}) ^ isIntersection(candidate, {{38.214211999999996, -76.590637}, {38.234401, -76.673462}}) ^ isIntersection(candidate, {{38.234401, -76.673462}, {38.235226999999995, -76.740055}}) ^ isIntersection(candidate, {{38.235226999999995, -76.740055}, {38.252275, -76.805949}}) ^ isIntersection(candidate, {{38.252275, -76.805949}, {38.2583001006141, -76.8270361292819}}) ^ isIntersection(candidate, {{38.2583001006141, -76.8270361292819}, {38.268944999999995, -76.86429199999999}}) ^ isIntersection(candidate, {{38.268944999999995, -76.86429199999999}, {38.311339, -76.92217699999999}}) ^ isIntersection(candidate, {{38.311339, -76.92217699999999}, {38.347327, -76.975492}}) ^ isIntersection(candidate, {{38.347327, -76.975492}, {38.421952, -77.001638}}) ^ isIntersection(candidate, {{38.2791478339799, -76.9967912592049}, {38.273935, -76.99025499999999}}) ^ isIntersection(candidate, {{38.273935, -76.99025499999999}, {38.243182999999995, -76.957796}}) ^ isIntersection(candidate, {{38.243182999999995, -76.957796}, {38.214075, -76.962311}}) ^ isIntersection(candidate, {{38.214075, -76.962311}, {38.197072999999996, -76.910832}}) ^ isIntersection(candidate, {{38.197072999999996, -76.910832}, {38.163475999999996, -76.83879499999999}}) ^ isIntersection(candidate, {{38.163475999999996, -76.83879499999999}, {38.162113999999995, -76.749685}}) ^ isIntersection(candidate, {{38.162113999999995, -76.749685}, {38.156497, -76.68489199999999}}) ^ isIntersection(candidate, {{38.156497, -76.68489199999999}, {38.148587, -76.613939}}) ^ isIntersection(candidate, {{38.148587, -76.613939}, {38.110084, -76.600937}}) ^ isIntersection(candidate, {{38.110084, -76.600937}, {38.069531999999995, -76.53591899999999}}) ^ isIntersection(candidate, {{38.069531999999995, -76.53591899999999}, {38.0394889278142, -76.5106939613177}}) ^ isIntersection(candidate, {{38.0394889278142, -76.5106939613177}, {38.017222, -76.491998}}) ^ isIntersection(candidate, {{38.017222, -76.491998}, {37.977038, -76.427487}}) ^ isIntersection(candidate, {{34.71445, -76.450454}, {34.588577, -76.535946}}) ^ isIntersection(candidate, {{34.588577, -76.535946}, {34.628251999999996, -76.553806}}) ^ isIntersection(candidate, {{34.628251999999996, -76.553806}, {34.67255, -76.618719}}) ^ isIntersection(candidate, {{34.67255, -76.618719}, {34.69669, -76.726969}}) ^ isIntersection(candidate, {{34.69669, -76.726969}, {34.68282, -76.906257}}) ^ isIntersection(candidate, {{34.68282, -76.906257}, {34.6380928323915, -77.1129643930768}});
                        }
                    } else {
                        if (candidate.longitude < -76.3507080078125) {
                            return isIntersection(candidate, {{43.471136, -76.51588199999999}, {43.521285, -76.417581}}) ^ isIntersection(candidate, {{43.521285, -76.417581}, {43.5256270615303, -76.370942837669}}) ^ isIntersection(candidate, {{43.5256270615303, -76.370942837669}, {43.525822, -76.368849}}) ^ isIntersection(candidate, {{43.525822, -76.368849}, {43.512274999999995, -76.319701}}) ^ isIntersection(candidate, {{43.857079, -76.296758}, {43.872585, -76.361037}}) ^ isIntersection(candidate, {{43.872585, -76.361037}, {43.882864, -76.441848}}) ^ isIntersection(candidate, {{43.882864, -76.441848}, {43.925675999999996, -76.412138}}) ^ isIntersection(candidate, {{43.925675999999996, -76.412138}, {43.972462, -76.279314}}) ^ isIntersection(candidate, {{44.025276999999996, -76.30767399999999}, {44.031535999999996, -76.37556}}) ^ isIntersection(candidate, {{44.031535999999996, -76.37556}, {44.072721, -76.361836}}) ^ isIntersection(candidate, {{44.072721, -76.361836}, {44.100499, -76.370706}}) ^ isIntersection(candidate, {{44.100499, -76.370706}, {44.133258, -76.355679}}) ^ isIntersection(candidate, {{44.133258, -76.355679}, {44.164944999999996, -76.33458399999999}}) ^ isIntersection(candidate, {{38.730337999999996, -76.340543}, {38.757003999999995, -76.39035}}) ^ isIntersection(candidate, {{38.757003999999995, -76.39035}, {38.788314, -76.379739}}) ^ isIntersection(candidate, {{38.788314, -76.379739}, {38.796845999999995, -76.310081}}) ^ isIntersection(candidate, {{38.860237999999995, -76.334019}, {38.850460999999996, -76.37620199999999}}) ^ isIntersection(candidate, {{38.850460999999996, -76.37620199999999}, {38.939175, -76.361727}}) ^ isIntersection(candidate, {{38.939175, -76.361727}, {39.006375, -76.322296}}) ^ isIntersection(candidate, {{39.248822, -76.349994}, {39.231702, -76.39550899999999}}) ^ isIntersection(candidate, {{39.231702, -76.39550899999999}, {39.205708, -76.425281}}) ^ isIntersection(candidate, {{39.205708, -76.425281}, {39.205908, -76.463483}}) ^ isIntersection(candidate, {{39.205908, -76.463483}, {39.204808, -76.498384}}) ^ isIntersection(candidate, {{39.177907999999995, -76.525785}, {39.131709, -76.428681}}) ^ isIntersection(candidate, {{39.131709, -76.428681}, {39.081441999999996, -76.42186}}) ^ isIntersection(candidate, {{39.081441999999996, -76.42186}, {39.042069999999995, -76.420394}}) ^ isIntersection(candidate, {{39.042069999999995, -76.420394}, {39.011311, -76.39408}}) ^ isIntersection(candidate, {{39.011311, -76.39408}, {38.982811, -76.448981}}) ^ isIntersection(candidate, {{38.982811, -76.448981}, {38.956512, -76.47128099999999}}) ^ isIntersection(candidate, {{38.956512, -76.47128099999999}, {38.941113, -76.45027999999999}}) ^ isIntersection(candidate, {{38.941113, -76.45027999999999}, {38.907613, -76.46938}}) ^ isIntersection(candidate, {{38.907613, -76.46938}, {38.9026933786299, -76.4739761636555}}) ^ isIntersection(candidate, {{38.9026933786299, -76.4739761636555}, {38.884814, -76.49068}}) ^ isIntersection(candidate, {{38.482849, -76.492699}, {38.442422, -76.450937}}) ^ isIntersection(candidate, {{38.442422, -76.450937}, {38.389477, -76.393378}}) ^ isIntersection(candidate, {{38.389477, -76.393378}, {38.361267, -76.387002}}) ^ isIntersection(candidate, {{38.361267, -76.387002}, {38.3198719439614, -76.400194624698}}) ^ isIntersection(candidate, {{38.3198719439614, -76.400194624698}, {38.311402, -76.402894}}) ^ isIntersection(candidate, {{38.311402, -76.402894}, {38.296347999999995, -76.374481}}) ^ isIntersection(candidate, {{38.296347999999995, -76.374481}, {38.239663, -76.392668}}) ^ isIntersection(candidate, {{38.239663, -76.392668}, {38.178135, -76.353516}}) ^ isIntersection(candidate, {{38.178135, -76.353516}, {38.138338999999995, -76.32013599999999}}) ^ isIntersection(candidate, {{38.036502999999996, -76.322093}, {38.079564999999995, -76.37178999999999}}) ^ isIntersection(candidate, {{38.079564999999995, -76.37178999999999}, {38.119383, -76.430425}}) ^ isIntersection(candidate, {{38.119383, -76.430425}, {38.115873, -76.481036}}) ^ isIntersection(candidate, {{38.017222, -76.491998}, {37.977038, -76.427487}}) ^ isIntersection(candidate, {{37.977038, -76.427487}, {37.934929, -76.316952}}) ^ isIntersection(candidate, {{37.309964, -76.27555199999999}, {37.374494999999996, -76.366751}}) ^ isIntersection(candidate, {{37.374494999999996, -76.366751}, {37.395939999999996, -76.393958}}) ^ isIntersection(candidate, {{37.395939999999996, -76.393958}, {37.3926000017912, -76.4029458753529}}) ^ isIntersection(candidate, {{37.3926000017912, -76.4029458753529}, {37.37975, -76.437525}}) ^ isIntersection(candidate, {{37.37975, -76.437525}, {37.30767, -76.38777}}) ^ isIntersection(candidate, {{37.30767, -76.38777}, {37.270226, -76.36229}}) ^ isIntersection(candidate, {{37.270226, -76.36229}, {37.2494917623633, -76.3769368097175}}) ^ isIntersection(candidate, {{37.2494917623633, -76.3769368097175}, {37.22515, -76.394132}}) ^ isIntersection(candidate, {{37.22515, -76.394132}, {37.1896444936553, -76.3471899289676}}) ^ isIntersection(candidate, {{34.852309, -76.31021}, {34.784579, -76.386804}}) ^ isIntersection(candidate, {{34.784579, -76.386804}, {34.71445, -76.450454}}) ^ isIntersection(candidate, {{34.71445, -76.450454}, {34.588577, -76.535946}});
                        } else {
                            return isIntersection(candidate, {{43.525822, -76.368849}, {43.512274999999995, -76.319701}}) ^ isIntersection(candidate, {{43.512274999999995, -76.319701}, {43.529256, -76.235834}}) ^ isIntersection(candidate, {{43.804134999999995, -76.22926799999999}, {43.857079, -76.296758}}) ^ isIntersection(candidate, {{43.857079, -76.296758}, {43.872585, -76.361037}}) ^ isIntersection(candidate, {{43.925675999999996, -76.412138}, {43.972462, -76.279314}}) ^ isIntersection(candidate, {{43.972462, -76.279314}, {44.025276999999996, -76.30767399999999}}) ^ isIntersection(candidate, {{44.025276999999996, -76.30767399999999}, {44.031535999999996, -76.37556}}) ^ isIntersection(candidate, {{44.133258, -76.355679}, {44.164944999999996, -76.33458399999999}}) ^ isIntersection(candidate, {{44.164944999999996, -76.33458399999999}, {44.203773, -76.286547}}) ^ isIntersection(candidate, {{44.203773, -76.286547}, {44.214543, -76.206777}}) ^ isIntersection(candidate, {{38.362304, -76.25}, {38.403143, -76.280551}}) ^ isIntersection(candidate, {{38.403143, -76.280551}, {38.492235, -76.33636}}) ^ isIntersection(candidate, {{38.492235, -76.33636}, {38.541851, -76.277461}}) ^ isIntersection(candidate, {{38.541851, -76.277461}, {38.569158, -76.290043}}) ^ isIntersection(candidate, {{38.569158, -76.290043}, {38.609519999999996, -76.279589}}) ^ isIntersection(candidate, {{38.609519999999996, -76.279589}, {38.61401, -76.23118699999999}}) ^ isIntersection(candidate, {{38.712714, -76.275015}, {38.679303999999995, -76.322418}}) ^ isIntersection(candidate, {{38.679303999999995, -76.322418}, {38.686234, -76.34799799999999}}) ^ isIntersection(candidate, {{38.686234, -76.34799799999999}, {38.730337999999996, -76.340543}}) ^ isIntersection(candidate, {{38.730337999999996, -76.340543}, {38.757003999999995, -76.39035}}) ^ isIntersection(candidate, {{38.788314, -76.379739}, {38.796845999999995, -76.310081}}) ^ isIntersection(candidate, {{38.796845999999995, -76.310081}, {38.851771, -76.271575}}) ^ isIntersection(candidate, {{38.92825, -76.250868}, {38.911311999999995, -76.31794699999999}}) ^ isIntersection(candidate, {{38.911311999999995, -76.31794699999999}, {38.860237999999995, -76.334019}}) ^ isIntersection(candidate, {{38.860237999999995, -76.334019}, {38.850460999999996, -76.37620199999999}}) ^ isIntersection(candidate, {{38.939175, -76.361727}, {39.006375, -76.322296}}) ^ isIntersection(candidate, {{39.006375, -76.322296}, {39.039651, -76.301847}}) ^ isIntersection(candidate, {{39.039651, -76.301847}, {39.0285509553488, -76.2650366404087}}) ^ isIntersection(candidate, {{39.352779999999996, -76.224161}, {39.301137, -76.29660899999999}}) ^ isIntersection(candidate, {{39.301137, -76.29660899999999}, {39.2729050860827, -76.3254183419569}}) ^ isIntersection(candidate, {{39.2729050860827, -76.3254183419569}, {39.248822, -76.349994}}) ^ isIntersection(candidate, {{39.248822, -76.349994}, {39.231702, -76.39550899999999}}) ^ isIntersection(candidate, {{38.178135, -76.353516}, {38.138338999999995, -76.32013599999999}}) ^ isIntersection(candidate, {{38.138338999999995, -76.32013599999999}, {38.099331, -76.330794}}) ^ isIntersection(candidate, {{38.099331, -76.330794}, {38.036502999999996, -76.322093}}) ^ isIntersection(candidate, {{38.036502999999996, -76.322093}, {38.079564999999995, -76.37178999999999}}) ^ isIntersection(candidate, {{37.977038, -76.427487}, {37.934929, -76.316952}}) ^ isIntersection(candidate, {{37.934929, -76.316952}, {37.889174, -76.23672499999999}}) ^ isIntersection(candidate, {{37.833072, -76.251358}, {37.794849, -76.310307}}) ^ isIntersection(candidate, {{37.794849, -76.310307}, {37.720338, -76.31285799999999}}) ^ isIntersection(candidate, {{37.720338, -76.31285799999999}, {37.682573885436696, -76.32529914969061}}) ^ isIntersection(candidate, {{37.682573885436696, -76.32529914969061}, {37.670975999999996, -76.32912}}) ^ isIntersection(candidate, {{37.670975999999996, -76.32912}, {37.618224999999995, -76.27944699999999}}) ^ isIntersection(candidate, {{37.618224999999995, -76.27944699999999}, {37.587359934104, -76.2888778367019}}) ^ isIntersection(candidate, {{37.587359934104, -76.2888778367019}, {37.557635999999995, -76.29796}}) ^ isIntersection(candidate, {{37.557635999999995, -76.29796}, {37.536075288008796, -76.2894927971781}}) ^ isIntersection(candidate, {{37.536075288008796, -76.2894927971781}, {37.495321, -76.273488}}) ^ isIntersection(candidate, {{37.309964, -76.27555199999999}, {37.374494999999996, -76.366751}}) ^ isIntersection(candidate, {{37.22515, -76.394132}, {37.1896444936553, -76.3471899289676}}) ^ isIntersection(candidate, {{37.1896444936553, -76.3471899289676}, {37.186551, -76.3431}}) ^ isIntersection(candidate, {{37.186551, -76.3431}, {37.138495, -76.311088}}) ^ isIntersection(candidate, {{37.138495, -76.311088}, {37.1141637008803, -76.29312691830101}}) ^ isIntersection(candidate, {{37.1141637008803, -76.29312691830101}, {37.084544, -76.271262}}) ^ isIntersection(candidate, {{37.084544, -76.271262}, {37.0528851070211, -76.2838279531207}}) ^ isIntersection(candidate, {{37.0528851070211, -76.2838279531207}, {37.001377999999995, -76.304272}}) ^ isIntersection(candidate, {{37.001377999999995, -76.304272}, {36.9937909664517, -76.2967922902952}}) ^ isIntersection(candidate, {{36.9937909664517, -76.2967922902952}, {36.977743727668, -76.28097205081659}}) ^ isIntersection(candidate, {{36.977743727668, -76.28097205081659}, {36.964546999999996, -76.267962}}) ^ isIntersection(candidate, {{34.905477, -76.233088}, {34.852309, -76.31021}}) ^ isIntersection(candidate, {{34.852309, -76.31021}, {34.784579, -76.386804}});
                        }
                    }
                }
            }
        } else {
            if (candidate.longitude < -71.796875) {
                if (candidate.longitude < -75.13671875) {
                    if (candidate.longitude < -75.927734375) {
                        if (candidate.longitude < -76.180419921875) {
                            return isIntersection(candidate, {{43.512274999999995, -76.319701}, {43.529256, -76.235834}}) ^ isIntersection(candidate, {{43.529256, -76.235834}, {43.574978, -76.203473}}) ^ isIntersection(candidate, {{43.574978, -76.203473}, {43.649761, -76.196596}}) ^ isIntersection(candidate, {{43.649761, -76.196596}, {43.6802859602237, -76.2014825473857}}) ^ isIntersection(candidate, {{43.6802859602237, -76.2014825473857}, {43.753513, -76.213205}}) ^ isIntersection(candidate, {{43.753513, -76.213205}, {43.804134999999995, -76.22926799999999}}) ^ isIntersection(candidate, {{43.804134999999995, -76.22926799999999}, {43.857079, -76.296758}}) ^ isIntersection(candidate, {{44.203773, -76.286547}, {44.214543, -76.206777}}) ^ isIntersection(candidate, {{44.214543, -76.206777}, {44.239602999999995, -76.164265}}) ^ isIntersection(candidate, {{38.232185, -76.135513}, {38.305682999999995, -76.217613}}) ^ isIntersection(candidate, {{38.305682999999995, -76.217613}, {38.324855, -76.257667}}) ^ isIntersection(candidate, {{38.324855, -76.257667}, {38.362304, -76.25}}) ^ isIntersection(candidate, {{38.362304, -76.25}, {38.403143, -76.280551}}) ^ isIntersection(candidate, {{38.492235, -76.33636}, {38.541851, -76.277461}}) ^ isIntersection(candidate, {{38.541851, -76.277461}, {38.569158, -76.290043}}) ^ isIntersection(candidate, {{38.609519999999996, -76.279589}, {38.61401, -76.23118699999999}}) ^ isIntersection(candidate, {{38.61401, -76.23118699999999}, {38.610741, -76.203065}}) ^ isIntersection(candidate, {{38.610741, -76.203065}, {38.6102, -76.165435}}) ^ isIntersection(candidate, {{38.673235999999996, -76.175159}, {38.670774, -76.200334}}) ^ isIntersection(candidate, {{38.670774, -76.200334}, {38.712845, -76.238725}}) ^ isIntersection(candidate, {{38.712845, -76.238725}, {38.712714, -76.275015}}) ^ isIntersection(candidate, {{38.712714, -76.275015}, {38.679303999999995, -76.322418}}) ^ isIntersection(candidate, {{38.796845999999995, -76.310081}, {38.851771, -76.271575}}) ^ isIntersection(candidate, {{38.851771, -76.271575}, {38.812371, -76.21932799999999}}) ^ isIntersection(candidate, {{38.812371, -76.21932799999999}, {38.82966, -76.19109}}) ^ isIntersection(candidate, {{38.82966, -76.19109}, {38.8557419634207, -76.196868759948}}) ^ isIntersection(candidate, {{38.8557419634207, -76.196868759948}, {38.892725999999996, -76.205063}}) ^ isIntersection(candidate, {{38.892725999999996, -76.205063}, {38.928382, -76.203638}}) ^ isIntersection(candidate, {{38.928382, -76.203638}, {38.92825, -76.250868}}) ^ isIntersection(candidate, {{38.92825, -76.250868}, {38.911311999999995, -76.31794699999999}}) ^ isIntersection(candidate, {{39.039651, -76.301847}, {39.0285509553488, -76.2650366404087}}) ^ isIntersection(candidate, {{39.0285509553488, -76.2650366404087}, {39.018518, -76.231765}}) ^ isIntersection(candidate, {{39.018518, -76.231765}, {39.091384999999995, -76.233457}}) ^ isIntersection(candidate, {{39.091384999999995, -76.233457}, {39.119588, -76.246481}}) ^ isIntersection(candidate, {{39.119588, -76.246481}, {39.145764, -76.278527}}) ^ isIntersection(candidate, {{39.145764, -76.278527}, {39.213362, -76.243166}}) ^ isIntersection(candidate, {{39.213362, -76.243166}, {39.269812, -76.211253}}) ^ isIntersection(candidate, {{39.269812, -76.211253}, {39.298701, -76.17770399999999}}) ^ isIntersection(candidate, {{39.40531, -76.146373}, {39.352779999999996, -76.224161}}) ^ isIntersection(candidate, {{39.352779999999996, -76.224161}, {39.301137, -76.29660899999999}}) ^ isIntersection(candidate, {{37.934929, -76.316952}, {37.889174, -76.23672499999999}}) ^ isIntersection(candidate, {{37.889174, -76.23672499999999}, {37.833072, -76.251358}}) ^ isIntersection(candidate, {{37.833072, -76.251358}, {37.794849, -76.310307}}) ^ isIntersection(candidate, {{37.536075288008796, -76.2894927971781}, {37.495321, -76.273488}}) ^ isIntersection(candidate, {{37.495321, -76.273488}, {37.421886, -76.25045399999999}}) ^ isIntersection(candidate, {{37.421886, -76.25045399999999}, {37.375135, -76.24846}}) ^ isIntersection(candidate, {{37.375135, -76.24846}, {37.309964, -76.27555199999999}}) ^ isIntersection(candidate, {{37.309964, -76.27555199999999}, {37.374494999999996, -76.366751}}) ^ isIntersection(candidate, {{37.1141637008803, -76.29312691830101}, {37.084544, -76.271262}}) ^ isIntersection(candidate, {{37.084544, -76.271262}, {37.0528851070211, -76.2838279531207}}) ^ isIntersection(candidate, {{36.977743727668, -76.28097205081659}, {36.964546999999996, -76.267962}}) ^ isIntersection(candidate, {{36.964546999999996, -76.267962}, {36.931447, -76.189959}}) ^ isIntersection(candidate, {{36.931447, -76.189959}, {36.928538680155, -76.1769475851987}}) ^ isIntersection(candidate, {{34.987857999999996, -76.137269}, {34.905477, -76.233088}}) ^ isIntersection(candidate, {{34.905477, -76.233088}, {34.852309, -76.31021}});
                        } else {
                            return isIntersection(candidate, {{38.025532999999996, -76.046213}, {38.036705999999995, -76.00733699999999}}) ^ isIntersection(candidate, {{38.036705999999995, -76.00733699999999}, {38.004891, -75.98008899999999}}) ^ isIntersection(candidate, {{38.004891, -75.98008899999999}, {37.938120999999995, -75.98464799999999}}) ^ isIntersection(candidate, {{37.938120999999995, -75.98464799999999}, {37.953586, -76.04652999999999}}) ^ isIntersection(candidate, {{37.953586, -76.04652999999999}, {38.025532999999996, -76.046213}}) ^ isIntersection(candidate, {{44.214543, -76.206777}, {44.239602999999995, -76.164265}}) ^ isIntersection(candidate, {{44.239602999999995, -76.164265}, {44.280777, -76.161833}}) ^ isIntersection(candidate, {{44.280777, -76.161833}, {44.299547, -76.097351}}) ^ isIntersection(candidate, {{44.299547, -76.097351}, {44.347533999999996, -76.000998}}) ^ isIntersection(candidate, {{44.347533999999996, -76.000998}, {44.349129, -75.94954}}) ^ isIntersection(candidate, {{44.349129, -75.94954}, {44.4051920135031, -75.8612711928347}}) ^ isIntersection(candidate, {{37.118037, -75.89729799999999}, {37.089607, -75.942399}}) ^ isIntersection(candidate, {{37.089607, -75.942399}, {37.100448, -75.979608}}) ^ isIntersection(candidate, {{37.100448, -75.979608}, {37.188739, -75.99864699999999}}) ^ isIntersection(candidate, {{37.188739, -75.99864699999999}, {37.289066999999996, -76.02347499999999}}) ^ isIntersection(candidate, {{37.289066999999996, -76.02347499999999}, {37.368548, -75.987122}}) ^ isIntersection(candidate, {{37.368548, -75.987122}, {37.444877999999996, -75.976491}}) ^ isIntersection(candidate, {{37.444877999999996, -75.976491}, {37.5490406581517, -75.9455743189307}}) ^ isIntersection(candidate, {{37.5490406581517, -75.9455743189307}, {37.563839, -75.941182}}) ^ isIntersection(candidate, {{37.563839, -75.941182}, {37.635425, -75.898665}}) ^ isIntersection(candidate, {{38.100968, -75.86381}, {38.124209, -75.937089}}) ^ isIntersection(candidate, {{38.124209, -75.937089}, {38.187066, -75.942375}}) ^ isIntersection(candidate, {{38.187066, -75.942375}, {38.200858, -75.864104}}) ^ isIntersection(candidate, {{38.246285277002, -75.9237660824283}, {38.249145, -75.9445}}) ^ isIntersection(candidate, {{38.249145, -75.9445}, {38.254932, -76.038935}}) ^ isIntersection(candidate, {{38.254932, -76.038935}, {38.187419999999996, -76.031988}}) ^ isIntersection(candidate, {{38.187419999999996, -76.031988}, {38.122214, -76.011916}}) ^ isIntersection(candidate, {{38.122214, -76.011916}, {38.077169999999995, -76.005904}}) ^ isIntersection(candidate, {{38.077169999999995, -76.005904}, {38.086728, -76.048692}}) ^ isIntersection(candidate, {{38.086728, -76.048692}, {38.125122999999995, -76.095548}}) ^ isIntersection(candidate, {{38.125122999999995, -76.095548}, {38.192648999999996, -76.088639}}) ^ isIntersection(candidate, {{38.192648999999996, -76.088639}, {38.232185, -76.135513}}) ^ isIntersection(candidate, {{38.232185, -76.135513}, {38.305682999999995, -76.217613}}) ^ isIntersection(candidate, {{38.610741, -76.203065}, {38.6102, -76.165435}}) ^ isIntersection(candidate, {{38.6102, -76.165435}, {38.6408420471501, -76.1701618745873}}) ^ isIntersection(candidate, {{38.6408420471501, -76.1701618745873}, {38.673235999999996, -76.175159}}) ^ isIntersection(candidate, {{38.673235999999996, -76.175159}, {38.670774, -76.200334}}) ^ isIntersection(candidate, {{39.269812, -76.211253}, {39.298701, -76.17770399999999}}) ^ isIntersection(candidate, {{39.298701, -76.17770399999999}, {39.335909, -76.159673}}) ^ isIntersection(candidate, {{39.335909, -76.159673}, {39.372257, -76.11052699999999}}) ^ isIntersection(candidate, {{39.372257, -76.11052699999999}, {39.3877481141151, -76.0614988219557}}) ^ isIntersection(candidate, {{39.3877481141151, -76.0614988219557}, {39.394237, -76.040962}}) ^ isIntersection(candidate, {{39.394237, -76.040962}, {39.414527, -76.00688}}) ^ isIntersection(candidate, {{39.414527, -76.00688}, {39.453115, -76.012312}}) ^ isIntersection(candidate, {{39.453115, -76.012312}, {39.4526423823093, -76.0376462883158}}) ^ isIntersection(candidate, {{39.4526423823093, -76.0376462883158}, {39.452208, -76.060931}}) ^ isIntersection(candidate, {{39.452208, -76.060931}, {39.40531, -76.146373}}) ^ isIntersection(candidate, {{39.40531, -76.146373}, {39.352779999999996, -76.224161}}) ^ isIntersection(candidate, {{36.931447, -76.189959}, {36.928538680155, -76.1769475851987}}) ^ isIntersection(candidate, {{36.928538680155, -76.1769475851987}, {36.908646999999995, -76.087955}}) ^ isIntersection(candidate, {{36.908646999999995, -76.087955}, {36.927547, -76.043054}}) ^ isIntersection(candidate, {{36.927547, -76.043054}, {36.922047, -75.996252}}) ^ isIntersection(candidate, {{36.922047, -75.996252}, {36.799994999999996, -75.961589}}) ^ isIntersection(candidate, {{36.799994999999996, -75.961589}, {36.692051, -75.921748}}) ^ isIntersection(candidate, {{35.1196, -75.91298499999999}, {35.061855, -76.013145}}) ^ isIntersection(candidate, {{35.061855, -76.013145}, {34.987857999999996, -76.137269}}) ^ isIntersection(candidate, {{34.987857999999996, -76.137269}, {34.905477, -76.233088}});
                        }
                    } else {
                        if (candidate.longitude < -75.59814453125) {
                            return isIntersection(candidate, {{44.349129, -75.94954}, {44.4051920135031, -75.8612711928347}}) ^ isIntersection(candidate, {{44.4051920135031, -75.8612711928347}, {44.422433, -75.834126}}) ^ isIntersection(candidate, {{44.422433, -75.834126}, {44.471644, -75.807778}}) ^ isIntersection(candidate, {{44.471644, -75.807778}, {44.515851, -75.76623}}) ^ isIntersection(candidate, {{44.515851, -75.76623}, {44.658708999999995, -75.567413}}) ^ isIntersection(candidate, {{37.663177999999995, -75.59195299999999}, {37.609296, -75.614527}}) ^ isIntersection(candidate, {{37.609296, -75.614527}, {37.560705999999996, -75.607824}}) ^ isIntersection(candidate, {{37.560705999999996, -75.607824}, {37.483695999999995, -75.672877}}) ^ isIntersection(candidate, {{37.483695999999995, -75.672877}, {37.4672935154925, -75.66541791087509}}) ^ isIntersection(candidate, {{37.4672935154925, -75.66541791087509}, {37.451814999999996, -75.658379}}) ^ isIntersection(candidate, {{37.451814999999996, -75.658379}, {37.373129, -75.720739}}) ^ isIntersection(candidate, {{37.373129, -75.720739}, {37.335426, -75.735829}}) ^ isIntersection(candidate, {{37.335426, -75.735829}, {37.297176, -75.778817}}) ^ isIntersection(candidate, {{37.297176, -75.778817}, {37.247095, -75.795164}}) ^ isIntersection(candidate, {{37.247095, -75.795164}, {37.193436999999996, -75.817387}}) ^ isIntersection(candidate, {{37.193436999999996, -75.817387}, {37.118037, -75.89729799999999}}) ^ isIntersection(candidate, {{37.118037, -75.89729799999999}, {37.089607, -75.942399}}) ^ isIntersection(candidate, {{37.563839, -75.941182}, {37.635425, -75.898665}}) ^ isIntersection(candidate, {{37.635425, -75.898665}, {37.703111, -75.859262}}) ^ isIntersection(candidate, {{37.703111, -75.859262}, {37.749502, -75.81215499999999}}) ^ isIntersection(candidate, {{37.749502, -75.81215499999999}, {37.791698, -75.818125}}) ^ isIntersection(candidate, {{37.791698, -75.818125}, {37.816561, -75.73588}}) ^ isIntersection(candidate, {{37.816561, -75.73588}, {37.849658999999996, -75.70291399999999}}) ^ isIntersection(candidate, {{37.849658999999996, -75.70291399999999}, {37.903912, -75.757694}}) ^ isIntersection(candidate, {{37.903912, -75.757694}, {37.950796, -75.66971099999999}}) ^ isIntersection(candidate, {{37.950796, -75.66971099999999}, {37.971309999999995, -75.722662}}) ^ isIntersection(candidate, {{37.971309999999995, -75.722662}, {37.972594, -75.78381499999999}}) ^ isIntersection(candidate, {{37.972594, -75.78381499999999}, {37.91831, -75.860727}}) ^ isIntersection(candidate, {{37.91831, -75.860727}, {37.916848, -75.892686}}) ^ isIntersection(candidate, {{37.916848, -75.892686}, {37.974514, -75.898956}}) ^ isIntersection(candidate, {{37.974514, -75.898956}, {38.038778, -75.857507}}) ^ isIntersection(candidate, {{38.038778, -75.857507}, {38.060134999999995, -75.858881}}) ^ isIntersection(candidate, {{38.060134999999995, -75.858881}, {38.100968, -75.86381}}) ^ isIntersection(candidate, {{38.100968, -75.86381}, {38.124209, -75.937089}}) ^ isIntersection(candidate, {{38.187066, -75.942375}, {38.200858, -75.864104}}) ^ isIntersection(candidate, {{38.200858, -75.864104}, {38.219709301961004, -75.8754473114647}}) ^ isIntersection(candidate, {{38.219709301961004, -75.8754473114647}, {38.241423, -75.888513}}) ^ isIntersection(candidate, {{38.241423, -75.888513}, {38.246285277002, -75.9237660824283}}) ^ isIntersection(candidate, {{38.246285277002, -75.9237660824283}, {38.249145, -75.9445}}) ^ isIntersection(candidate, {{36.799994999999996, -75.961589}, {36.692051, -75.921748}}) ^ isIntersection(candidate, {{36.692051, -75.921748}, {36.630753, -75.890946}}) ^ isIntersection(candidate, {{36.630753, -75.890946}, {36.550754, -75.86704399999999}}) ^ isIntersection(candidate, {{36.550754, -75.86704399999999}, {36.434897, -75.838437}}) ^ isIntersection(candidate, {{36.434897, -75.838437}, {36.290351, -75.79641}}) ^ isIntersection(candidate, {{36.290351, -75.79641}, {36.23208030705079, -75.7706514625597}}) ^ isIntersection(candidate, {{36.23208030705079, -75.7706514625597}, {36.113673999999996, -75.71831}}) ^ isIntersection(candidate, {{36.113673999999996, -75.71831}, {36.02043, -75.658537}}) ^ isIntersection(candidate, {{36.02043, -75.658537}, {35.863301, -75.569794}}) ^ isIntersection(candidate, {{35.225825, -75.533627}, {35.220259999999996, -75.635493}}) ^ isIntersection(candidate, {{35.220259999999996, -75.635493}, {35.1856163621922, -75.7495614239622}}) ^ isIntersection(candidate, {{35.1856163621922, -75.7495614239622}, {35.183079, -75.757916}}) ^ isIntersection(candidate, {{35.183079, -75.757916}, {35.1196, -75.91298499999999}}) ^ isIntersection(candidate, {{35.1196, -75.91298499999999}, {35.061855, -76.013145}});
                        } else {
                            return isIntersection(candidate, {{44.515851, -75.76623}, {44.658708999999995, -75.567413}}) ^ isIntersection(candidate, {{44.658708999999995, -75.567413}, {44.756329, -75.423943}}) ^ isIntersection(candidate, {{44.756329, -75.423943}, {44.806377999999995, -75.333744}}) ^ isIntersection(candidate, {{44.806377999999995, -75.333744}, {44.857651, -75.255517}}) ^ isIntersection(candidate, {{44.857651, -75.255517}, {44.900237, -75.142958}}) ^ isIntersection(candidate, {{44.900237, -75.142958}, {44.930174, -75.066245}}) ^ isIntersection(candidate, {{39.181883, -75.136667}, {39.222577, -75.16666699999999}}) ^ isIntersection(candidate, {{39.222577, -75.16666699999999}, {39.262755, -75.21251}}) ^ isIntersection(candidate, {{39.262755, -75.21251}, {39.2857, -75.244357}}) ^ isIntersection(candidate, {{39.2857, -75.244357}, {39.292212, -75.285333}}) ^ isIntersection(candidate, {{39.292212, -75.285333}, {39.332473, -75.326754}}) ^ isIntersection(candidate, {{39.332473, -75.326754}, {39.347823, -75.355558}}) ^ isIntersection(candidate, {{39.347823, -75.355558}, {39.37949, -75.399304}}) ^ isIntersection(candidate, {{39.37949, -75.399304}, {39.38891068671369, -75.4171070774881}}) ^ isIntersection(candidate, {{39.38891068671369, -75.4171070774881}, {39.402291, -75.442393}}) ^ isIntersection(candidate, {{39.402291, -75.442393}, {39.43893, -75.465212}}) ^ isIntersection(candidate, {{39.43893, -75.465212}, {39.460558999999996, -75.536431}}) ^ isIntersection(candidate, {{39.460558999999996, -75.536431}, {39.498114, -75.528088}}) ^ isIntersection(candidate, {{39.498114, -75.528088}, {39.479186, -75.593068}}) ^ isIntersection(candidate, {{39.479186, -75.593068}, {39.438897, -75.57182999999999}}) ^ isIntersection(candidate, {{39.438897, -75.57182999999999}, {39.387871, -75.521682}}) ^ isIntersection(candidate, {{39.387871, -75.521682}, {39.370394222582796, -75.5056428576184}}) ^ isIntersection(candidate, {{39.370394222582796, -75.5056428576184}, {39.330819999999996, -75.469324}}) ^ isIntersection(candidate, {{39.330819999999996, -75.469324}, {39.264697999999996, -75.40837599999999}}) ^ isIntersection(candidate, {{39.264697999999996, -75.40837599999999}, {39.188354, -75.39479}}) ^ isIntersection(candidate, {{39.188354, -75.39479}, {39.133706, -75.407473}}) ^ isIntersection(candidate, {{39.133706, -75.407473}, {39.057884, -75.396277}}) ^ isIntersection(candidate, {{39.057884, -75.396277}, {39.01996, -75.34089}}) ^ isIntersection(candidate, {{39.01996, -75.34089}, {38.9476601633284, -75.3066521095097}}) ^ isIntersection(candidate, {{38.9476601633284, -75.3066521095097}, {38.939001999999995, -75.30255199999999}}) ^ isIntersection(candidate, {{38.939001999999995, -75.30255199999999}, {38.91316, -75.30407799999999}}) ^ isIntersection(candidate, {{38.91316, -75.30407799999999}, {38.844254, -75.232029}}) ^ isIntersection(candidate, {{38.844254, -75.232029}, {38.790192999999995, -75.159022}}) ^ isIntersection(candidate, {{38.790192999999995, -75.159022}, {38.782998, -75.113331}}) ^ isIntersection(candidate, {{38.311524999999996, -75.102947}, {38.220475, -75.14322899999999}}) ^ isIntersection(candidate, {{38.220475, -75.14322899999999}, {38.130013999999996, -75.17739399999999}}) ^ isIntersection(candidate, {{38.130013999999996, -75.17739399999999}, {38.096013, -75.19379599999999}}) ^ isIntersection(candidate, {{38.096013, -75.19379599999999}, {38.027209, -75.242266}}) ^ isIntersection(candidate, {{38.027209, -75.242266}, {37.894985999999996, -75.338623}}) ^ isIntersection(candidate, {{37.894985999999996, -75.338623}, {37.851701999999996, -75.38063799999999}}) ^ isIntersection(candidate, {{37.851701999999996, -75.38063799999999}, {37.869335, -75.43900099999999}}) ^ isIntersection(candidate, {{37.869335, -75.43900099999999}, {37.832457, -75.48926999999999}}) ^ isIntersection(candidate, {{37.832457, -75.48926999999999}, {37.748121999999995, -75.551898}}) ^ isIntersection(candidate, {{37.748121999999995, -75.551898}, {37.663177999999995, -75.59195299999999}}) ^ isIntersection(candidate, {{37.663177999999995, -75.59195299999999}, {37.609296, -75.614527}}) ^ isIntersection(candidate, {{36.02043, -75.658537}, {35.863301, -75.569794}}) ^ isIntersection(candidate, {{35.863301, -75.569794}, {35.769087, -75.51901}}) ^ isIntersection(candidate, {{35.769087, -75.51901}, {35.728515, -75.49608599999999}}) ^ isIntersection(candidate, {{35.728515, -75.49608599999999}, {35.596596999999996, -75.458659}}) ^ isIntersection(candidate, {{35.596596999999996, -75.458659}, {35.391652, -75.48677099999999}}) ^ isIntersection(candidate, {{35.391652, -75.48677099999999}, {35.225825, -75.533627}}) ^ isIntersection(candidate, {{35.225825, -75.533627}, {35.220259999999996, -75.635493}});
                        }
                    }
                } else {
                    if (candidate.longitude < -73.466796875) {
                        if (candidate.longitude < -74.19189453125) {
                            return isIntersection(candidate, {{44.900237, -75.142958}, {44.930174, -75.066245}}) ^ isIntersection(candidate, {{44.930174, -75.066245}, {44.958402, -75.005155}}) ^ isIntersection(candidate, {{44.958402, -75.005155}, {44.977449, -74.992756}}) ^ isIntersection(candidate, {{44.977449, -74.992756}, {44.983359, -74.907956}}) ^ isIntersection(candidate, {{44.983359, -74.907956}, {45.014683, -74.83466899999999}}) ^ isIntersection(candidate, {{45.014683, -74.83466899999999}, {44.990576999999995, -74.74463999999999}}) ^ isIntersection(candidate, {{44.990576999999995, -74.74463999999999}, {44.9917926265259, -74.725813431619}}) ^ isIntersection(candidate, {{44.9917926265259, -74.725813431619}, {44.9970275604167, -74.6447393198257}}) ^ isIntersection(candidate, {{44.9970275604167, -74.6447393198257}, {44.999203, -74.611048}}) ^ isIntersection(candidate, {{44.999203, -74.611048}, {44.996176999999996, -74.436934}}) ^ isIntersection(candidate, {{44.996176999999996, -74.436934}, {44.992148, -74.23413599999999}}) ^ isIntersection(candidate, {{44.992148, -74.23413599999999}, {44.997365359239694, -74.02743141336849}}) ^ isIntersection(candidate, {{40.547602999999995, -74.112585}, {40.511728999999995, -74.199923}}) ^ isIntersection(candidate, {{40.511728999999995, -74.199923}, {40.502435999999996, -74.260611}}) ^ isIntersection(candidate, {{40.502435999999996, -74.260611}, {40.464706, -74.261889}}) ^ isIntersection(candidate, {{40.464706, -74.261889}, {40.4486624894865, -74.22465246601469}}) ^ isIntersection(candidate, {{40.4486624894865, -74.22465246601469}, {40.440706999999996, -74.206188}}) ^ isIntersection(candidate, {{40.440706999999996, -74.206188}, {40.447570999999996, -74.157094}}) ^ isIntersection(candidate, {{39.625118, -74.190974}, {39.50836979749779, -74.2910153361548}}) ^ isIntersection(candidate, {{39.50836979749779, -74.2910153361548}, {39.507705, -74.291585}}) ^ isIntersection(candidate, {{39.507705, -74.291585}, {39.471444999999996, -74.304343}}) ^ isIntersection(candidate, {{39.471444999999996, -74.304343}, {39.402017, -74.36699}}) ^ isIntersection(candidate, {{39.402017, -74.36699}, {39.360816, -74.41269199999999}}) ^ isIntersection(candidate, {{39.360816, -74.41269199999999}, {39.313815999999996, -74.52179699999999}}) ^ isIntersection(candidate, {{39.313815999999996, -74.52179699999999}, {39.3000254911844, -74.5407878555825}}) ^ isIntersection(candidate, {{39.3000254911844, -74.5407878555825}, {39.270818999999996, -74.581008}}) ^ isIntersection(candidate, {{39.270818999999996, -74.581008}, {39.212002, -74.64659499999999}}) ^ isIntersection(candidate, {{39.212002, -74.64659499999999}, {39.179801999999995, -74.67143}}) ^ isIntersection(candidate, {{39.179801999999995, -74.67143}, {39.119803999999995, -74.71434099999999}}) ^ isIntersection(candidate, {{39.119803999999995, -74.71434099999999}, {39.102937, -74.705876}}) ^ isIntersection(candidate, {{39.102937, -74.705876}, {39.023073, -74.77877699999999}}) ^ isIntersection(candidate, {{39.023073, -74.77877699999999}, {38.985948, -74.807917}}) ^ isIntersection(candidate, {{38.985948, -74.807917}, {38.94041, -74.864458}}) ^ isIntersection(candidate, {{38.94041, -74.864458}, {38.928519, -74.933571}}) ^ isIntersection(candidate, {{38.928519, -74.933571}, {38.933413, -74.967274}}) ^ isIntersection(candidate, {{38.933413, -74.967274}, {39.001262, -74.95536299999999}}) ^ isIntersection(candidate, {{39.001262, -74.95536299999999}, {39.087437, -74.90366399999999}}) ^ isIntersection(candidate, {{39.087437, -74.90366399999999}, {39.143626999999995, -74.885914}}) ^ isIntersection(candidate, {{39.143626999999995, -74.885914}, {39.174945, -74.905181}}) ^ isIntersection(candidate, {{39.174945, -74.905181}, {39.176697503518795, -74.9151558055627}}) ^ isIntersection(candidate, {{39.176697503518795, -74.9151558055627}, {39.191252999999996, -74.998002}}) ^ isIntersection(candidate, {{39.191252999999996, -74.998002}, {39.215222, -75.048487}}) ^ isIntersection(candidate, {{39.215222, -75.048487}, {39.210802, -75.090794}}) ^ isIntersection(candidate, {{39.210802, -75.090794}, {39.181883, -75.136667}}) ^ isIntersection(candidate, {{39.181883, -75.136667}, {39.222577, -75.16666699999999}}) ^ isIntersection(candidate, {{38.790192999999995, -75.159022}, {38.782998, -75.113331}}) ^ isIntersection(candidate, {{38.782998, -75.113331}, {38.797198, -75.089473}}) ^ isIntersection(candidate, {{38.797198, -75.089473}, {38.696497, -75.071805}}) ^ isIntersection(candidate, {{38.696497, -75.071805}, {38.536273, -75.053973}}) ^ isIntersection(candidate, {{38.536273, -75.053973}, {38.451263, -75.04893899999999}}) ^ isIntersection(candidate, {{38.451263, -75.04893899999999}, {38.32427, -75.085518}}) ^ isIntersection(candidate, {{38.32427, -75.085518}, {38.311524999999996, -75.102947}}) ^ isIntersection(candidate, {{38.311524999999996, -75.102947}, {38.220475, -75.14322899999999}});
                        } else {
                            return isIntersection(candidate, {{44.992148, -74.23413599999999}, {44.997365359239694, -74.02743141336849}}) ^ isIntersection(candidate, {{44.997365359239694, -74.02743141336849}, {45.001222999999996, -73.874597}}) ^ isIntersection(candidate, {{45.001222999999996, -73.874597}, {45.003464, -73.639718}}) ^ isIntersection(candidate, {{45.003464, -73.639718}, {45.010839999999995, -73.343124}}) ^ isIntersection(candidate, {{41.047562, -73.42216499999999}, {41.051347, -73.468239}}) ^ isIntersection(candidate, {{41.051347, -73.468239}, {41.038737999999995, -73.516903}}) ^ isIntersection(candidate, {{41.038737999999995, -73.516903}, {41.016797, -73.561968}}) ^ isIntersection(candidate, {{41.016797, -73.561968}, {41.015995, -73.595699}}) ^ isIntersection(candidate, {{41.015995, -73.595699}, {40.985171, -73.657336}}) ^ isIntersection(candidate, {{40.985171, -73.657336}, {40.939598, -73.697974}}) ^ isIntersection(candidate, {{40.939598, -73.697974}, {40.912599, -73.756776}}) ^ isIntersection(candidate, {{40.912599, -73.756776}, {40.881099, -73.76627599999999}}) ^ isIntersection(candidate, {{40.881099, -73.76627599999999}, {40.8758545928374, -73.7411972449486}}) ^ isIntersection(candidate, {{40.8758545928374, -73.7411972449486}, {40.870098999999996, -73.713674}}) ^ isIntersection(candidate, {{40.870098999999996, -73.713674}, {40.878198999999995, -73.654372}}) ^ isIntersection(candidate, {{40.878198999999995, -73.654372}, {40.897898, -73.617571}}) ^ isIntersection(candidate, {{40.897898, -73.617571}, {40.918166, -73.49994099999999}}) ^ isIntersection(candidate, {{40.918166, -73.49994099999999}, {40.923182273294394, -73.49735103862629}}) ^ isIntersection(candidate, {{40.923182273294394, -73.49735103862629}, {40.946397, -73.485365}}) ^ isIntersection(candidate, {{40.946397, -73.485365}, {40.934897, -73.436664}}) ^ isIntersection(candidate, {{40.6132448775595, -73.4239766175572}, {40.5987548537602, -73.48486839434709}}) ^ isIntersection(candidate, {{40.5987548537602, -73.48486839434709}, {40.593410999999996, -73.507325}}) ^ isIntersection(candidate, {{40.593410999999996, -73.507325}, {40.582823, -73.640902}}) ^ isIntersection(candidate, {{40.582823, -73.640902}, {40.5893197671277, -73.7506217216563}}) ^ isIntersection(candidate, {{40.5893197671277, -73.7506217216563}, {40.590759, -73.774928}}) ^ isIntersection(candidate, {{40.590759, -73.774928}, {40.5761495789939, -73.82549400113109}}) ^ isIntersection(candidate, {{40.5761495789939, -73.82549400113109}, {40.542896, -73.940591}}) ^ isIntersection(candidate, {{40.542896, -73.940591}, {40.5608547025179, -73.97379177024459}}) ^ isIntersection(candidate, {{40.5608547025179, -73.97379177024459}, {40.57035, -73.991346}}) ^ isIntersection(candidate, {{40.57035, -73.991346}, {40.5889884137416, -74.0365576544541}}) ^ isIntersection(candidate, {{40.5889884137416, -74.0365576544541}, {40.58957086633949, -74.0379705239158}}) ^ isIntersection(candidate, {{40.58957086633949, -74.0379705239158}, {40.597546, -74.057316}}) ^ isIntersection(candidate, {{40.597546, -74.057316}, {40.547602999999995, -74.112585}}) ^ isIntersection(candidate, {{40.547602999999995, -74.112585}, {40.511728999999995, -74.199923}}) ^ isIntersection(candidate, {{40.440706999999996, -74.206188}, {40.447570999999996, -74.157094}}) ^ isIntersection(candidate, {{40.447570999999996, -74.157094}, {40.443788, -74.108295}}) ^ isIntersection(candidate, {{40.443788, -74.108295}, {40.418907999999995, -74.047884}}) ^ isIntersection(candidate, {{40.418907999999995, -74.047884}, {40.471244, -74.019334}}) ^ isIntersection(candidate, {{40.471244, -74.019334}, {40.476668, -73.99794299999999}}) ^ isIntersection(candidate, {{40.476668, -73.99794299999999}, {40.408508, -73.97698199999999}}) ^ isIntersection(candidate, {{40.408508, -73.97698199999999}, {40.348009999999995, -73.971381}}) ^ isIntersection(candidate, {{40.348009999999995, -73.971381}, {40.279410999999996, -73.981681}}) ^ isIntersection(candidate, {{40.279410999999996, -73.981681}, {40.2169665919779, -74.0010207944346}}) ^ isIntersection(candidate, {{40.2169665919779, -74.0010207944346}, {40.122814, -74.030181}}) ^ isIntersection(candidate, {{40.122814, -74.030181}, {40.1025843059482, -74.03496238226349}}) ^ isIntersection(candidate, {{40.1025843059482, -74.03496238226349}, {39.979157, -74.064135}}) ^ isIntersection(candidate, {{39.979157, -74.064135}, {39.910990999999996, -74.077247}}) ^ isIntersection(candidate, {{39.910990999999996, -74.077247}, {39.799977999999996, -74.09094499999999}}) ^ isIntersection(candidate, {{39.799977999999996, -74.09094499999999}, {39.7637843614958, -74.09961891432519}}) ^ isIntersection(candidate, {{39.7637843614958, -74.09961891432519}, {39.756173, -74.101443}}) ^ isIntersection(candidate, {{39.756173, -74.101443}, {39.625118, -74.190974}}) ^ isIntersection(candidate, {{39.625118, -74.190974}, {39.50836979749779, -74.2910153361548}});
                        }
                    } else {
                        if (candidate.longitude < -72.587890625) {
                            return isIntersection(candidate, {{45.003464, -73.639718}, {45.010839999999995, -73.343124}}) ^ isIntersection(candidate, {{45.010839999999995, -73.343124}, {45.0128611629521, -73.1923104490669}}) ^ isIntersection(candidate, {{45.0128611629521, -73.1923104490669}, {45.0131611826235, -73.1699238166857}}) ^ isIntersection(candidate, {{45.0131611826235, -73.1699238166857}, {45.01479, -73.048386}}) ^ isIntersection(candidate, {{45.01479, -73.048386}, {45.014267, -72.93643999999999}}) ^ isIntersection(candidate, {{45.014267, -72.93643999999999}, {45.011542999999996, -72.582371}}) ^ isIntersection(candidate, {{41.250499, -72.547235}, {41.268698, -72.598036}}) ^ isIntersection(candidate, {{41.268698, -72.598036}, {41.265896999999995, -72.653838}}) ^ isIntersection(candidate, {{41.265896999999995, -72.653838}, {41.2656263083002, -72.6543540201512}}) ^ isIntersection(candidate, {{41.2656263083002, -72.6543540201512}, {41.246697, -72.690439}}) ^ isIntersection(candidate, {{41.246697, -72.690439}, {41.241234999999996, -72.760341}}) ^ isIntersection(candidate, {{41.241234999999996, -72.760341}, {41.264796, -72.786142}}) ^ isIntersection(candidate, {{41.264796, -72.786142}, {41.242596999999996, -72.881445}}) ^ isIntersection(candidate, {{41.242596999999996, -72.881445}, {41.2491941344625, -72.9039337600629}}) ^ isIntersection(candidate, {{41.2491941344625, -72.9039337600629}, {41.258497, -72.93564599999999}}) ^ isIntersection(candidate, {{41.258497, -72.93564599999999}, {41.241274308996196, -72.9705054154992}}) ^ isIntersection(candidate, {{41.241274308996196, -72.9705054154992}, {41.234191742814005, -72.9848408127547}}) ^ isIntersection(candidate, {{41.234191742814005, -72.9848408127547}, {41.233497, -72.98624699999999}}) ^ isIntersection(candidate, {{41.233497, -72.98624699999999}, {41.206396999999996, -73.020449}}) ^ isIntersection(candidate, {{41.206396999999996, -73.020449}, {41.194015, -73.07945}}) ^ isIntersection(candidate, {{41.194015, -73.07945}, {41.1637262711643, -73.10117382164451}}) ^ isIntersection(candidate, {{41.1637262711643, -73.10117382164451}, {41.153718, -73.108352}}) ^ isIntersection(candidate, {{41.153718, -73.108352}, {41.146797, -73.130253}}) ^ isIntersection(candidate, {{41.146797, -73.130253}, {41.1534422791124, -73.1728353651274}}) ^ isIntersection(candidate, {{41.1534422791124, -73.1728353651274}, {41.158096, -73.20265599999999}}) ^ isIntersection(candidate, {{41.158096, -73.20265599999999}, {41.117495999999996, -73.26235799999999}}) ^ isIntersection(candidate, {{41.117495999999996, -73.26235799999999}, {41.1166768900433, -73.2698175797685}}) ^ isIntersection(candidate, {{41.1166768900433, -73.2698175797685}, {41.113668543701195, -73.29721438934901}}) ^ isIntersection(candidate, {{41.113668543701195, -73.29721438934901}, {41.109995999999995, -73.33066}}) ^ isIntersection(candidate, {{41.109995999999995, -73.33066}, {41.10402, -73.37229599999999}}) ^ isIntersection(candidate, {{41.10402, -73.37229599999999}, {41.085639, -73.354231}}) ^ isIntersection(candidate, {{41.085639, -73.354231}, {41.058247, -73.387227}}) ^ isIntersection(candidate, {{41.058247, -73.387227}, {41.047562, -73.42216499999999}}) ^ isIntersection(candidate, {{41.047562, -73.42216499999999}, {41.051347, -73.468239}}) ^ isIntersection(candidate, {{40.946397, -73.485365}, {40.934897, -73.436664}}) ^ isIntersection(candidate, {{40.934897, -73.436664}, {40.955297, -73.392862}}) ^ isIntersection(candidate, {{40.955297, -73.392862}, {40.929597, -73.33136}}) ^ isIntersection(candidate, {{40.929597, -73.33136}, {40.9066897675323, -73.2358274066785}}) ^ isIntersection(candidate, {{40.9066897675323, -73.2358274066785}, {40.905121, -73.22928499999999}}) ^ isIntersection(candidate, {{40.905121, -73.22928499999999}, {40.928898, -73.148994}}) ^ isIntersection(candidate, {{40.928898, -73.148994}, {40.955842, -73.144673}}) ^ isIntersection(candidate, {{40.955842, -73.144673}, {40.971938, -73.110368}}) ^ isIntersection(candidate, {{40.971938, -73.110368}, {40.964498, -73.04044499999999}}) ^ isIntersection(candidate, {{40.964498, -73.04044499999999}, {40.966088, -72.859831}}) ^ isIntersection(candidate, {{40.966088, -72.859831}, {40.977851, -72.708069}}) ^ isIntersection(candidate, {{40.977851, -72.708069}, {40.997586999999996, -72.58532699999999}}) ^ isIntersection(candidate, {{40.866659999999996, -72.39585}, {40.764371, -72.757176}}) ^ isIntersection(candidate, {{40.764371, -72.757176}, {40.713282, -72.923214}}) ^ isIntersection(candidate, {{40.713282, -72.923214}, {40.679651, -73.012545}}) ^ isIntersection(candidate, {{40.679651, -73.012545}, {40.64640796810129, -73.14608086921079}}) ^ isIntersection(candidate, {{40.64640796810129, -73.14608086921079}, {40.630883999999995, -73.20844}}) ^ isIntersection(candidate, {{40.630883999999995, -73.20844}, {40.620756, -73.30639599999999}}) ^ isIntersection(candidate, {{40.620756, -73.30639599999999}, {40.630500000000005, -73.35146499999999}}) ^ isIntersection(candidate, {{40.630500000000005, -73.35146499999999}, {40.6132448775595, -73.4239766175572}}) ^ isIntersection(candidate, {{40.6132448775595, -73.4239766175572}, {40.5987548537602, -73.48486839434709}});
                        } else {
                            return isIntersection(candidate, {{41.274114, -72.018926}, {41.290122, -71.926802}}) ^ isIntersection(candidate, {{41.290122, -71.926802}, {41.251332999999995, -71.917281}}) ^ isIntersection(candidate, {{41.251332999999995, -71.917281}, {41.234818, -72.03475399999999}}) ^ isIntersection(candidate, {{41.234818, -72.03475399999999}, {41.274114, -72.018926}}) ^ isIntersection(candidate, {{45.014267, -72.93643999999999}, {45.011542999999996, -72.582371}}) ^ isIntersection(candidate, {{45.011542999999996, -72.582371}, {45.009467720653504, -72.5542716162235}}) ^ isIntersection(candidate, {{45.009467720653504, -72.5542716162235}, {45.00786, -72.53250299999999}}) ^ isIntersection(candidate, {{45.00786, -72.53250299999999}, {45.005624999999995, -72.34858299999999}}) ^ isIntersection(candidate, {{45.005624999999995, -72.34858299999999}, {45.006792, -72.023292}}) ^ isIntersection(candidate, {{45.006792, -72.023292}, {45.007791, -71.915009}}) ^ isIntersection(candidate, {{45.007791, -71.915009}, {45.008072273836696, -71.8977115118588}}) ^ isIntersection(candidate, {{45.008072273836696, -71.8977115118588}, {45.011419, -71.691898}}) ^ isIntersection(candidate, {{41.325739, -71.785957}, {41.309791, -71.86277199999999}}) ^ isIntersection(candidate, {{41.309791, -71.86277199999999}, {41.320248, -71.860513}}) ^ isIntersection(candidate, {{41.320248, -71.860513}, {41.33641, -71.886302}}) ^ isIntersection(candidate, {{41.33641, -71.886302}, {41.329871, -71.956747}}) ^ isIntersection(candidate, {{41.329871, -71.956747}, {41.316838, -72.021898}}) ^ isIntersection(candidate, {{41.316838, -72.021898}, {41.314164, -72.094443}}) ^ isIntersection(candidate, {{41.314164, -72.094443}, {41.299398, -72.134221}}) ^ isIntersection(candidate, {{41.299398, -72.134221}, {41.315697, -72.201422}}) ^ isIntersection(candidate, {{41.315697, -72.201422}, {41.300413, -72.235531}}) ^ isIntersection(candidate, {{41.300413, -72.235531}, {41.280044, -72.293044}}) ^ isIntersection(candidate, {{41.280044, -72.293044}, {41.2778492622384, -72.34001290870191}}) ^ isIntersection(candidate, {{41.2778492622384, -72.34001290870191}, {41.277446, -72.348643}}) ^ isIntersection(candidate, {{41.277446, -72.348643}, {41.261798, -72.386629}}) ^ isIntersection(candidate, {{41.261798, -72.386629}, {41.278397999999996, -72.40593}}) ^ isIntersection(candidate, {{41.278397999999996, -72.40593}, {41.270103, -72.472539}}) ^ isIntersection(candidate, {{41.270103, -72.472539}, {41.2538242743911, -72.53456489716811}}) ^ isIntersection(candidate, {{41.2538242743911, -72.53456489716811}, {41.250499, -72.547235}}) ^ isIntersection(candidate, {{41.250499, -72.547235}, {41.268698, -72.598036}}) ^ isIntersection(candidate, {{40.977851, -72.708069}, {40.997586999999996, -72.58532699999999}}) ^ isIntersection(candidate, {{40.997586999999996, -72.58532699999999}, {41.043329, -72.504305}}) ^ isIntersection(candidate, {{41.043329, -72.504305}, {41.086116, -72.445242}}) ^ isIntersection(candidate, {{41.086116, -72.445242}, {41.108304, -72.389809}}) ^ isIntersection(candidate, {{41.108304, -72.389809}, {41.139952, -72.354123}}) ^ isIntersection(candidate, {{41.139952, -72.354123}, {41.155874, -72.29110899999999}}) ^ isIntersection(candidate, {{41.155874, -72.29110899999999}, {41.193549, -72.189163}}) ^ isIntersection(candidate, {{41.193549, -72.189163}, {41.178345, -72.18203299999999}}) ^ isIntersection(candidate, {{41.178345, -72.18203299999999}, {41.110852, -72.254704}}) ^ isIntersection(candidate, {{41.110852, -72.254704}, {41.067873999999996, -72.283093}}) ^ isIntersection(candidate, {{41.067873999999996, -72.283093}, {41.040611, -72.21747599999999}}) ^ isIntersection(candidate, {{41.040611, -72.21747599999999}, {41.053187, -72.162898}}) ^ isIntersection(candidate, {{41.053187, -72.162898}, {41.115139, -72.126704}}) ^ isIntersection(candidate, {{41.115139, -72.126704}, {41.101524, -72.08420699999999}}) ^ isIntersection(candidate, {{41.101524, -72.08420699999999}, {41.05402, -72.095711}}) ^ isIntersection(candidate, {{41.05402, -72.095711}, {41.020506, -72.051928}}) ^ isIntersection(candidate, {{41.020506, -72.051928}, {41.071236999999996, -71.959595}}) ^ isIntersection(candidate, {{41.071236999999996, -71.959595}, {41.080517, -71.91938499999999}}) ^ isIntersection(candidate, {{41.080517, -71.91938499999999}, {41.070598, -71.856214}}) ^ isIntersection(candidate, {{41.070598, -71.856214}, {41.006136999999995, -71.936977}}) ^ isIntersection(candidate, {{41.006136999999995, -71.936977}, {40.95888, -72.097369}}) ^ isIntersection(candidate, {{40.95888, -72.097369}, {40.903151, -72.298727}}) ^ isIntersection(candidate, {{40.903151, -72.298727}, {40.866659999999996, -72.39585}}) ^ isIntersection(candidate, {{40.866659999999996, -72.39585}, {40.764371, -72.757176}});
                        }
                    }
                }
            } else {
                if (candidate.longitude < -70.21484375) {
                    if (candidate.longitude < -70.7421875) {
                        if (candidate.longitude < -70.9619140625) {
                            return isIntersection(candidate, {{41.166678, -71.631472}, {41.237428, -71.59334199999999}}) ^ isIntersection(candidate, {{41.237428, -71.59334199999999}, {41.24273, -71.54540999999999}}) ^ isIntersection(candidate, {{41.24273, -71.54540999999999}, {41.181861999999995, -71.534084}}) ^ isIntersection(candidate, {{41.181861999999995, -71.534084}, {41.149623999999996, -71.51921}}) ^ isIntersection(candidate, {{41.149623999999996, -71.51921}, {41.146339, -71.5937}}) ^ isIntersection(candidate, {{41.146339, -71.5937}, {41.166678, -71.631472}}) ^ isIntersection(candidate, {{45.008072273836696, -71.8977115118588}, {45.011419, -71.691898}}) ^ isIntersection(candidate, {{45.011419, -71.691898}, {45.012709, -71.60983999999999}}) ^ isIntersection(candidate, {{45.012709, -71.60983999999999}, {45.013377, -71.501088}}) ^ isIntersection(candidate, {{45.013377, -71.501088}, {45.069629, -71.49839899999999}}) ^ isIntersection(candidate, {{45.069629, -71.49839899999999}, {45.109001, -71.448678}}) ^ isIntersection(candidate, {{45.109001, -71.448678}, {45.170488, -71.41905799999999}}) ^ isIntersection(candidate, {{45.170488, -71.41905799999999}, {45.198139, -71.405636}}) ^ isIntersection(candidate, {{45.198139, -71.405636}, {45.239004, -71.438546}}) ^ isIntersection(candidate, {{45.239004, -71.438546}, {45.269835, -71.360664}}) ^ isIntersection(candidate, {{45.269835, -71.360664}, {45.301977, -71.283684}}) ^ isIntersection(candidate, {{45.301977, -71.283684}, {45.268139, -71.24449899999999}}) ^ isIntersection(candidate, {{45.268139, -71.24449899999999}, {45.241068999999996, -71.182587}}) ^ isIntersection(candidate, {{45.241068999999996, -71.182587}, {45.242957999999994, -71.13942999999999}}) ^ isIntersection(candidate, {{45.242957999999994, -71.13942999999999}, {45.282222, -71.109349}}) ^ isIntersection(candidate, {{45.282222, -71.109349}, {45.305451, -71.083924}}) ^ isIntersection(candidate, {{45.305451, -71.083924}, {45.311921999999996, -71.03820999999999}}) ^ isIntersection(candidate, {{45.311921999999996, -71.03820999999999}, {45.34476, -71.012757}}) ^ isIntersection(candidate, {{45.34476, -71.012757}, {45.331536, -70.949365}}) ^ isIntersection(candidate, {{42.4254690903917, -70.95521106146329}, {42.423995999999995, -70.98299399999999}}) ^ isIntersection(candidate, {{42.423995999999995, -70.98299399999999}, {42.420221800052, -70.9825456015879}}) ^ isIntersection(candidate, {{42.420221800052, -70.9825456015879}, {42.355843, -70.974897}}) ^ isIntersection(candidate, {{42.355843, -70.974897}, {42.354339253721896, -70.97589294212611}}) ^ isIntersection(candidate, {{42.354339253721896, -70.97589294212611}, {42.3434671949331, -70.9830935859472}}) ^ isIntersection(candidate, {{42.3434671949331, -70.9830935859472}, {42.321205, -70.997838}}) ^ isIntersection(candidate, {{42.321205, -70.997838}, {42.3128922804124, -70.9930596399482}}) ^ isIntersection(candidate, {{42.3128922804124, -70.9930596399482}, {42.268167999999996, -70.967351}}) ^ isIntersection(candidate, {{42.268167999999996, -70.967351}, {42.282354693782295, -70.9484970435343}}) ^ isIntersection(candidate, {{41.540121, -70.941785}, {41.51007, -70.981708}}) ^ isIntersection(candidate, {{41.51007, -70.981708}, {41.502159475917, -71.02032123222439}}) ^ isIntersection(candidate, {{41.502159475917, -71.02032123222439}, {41.499047, -71.03551399999999}}) ^ isIntersection(candidate, {{41.499047, -71.03551399999999}, {41.509291999999995, -71.085663}}) ^ isIntersection(candidate, {{41.509291999999995, -71.085663}, {41.497448, -71.12057}}) ^ isIntersection(candidate, {{41.497448, -71.12057}, {41.485855, -71.140224}}) ^ isIntersection(candidate, {{41.485855, -71.140224}, {41.457930999999995, -71.19301999999999}}) ^ isIntersection(candidate, {{41.457930999999995, -71.19301999999999}, {41.466601705903095, -71.21267275910739}}) ^ isIntersection(candidate, {{41.466601705903095, -71.21267275910739}, {41.4785720701705, -71.2398044238189}}) ^ isIntersection(candidate, {{41.4785720701705, -71.2398044238189}, {41.481302, -71.245992}}) ^ isIntersection(candidate, {{41.481302, -71.245992}, {41.487805, -71.285639}}) ^ isIntersection(candidate, {{41.487805, -71.285639}, {41.451402, -71.312694}}) ^ isIntersection(candidate, {{41.451402, -71.312694}, {41.450801999999996, -71.351096}}) ^ isIntersection(candidate, {{41.450801999999996, -71.351096}, {41.460605, -71.389284}}) ^ isIntersection(candidate, {{41.460605, -71.389284}, {41.45603131277439, -71.41721279148369}}) ^ isIntersection(candidate, {{41.45603131277439, -71.41721279148369}, {41.454158, -71.428652}}) ^ isIntersection(candidate, {{41.454158, -71.428652}, {41.407962, -71.455371}}) ^ isIntersection(candidate, {{41.407962, -71.455371}, {41.371722, -71.483295}}) ^ isIntersection(candidate, {{41.371722, -71.483295}, {41.373315999999996, -71.555381}}) ^ isIntersection(candidate, {{41.373315999999996, -71.555381}, {41.36087, -71.624505}}) ^ isIntersection(candidate, {{41.36087, -71.624505}, {41.336968, -71.70163099999999}}) ^ isIntersection(candidate, {{41.336968, -71.70163099999999}, {41.333284002713796, -71.7292965762004}}) ^ isIntersection(candidate, {{41.333284002713796, -71.7292965762004}, {41.325739, -71.785957}}) ^ isIntersection(candidate, {{41.325739, -71.785957}, {41.309791, -71.86277199999999}});
                        } else {
                            return isIntersection(candidate, {{41.353386, -70.83380199999999}, {41.365702, -70.757797}}) ^ isIntersection(candidate, {{41.365702, -70.757797}, {41.441334, -70.686881}}) ^ isIntersection(candidate, {{41.342833, -70.693635}, {41.303702, -70.768687}}) ^ isIntersection(candidate, {{41.303702, -70.768687}, {41.251014, -70.82128399999999}}) ^ isIntersection(candidate, {{41.251014, -70.82128399999999}, {41.316778, -70.83339699999999}}) ^ isIntersection(candidate, {{41.316778, -70.83339699999999}, {41.353386, -70.83380199999999}}) ^ isIntersection(candidate, {{45.34476, -71.012757}, {45.331536, -70.949365}}) ^ isIntersection(candidate, {{45.331536, -70.949365}, {45.296197, -70.912111}}) ^ isIntersection(candidate, {{45.296197, -70.912111}, {45.239171999999996, -70.892822}}) ^ isIntersection(candidate, {{45.239171999999996, -70.892822}, {45.234513, -70.84443}}) ^ isIntersection(candidate, {{45.234513, -70.84443}, {45.2717944023968, -70.8340195374401}}) ^ isIntersection(candidate, {{45.2717944023968, -70.8340195374401}, {45.286941, -70.82979}}) ^ isIntersection(candidate, {{45.286941, -70.82979}, {45.311606, -70.808613}}) ^ isIntersection(candidate, {{45.311606, -70.808613}, {45.341435, -70.819471}}) ^ isIntersection(candidate, {{45.341435, -70.819471}, {45.376557999999996, -70.80624399999999}}) ^ isIntersection(candidate, {{45.376557999999996, -70.80624399999999}, {45.400304999999996, -70.82561199999999}}) ^ isIntersection(candidate, {{45.400304999999996, -70.82561199999999}, {45.431159, -70.781471}}) ^ isIntersection(candidate, {{45.431159, -70.781471}, {45.428360999999995, -70.755567}}) ^ isIntersection(candidate, {{45.428360999999995, -70.755567}, {45.399359, -70.729972}}) ^ isIntersection(candidate, {{43.012201, -70.735477}, {42.975349, -70.765222}}) ^ isIntersection(candidate, {{42.975349, -70.765222}, {42.924288, -70.798636}}) ^ isIntersection(candidate, {{42.924288, -70.798636}, {42.8886107767412, -70.81143912677429}}) ^ isIntersection(candidate, {{42.8886107767412, -70.81143912677429}, {42.87229, -70.817296}}) ^ isIntersection(candidate, {{42.87229, -70.817296}, {42.781797999999995, -70.80521999999999}}) ^ isIntersection(candidate, {{42.781797999999995, -70.80521999999999}, {42.711064, -70.772267}}) ^ isIntersection(candidate, {{42.711064, -70.772267}, {42.669602, -70.72982}}) ^ isIntersection(candidate, {{42.577393, -70.698574}, {42.561595, -70.804091}}) ^ isIntersection(candidate, {{42.561595, -70.804091}, {42.550194999999995, -70.848492}}) ^ isIntersection(candidate, {{42.550194999999995, -70.848492}, {42.490496, -70.83599099999999}}) ^ isIntersection(candidate, {{42.490496, -70.83599099999999}, {42.470197, -70.886493}}) ^ isIntersection(candidate, {{42.470197, -70.886493}, {42.449915655686496, -70.8992339791018}}) ^ isIntersection(candidate, {{42.449915655686496, -70.8992339791018}, {42.439156511592195, -70.905993}}) ^ isIntersection(candidate, {{42.439156511592195, -70.905993}, {42.427696999999995, -70.913192}}) ^ isIntersection(candidate, {{42.427696999999995, -70.913192}, {42.4254690903917, -70.95521106146329}}) ^ isIntersection(candidate, {{42.4254690903917, -70.95521106146329}, {42.423995999999995, -70.98299399999999}}) ^ isIntersection(candidate, {{42.268167999999996, -70.967351}, {42.282354693782295, -70.9484970435343}}) ^ isIntersection(candidate, {{42.282354693782295, -70.9484970435343}, {42.305686, -70.91749}}) ^ isIntersection(candidate, {{42.305686, -70.91749}, {42.300663, -70.881242}}) ^ isIntersection(candidate, {{42.300663, -70.881242}, {42.26827, -70.85109299999999}}) ^ isIntersection(candidate, {{42.26827, -70.85109299999999}, {42.264763264713395, -70.83585177539439}}) ^ isIntersection(candidate, {{42.264763264713395, -70.83585177539439}, {42.25392, -70.788724}}) ^ isIntersection(candidate, {{42.25392, -70.788724}, {42.2486369460239, -70.78157454556849}}) ^ isIntersection(candidate, {{42.2486369460239, -70.78157454556849}, {42.21094, -70.73056}}) ^ isIntersection(candidate, {{41.486335, -70.734306}, {41.446338999999995, -70.79026999999999}}) ^ isIntersection(candidate, {{41.446338999999995, -70.79026999999999}, {41.425767, -70.857528}}) ^ isIntersection(candidate, {{41.425767, -70.857528}, {41.409192999999995, -70.948431}}) ^ isIntersection(candidate, {{41.409192999999995, -70.948431}, {41.454699, -70.934986}}) ^ isIntersection(candidate, {{41.454699, -70.934986}, {41.497583, -70.806861}}) ^ isIntersection(candidate, {{41.497583, -70.806861}, {41.5432369319176, -70.726088944807}}) ^ isIntersection(candidate, {{41.6140132687642, -70.7159798446688}, {41.6395180722704, -70.7617700797884}}) ^ isIntersection(candidate, {{41.6395180722704, -70.7617700797884}, {41.641574999999996, -70.765463}}) ^ isIntersection(candidate, {{41.641574999999996, -70.765463}, {41.601515541000296, -70.8039626132079}}) ^ isIntersection(candidate, {{41.601515541000296, -70.8039626132079}, {41.582840999999995, -70.82191}}) ^ isIntersection(candidate, {{41.582840999999995, -70.82191}, {41.587320999999996, -70.853121}}) ^ isIntersection(candidate, {{41.587320999999996, -70.853121}, {41.5865120924635, -70.8576236660334}}) ^ isIntersection(candidate, {{41.5865120924635, -70.8576236660334}, {41.577265805465494, -70.9090917764468}}) ^ isIntersection(candidate, {{41.577265805465494, -70.9090917764468}, {41.577073, -70.91016499999999}}) ^ isIntersection(candidate, {{41.577073, -70.91016499999999}, {41.540121, -70.941785}}) ^ isIntersection(candidate, {{41.540121, -70.941785}, {41.51007, -70.981708}});
                        }
                    } else {
                        if (candidate.longitude < -70.5499267578125) {
                            return isIntersection(candidate, {{41.365702, -70.757797}, {41.441334, -70.686881}}) ^ isIntersection(candidate, {{41.441334, -70.686881}, {41.482383999999996, -70.603555}}) ^ isIntersection(candidate, {{41.482383999999996, -70.603555}, {41.452954999999996, -70.553277}}) ^ isIntersection(candidate, {{41.452954999999996, -70.553277}, {41.424907999999995, -70.496197}}) ^ isIntersection(candidate, {{41.353651, -70.448262}, {41.349163, -70.577454}}) ^ isIntersection(candidate, {{41.349163, -70.577454}, {41.342833, -70.693635}}) ^ isIntersection(candidate, {{41.342833, -70.693635}, {41.303702, -70.768687}}) ^ isIntersection(candidate, {{45.428360999999995, -70.755567}, {45.399359, -70.729972}}) ^ isIntersection(candidate, {{45.399359, -70.729972}, {45.394362, -70.677995}}) ^ isIntersection(candidate, {{45.394362, -70.677995}, {45.383607999999995, -70.634661}}) ^ isIntersection(candidate, {{45.383607999999995, -70.634661}, {45.427817, -70.635498}}) ^ isIntersection(candidate, {{45.427817, -70.635498}, {45.452399, -70.674903}}) ^ isIntersection(candidate, {{45.452399, -70.674903}, {45.510394, -70.723396}}) ^ isIntersection(candidate, {{45.510394, -70.723396}, {45.563981, -70.688214}}) ^ isIntersection(candidate, {{45.563981, -70.688214}, {45.598147, -70.64957799999999}}) ^ isIntersection(candidate, {{45.598147, -70.64957799999999}, {45.630551, -70.591275}}) ^ isIntersection(candidate, {{45.630551, -70.591275}, {45.6678060578851, -70.55282390337851}}) ^ isIntersection(candidate, {{45.6678060578851, -70.55282390337851}, {45.667836, -70.552793}}) ^ isIntersection(candidate, {{45.667836, -70.552793}, {45.704043999999996, -70.44690299999999}}) ^ isIntersection(candidate, {{43.3339572407458, -70.5341490659506}, {43.321886, -70.553854}}) ^ isIntersection(candidate, {{43.321886, -70.553854}, {43.270112999999995, -70.585184}}) ^ isIntersection(candidate, {{43.270112999999995, -70.585184}, {43.2280191731452, -70.576986634166}}) ^ isIntersection(candidate, {{43.2280191731452, -70.576986634166}, {43.221858999999995, -70.57578699999999}}) ^ isIntersection(candidate, {{43.221858999999995, -70.57578699999999}, {43.163466, -70.59618499999999}}) ^ isIntersection(candidate, {{43.163466, -70.59618499999999}, {43.134572999999996, -70.62250999999999}}) ^ isIntersection(candidate, {{43.134572999999996, -70.62250999999999}, {43.076234, -70.665958}}) ^ isIntersection(candidate, {{43.076234, -70.665958}, {43.059825, -70.703818}}) ^ isIntersection(candidate, {{43.059825, -70.703818}, {43.012201, -70.735477}}) ^ isIntersection(candidate, {{43.012201, -70.735477}, {42.975349, -70.765222}}) ^ isIntersection(candidate, {{42.711064, -70.772267}, {42.669602, -70.72982}}) ^ isIntersection(candidate, {{42.669602, -70.72982}, {42.662341999999995, -70.68159399999999}}) ^ isIntersection(candidate, {{42.662341999999995, -70.68159399999999}, {42.689423, -70.645101}}) ^ isIntersection(candidate, {{42.689423, -70.645101}, {42.677702, -70.60250599999999}}) ^ isIntersection(candidate, {{42.677702, -70.60250599999999}, {42.63503, -70.594014}}) ^ isIntersection(candidate, {{42.63503, -70.594014}, {42.582234, -70.654727}}) ^ isIntersection(candidate, {{42.582234, -70.654727}, {42.577393, -70.698574}}) ^ isIntersection(candidate, {{42.577393, -70.698574}, {42.561595, -70.804091}}) ^ isIntersection(candidate, {{42.2486369460239, -70.78157454556849}, {42.21094, -70.73056}}) ^ isIntersection(candidate, {{42.21094, -70.73056}, {42.133024999999996, -70.685315}}) ^ isIntersection(candidate, {{42.133024999999996, -70.685315}, {42.1263494594225, -70.6792377745025}}) ^ isIntersection(candidate, {{42.1263494594225, -70.6792377745025}, {42.081579, -70.63848}}) ^ isIntersection(candidate, {{42.081579, -70.63848}, {42.045895, -70.644337}}) ^ isIntersection(candidate, {{42.045895, -70.644337}, {42.00551, -70.678798}}) ^ isIntersection(candidate, {{42.00551, -70.678798}, {41.960592, -70.662476}}) ^ isIntersection(candidate, {{41.960592, -70.662476}, {41.940701, -70.608166}}) ^ isIntersection(candidate, {{41.940701, -70.608166}, {41.950007, -70.583572}}) ^ isIntersection(candidate, {{41.950007, -70.583572}, {41.916751, -70.546386}}) ^ isIntersection(candidate, {{41.558502, -70.47625599999999}, {41.54833, -70.55968899999999}}) ^ isIntersection(candidate, {{41.54833, -70.55968899999999}, {41.519025, -70.654104}}) ^ isIntersection(candidate, {{41.519025, -70.654104}, {41.5129296626746, -70.6690583666005}}) ^ isIntersection(candidate, {{41.5129296626746, -70.6690583666005}, {41.486335, -70.734306}}) ^ isIntersection(candidate, {{41.486335, -70.734306}, {41.446338999999995, -70.79026999999999}}) ^ isIntersection(candidate, {{41.497583, -70.806861}, {41.5432369319176, -70.726088944807}}) ^ isIntersection(candidate, {{41.5432369319176, -70.726088944807}, {41.559002, -70.698197}}) ^ isIntersection(candidate, {{41.559002, -70.698197}, {41.602546, -70.695392}}) ^ isIntersection(candidate, {{41.602546, -70.695392}, {41.6140132687642, -70.7159798446688}}) ^ isIntersection(candidate, {{41.6140132687642, -70.7159798446688}, {41.6395180722704, -70.7617700797884}});
                        } else {
                            return isIntersection(candidate, {{41.310463999999996, -70.275526}, {41.313787, -70.19371199999999}}) ^ isIntersection(candidate, {{41.248765, -70.211479}, {41.310463999999996, -70.275526}}) ^ isIntersection(candidate, {{41.452954999999996, -70.553277}, {41.424907999999995, -70.496197}}) ^ isIntersection(candidate, {{41.424907999999995, -70.496197}, {41.419145, -70.463833}}) ^ isIntersection(candidate, {{41.419145, -70.463833}, {41.353651, -70.448262}}) ^ isIntersection(candidate, {{41.353651, -70.448262}, {41.349163, -70.577454}}) ^ isIntersection(candidate, {{45.667836, -70.552793}, {45.704043999999996, -70.44690299999999}}) ^ isIntersection(candidate, {{45.704043999999996, -70.44690299999999}, {45.734868999999996, -70.383552}}) ^ isIntersection(candidate, {{45.734868999999996, -70.383552}, {45.786158, -70.415684}}) ^ isIntersection(candidate, {{45.786158, -70.415684}, {45.808485999999995, -70.39662}}) ^ isIntersection(candidate, {{45.808485999999995, -70.39662}, {45.853795, -70.329748}}) ^ isIntersection(candidate, {{45.853795, -70.329748}, {45.890755, -70.259117}}) ^ isIntersection(candidate, {{45.890755, -70.259117}, {45.933175999999996, -70.252526}}) ^ isIntersection(candidate, {{45.933175999999996, -70.252526}, {45.962692, -70.26541}}) ^ isIntersection(candidate, {{45.962692, -70.26541}, {45.961856, -70.31296999999999}}) ^ isIntersection(candidate, {{45.961856, -70.31296999999999}, {45.998976, -70.303034}}) ^ isIntersection(candidate, {{45.998976, -70.303034}, {46.019079999999995, -70.317629}}) ^ isIntersection(candidate, {{46.019079999999995, -70.317629}, {46.061344, -70.30673399999999}}) ^ isIntersection(candidate, {{46.061344, -70.30673399999999}, {46.100992999999995, -70.26634899999999}}) ^ isIntersection(candidate, {{46.100992999999995, -70.26634899999999}, {46.142762, -70.239566}}) ^ isIntersection(candidate, {{46.142762, -70.239566}, {46.185838, -70.290896}}) ^ isIntersection(candidate, {{46.185838, -70.290896}, {46.246444, -70.255492}}) ^ isIntersection(candidate, {{46.246444, -70.255492}, {46.284428, -70.232682}}) ^ isIntersection(candidate, {{46.284428, -70.232682}, {46.299865, -70.205719}}) ^ isIntersection(candidate, {{43.645582, -70.190704}, {43.596717, -70.21708699999999}}) ^ isIntersection(candidate, {{43.596717, -70.21708699999999}, {43.557627, -70.20612299999999}}) ^ isIntersection(candidate, {{43.557627, -70.20612299999999}, {43.539635, -70.245499}}) ^ isIntersection(candidate, {{43.539635, -70.245499}, {43.527262, -70.321116}}) ^ isIntersection(candidate, {{43.527262, -70.321116}, {43.5281092793689, -70.3387374772484}}) ^ isIntersection(candidate, {{43.5281092793689, -70.3387374772484}, {43.52919, -70.361214}}) ^ isIntersection(candidate, {{43.52919, -70.361214}, {43.487030999999995, -70.385615}}) ^ isIntersection(candidate, {{43.487030999999995, -70.385615}, {43.458521, -70.327303}}) ^ isIntersection(candidate, {{43.458521, -70.327303}, {43.41294, -70.38398099999999}}) ^ isIntersection(candidate, {{43.41294, -70.38398099999999}, {43.361059, -70.416311}}) ^ isIntersection(candidate, {{43.361059, -70.416311}, {43.340246, -70.465975}}) ^ isIntersection(candidate, {{43.340246, -70.465975}, {43.344037, -70.517695}}) ^ isIntersection(candidate, {{43.344037, -70.517695}, {43.3339572407458, -70.5341490659506}}) ^ isIntersection(candidate, {{43.3339572407458, -70.5341490659506}, {43.321886, -70.553854}}) ^ isIntersection(candidate, {{41.950007, -70.583572}, {41.916751, -70.546386}}) ^ isIntersection(candidate, {{41.916751, -70.546386}, {41.85873, -70.525567}}) ^ isIntersection(candidate, {{41.85873, -70.525567}, {41.815754, -70.54102999999999}}) ^ isIntersection(candidate, {{41.815754, -70.54102999999999}, {41.811634145746396, -70.5364072541248}}) ^ isIntersection(candidate, {{41.811634145746396, -70.5364072541248}, {41.773883, -70.49404799999999}}) ^ isIntersection(candidate, {{41.773883, -70.49404799999999}, {41.752897999999995, -70.441718}}) ^ isIntersection(candidate, {{41.752897999999995, -70.441718}, {41.736058, -70.323819}}) ^ isIntersection(candidate, {{41.736058, -70.323819}, {41.721346, -70.272289}}) ^ isIntersection(candidate, {{41.721346, -70.272289}, {41.742981, -70.216073}}) ^ isIntersection(candidate, {{41.742981, -70.216073}, {41.758841, -70.121978}}) ^ isIntersection(candidate, {{42.020027999999996, -70.190834}, {42.063733, -70.245385}}) ^ isIntersection(candidate, {{42.063733, -70.245385}, {42.082336999999995, -70.18930499999999}}) ^ isIntersection(candidate, {{41.650438, -70.158621}, {41.617774999999995, -70.26968699999999}}) ^ isIntersection(candidate, {{41.617774999999995, -70.26968699999999}, {41.630508, -70.32158799999999}}) ^ isIntersection(candidate, {{41.630508, -70.32158799999999}, {41.606381999999996, -70.400581}}) ^ isIntersection(candidate, {{41.606381999999996, -70.400581}, {41.591815, -70.445289}}) ^ isIntersection(candidate, {{41.591815, -70.445289}, {41.558502, -70.47625599999999}}) ^ isIntersection(candidate, {{41.558502, -70.47625599999999}, {41.54833, -70.55968899999999}});
                        }
                    }
                } else {
                    if (candidate.longitude < -68.896484375) {
                        if (candidate.longitude < -69.92919921875) {
                            return isIntersection(candidate, {{41.310463999999996, -70.275526}, {41.313787, -70.19371199999999}}) ^ isIntersection(candidate, {{41.313787, -70.19371199999999}, {41.319503999999995, -70.079133}}) ^ isIntersection(candidate, {{41.319503999999995, -70.079133}, {41.391701999999995, -70.049053}}) ^ isIntersection(candidate, {{41.391701999999995, -70.049053}, {41.358818, -69.984869}}) ^ isIntersection(candidate, {{41.358818, -69.984869}, {41.264545999999996, -69.96018099999999}}) ^ isIntersection(candidate, {{41.264545999999996, -69.96018099999999}, {41.237964, -70.015225}}) ^ isIntersection(candidate, {{41.237964, -70.015225}, {41.240849999999995, -70.09696699999999}}) ^ isIntersection(candidate, {{41.240849999999995, -70.09696699999999}, {41.248765, -70.211479}}) ^ isIntersection(candidate, {{41.248765, -70.211479}, {41.310463999999996, -70.275526}}) ^ isIntersection(candidate, {{46.284428, -70.232682}, {46.299865, -70.205719}}) ^ isIntersection(candidate, {{46.299865, -70.205719}, {46.331316, -70.207415}}) ^ isIntersection(candidate, {{46.331316, -70.207415}, {46.360983999999995, -70.161337}}) ^ isIntersection(candidate, {{46.360983999999995, -70.161337}, {46.384232999999995, -70.118597}}) ^ isIntersection(candidate, {{46.384232999999995, -70.118597}, {46.410531, -70.080292}}) ^ isIntersection(candidate, {{46.410531, -70.080292}, {46.429235999999996, -70.053748}}) ^ isIntersection(candidate, {{46.429235999999996, -70.053748}, {46.573486472517295, -70.02301978705619}}) ^ isIntersection(candidate, {{46.573486472517295, -70.02301978705619}, {46.695229999999995, -69.997086}}) ^ isIntersection(candidate, {{46.695229999999995, -69.997086}, {46.875029999999995, -69.818552}}) ^ isIntersection(candidate, {{43.775112, -69.915593}, {43.744395, -69.983685}}) ^ isIntersection(candidate, {{43.744395, -69.983685}, {43.710387999999995, -70.001273}}) ^ isIntersection(candidate, {{43.710387999999995, -70.001273}, {43.713359946512796, -70.0627766602365}}) ^ isIntersection(candidate, {{43.713359946512796, -70.0627766602365}, {43.713772, -70.071304}}) ^ isIntersection(candidate, {{43.713772, -70.071304}, {43.672276, -70.09603899999999}}) ^ isIntersection(candidate, {{43.672276, -70.09603899999999}, {43.675135999999995, -70.168227}}) ^ isIntersection(candidate, {{43.675135999999995, -70.168227}, {43.645582, -70.190704}}) ^ isIntersection(candidate, {{43.645582, -70.190704}, {43.596717, -70.21708699999999}}) ^ isIntersection(candidate, {{43.596717, -70.21708699999999}, {43.557627, -70.20612299999999}}) ^ isIntersection(candidate, {{43.557627, -70.20612299999999}, {43.539635, -70.245499}}) ^ isIntersection(candidate, {{41.742981, -70.216073}, {41.758841, -70.121978}}) ^ isIntersection(candidate, {{41.758841, -70.121978}, {41.787364, -70.024734}}) ^ isIntersection(candidate, {{41.787364, -70.024734}, {41.80852, -70.00384199999999}}) ^ isIntersection(candidate, {{41.80852, -70.00384199999999}, {41.852396, -70.00611099999999}}) ^ isIntersection(candidate, {{41.852396, -70.00611099999999}, {41.884924, -70.06900999999999}}) ^ isIntersection(candidate, {{41.884924, -70.06900999999999}, {41.938649999999996, -70.074006}}) ^ isIntersection(candidate, {{41.938649999999996, -70.074006}, {41.95794245825, -70.0765739991367}}) ^ isIntersection(candidate, {{41.95794245825, -70.0765739991367}, {42.012040999999996, -70.083775}}) ^ isIntersection(candidate, {{42.012040999999996, -70.083775}, {42.026568999999995, -70.15075999999999}}) ^ isIntersection(candidate, {{42.026568999999995, -70.15075999999999}, {42.020027999999996, -70.190834}}) ^ isIntersection(candidate, {{42.020027999999996, -70.190834}, {42.063733, -70.245385}}) ^ isIntersection(candidate, {{42.063733, -70.245385}, {42.082336999999995, -70.18930499999999}}) ^ isIntersection(candidate, {{42.082336999999995, -70.18930499999999}, {42.092907, -70.138942}}) ^ isIntersection(candidate, {{42.092907, -70.138942}, {42.064689, -70.049382}}) ^ isIntersection(candidate, {{42.064689, -70.049382}, {41.999258, -69.994136}}) ^ isIntersection(candidate, {{41.999258, -69.994136}, {41.9459864602333, -69.9802313615877}}) ^ isIntersection(candidate, {{41.9459864602333, -69.9802313615877}, {41.925104999999995, -69.974781}}) ^ isIntersection(candidate, {{41.925104999999995, -69.974781}, {41.809422, -69.935952}}) ^ isIntersection(candidate, {{41.809422, -69.935952}, {41.691700000000004, -69.92826099999999}}) ^ isIntersection(candidate, {{41.691700000000004, -69.92826099999999}, {41.622659, -69.931129}}) ^ isIntersection(candidate, {{41.622659, -69.931129}, {41.55111, -69.96498199999999}}) ^ isIntersection(candidate, {{41.55111, -69.96498199999999}, {41.543931, -70.011229}}) ^ isIntersection(candidate, {{41.543931, -70.011229}, {41.619797, -70.011961}}) ^ isIntersection(candidate, {{41.619797, -70.011961}, {41.671579, -70.00701099999999}}) ^ isIntersection(candidate, {{41.671579, -70.00701099999999}, {41.664843, -70.055523}}) ^ isIntersection(candidate, {{41.664843, -70.055523}, {41.650438, -70.158621}}) ^ isIntersection(candidate, {{41.650438, -70.158621}, {41.617774999999995, -70.26968699999999}});
                        } else {
                            return isIntersection(candidate, {{43.885407, -68.92401}, {43.904714999999996, -68.87478399999999}}) ^ isIntersection(candidate, {{43.803781, -68.888483}, {43.835325999999995, -68.944433}}) ^ isIntersection(candidate, {{43.835325999999995, -68.944433}, {43.885407, -68.92401}}) ^ isIntersection(candidate, {{46.695229999999995, -69.997086}, {46.875029999999995, -69.818552}}) ^ isIntersection(candidate, {{46.875029999999995, -69.818552}, {47.125032, -69.566383}}) ^ isIntersection(candidate, {{47.125032, -69.566383}, {47.250032999999995, -69.43919799999999}}) ^ isIntersection(candidate, {{47.250032999999995, -69.43919799999999}, {47.457159, -69.219996}}) ^ isIntersection(candidate, {{47.457159, -69.219996}, {47.451035, -69.156074}}) ^ isIntersection(candidate, {{47.451035, -69.156074}, {47.435831, -69.108215}}) ^ isIntersection(candidate, {{47.435831, -69.108215}, {47.42217, -69.039301}}) ^ isIntersection(candidate, {{47.42217, -69.039301}, {47.377877999999995, -69.053885}}) ^ isIntersection(candidate, {{47.377877999999995, -69.053885}, {47.2451, -69.0402}}) ^ isIntersection(candidate, {{47.2451, -69.0402}, {47.212711999999996, -68.966433}}) ^ isIntersection(candidate, {{47.212711999999996, -68.966433}, {47.178518999999994, -68.90098499999999}}) ^ isIntersection(candidate, {{47.178518999999994, -68.90098499999999}, {47.216032999999996, -68.80353699999999}}) ^ isIntersection(candidate, {{44.025358999999995, -68.874139}, {44.077344, -68.905098}}) ^ isIntersection(candidate, {{44.077344, -68.905098}, {44.130379999999995, -68.935327}}) ^ isIntersection(candidate, {{44.130379999999995, -68.935327}, {44.159549999999996, -68.88859699999999}}) ^ isIntersection(candidate, {{44.159549999999996, -68.88859699999999}, {44.202907473937294, -68.9349764317618}}) ^ isIntersection(candidate, {{44.202907473937294, -68.9349764317618}, {44.218719, -68.95188999999999}}) ^ isIntersection(candidate, {{44.218719, -68.95188999999999}, {44.2304353141229, -69.0210745450046}}) ^ isIntersection(candidate, {{44.2304353141229, -69.0210745450046}, {44.233672999999996, -69.040193}}) ^ isIntersection(candidate, {{44.233672999999996, -69.040193}, {44.171541999999995, -69.054546}}) ^ isIntersection(candidate, {{44.171541999999995, -69.054546}, {44.129991, -69.075667}}) ^ isIntersection(candidate, {{44.129991, -69.075667}, {44.079035999999995, -69.03187799999999}}) ^ isIntersection(candidate, {{44.079035999999995, -69.03187799999999}, {44.039767999999995, -69.068112}}) ^ isIntersection(candidate, {{44.039767999999995, -69.068112}, {44.006336, -69.04391199999999}}) ^ isIntersection(candidate, {{44.006336, -69.04391199999999}, {43.973653999999996, -69.077028}}) ^ isIntersection(candidate, {{43.973653999999996, -69.077028}, {43.976088999999995, -69.131536}}) ^ isIntersection(candidate, {{43.976088999999995, -69.131536}, {43.976949, -69.17497999999999}}) ^ isIntersection(candidate, {{43.976949, -69.17497999999999}, {43.921403999999995, -69.21293899999999}}) ^ isIntersection(candidate, {{43.921403999999995, -69.21293899999999}, {43.918817999999995, -69.242812}}) ^ isIntersection(candidate, {{43.918817999999995, -69.242812}, {43.879579, -69.279918}}) ^ isIntersection(candidate, {{43.879579, -69.279918}, {43.856708, -69.32103099999999}}) ^ isIntersection(candidate, {{43.856708, -69.32103099999999}, {43.917764999999996, -69.35457699999999}}) ^ isIntersection(candidate, {{43.917764999999996, -69.35457699999999}, {43.94364023355649, -69.3804897193431}}) ^ isIntersection(candidate, {{43.94364023355649, -69.3804897193431}, {43.95642, -69.393288}}) ^ isIntersection(candidate, {{43.95642, -69.393288}, {43.923047, -69.422048}}) ^ isIntersection(candidate, {{43.923047, -69.422048}, {43.909538999999995, -69.43806599999999}}) ^ isIntersection(candidate, {{43.909538999999995, -69.43806599999999}, {43.837672999999995, -69.50328999999999}}) ^ isIntersection(candidate, {{43.837672999999995, -69.50328999999999}, {43.841347, -69.552606}}) ^ isIntersection(candidate, {{43.841347, -69.552606}, {43.823316, -69.578527}}) ^ isIntersection(candidate, {{43.823316, -69.578527}, {43.803785, -69.650818}}) ^ isIntersection(candidate, {{43.803785, -69.650818}, {43.7960549672913, -69.6958154562599}}) ^ isIntersection(candidate, {{43.7960549672913, -69.6958154562599}, {43.792403, -69.717074}}) ^ isIntersection(candidate, {{43.792403, -69.717074}, {43.743866, -69.754091}}) ^ isIntersection(candidate, {{43.743866, -69.754091}, {43.728080999999996, -69.80735899999999}}) ^ isIntersection(candidate, {{43.728080999999996, -69.80735899999999}, {43.701280999999994, -69.833471}}) ^ isIntersection(candidate, {{43.701280999999994, -69.833471}, {43.704746, -69.855081}}) ^ isIntersection(candidate, {{43.704746, -69.855081}, {43.758962, -69.862155}}) ^ isIntersection(candidate, {{43.758962, -69.862155}, {43.7665933794518, -69.88740612415769}}) ^ isIntersection(candidate, {{43.7665933794518, -69.88740612415769}, {43.775112, -69.915593}}) ^ isIntersection(candidate, {{43.775112, -69.915593}, {43.744395, -69.983685}}) ^ isIntersection(candidate, {{41.809422, -69.935952}, {41.691700000000004, -69.92826099999999}}) ^ isIntersection(candidate, {{41.691700000000004, -69.92826099999999}, {41.622659, -69.931129}});
                        }
                    } else {
                        if (candidate.longitude < -67.7978515625) {
                            return isIntersection(candidate, {{43.885407, -68.92401}, {43.904714999999996, -68.87478399999999}}) ^ isIntersection(candidate, {{43.904714999999996, -68.87478399999999}, {43.849841, -68.849009}}) ^ isIntersection(candidate, {{43.849841, -68.849009}, {43.803781, -68.888483}}) ^ isIntersection(candidate, {{43.803781, -68.888483}, {43.835325999999995, -68.944433}}) ^ isIntersection(candidate, {{47.178518999999994, -68.90098499999999}, {47.216032999999996, -68.80353699999999}}) ^ isIntersection(candidate, {{47.216032999999996, -68.80353699999999}, {47.242626, -68.675913}}) ^ isIntersection(candidate, {{47.242626, -68.675913}, {47.249418, -68.60481899999999}}) ^ isIntersection(candidate, {{47.249418, -68.60481899999999}, {47.281721, -68.588725}}) ^ isIntersection(candidate, {{47.281721, -68.588725}, {47.296636, -68.507432}}) ^ isIntersection(candidate, {{47.296636, -68.507432}, {47.286065, -68.460064}}) ^ isIntersection(candidate, {{47.286065, -68.460064}, {47.292268, -68.375615}}) ^ isIntersection(candidate, {{47.292268, -68.375615}, {47.326943, -68.384281}}) ^ isIntersection(candidate, {{47.326943, -68.384281}, {47.355605, -68.361559}}) ^ isIntersection(candidate, {{47.355605, -68.361559}, {47.353733, -68.26971}}) ^ isIntersection(candidate, {{47.353733, -68.26971}, {47.339729999999996, -68.204263}}) ^ isIntersection(candidate, {{47.339729999999996, -68.204263}, {47.314038, -68.153509}}) ^ isIntersection(candidate, {{47.314038, -68.153509}, {47.271921, -68.08289599999999}}) ^ isIntersection(candidate, {{47.271921, -68.08289599999999}, {47.217842, -67.998171}}) ^ isIntersection(candidate, {{47.217842, -67.998171}, {47.196141999999995, -67.952269}}) ^ isIntersection(candidate, {{47.196141999999995, -67.952269}, {47.118772, -67.889155}}) ^ isIntersection(candidate, {{47.118772, -67.889155}, {47.065743999999995, -67.789761}}) ^ isIntersection(candidate, {{45.917898, -67.750422}, {45.869378999999995, -67.80367799999999}}) ^ isIntersection(candidate, {{45.869378999999995, -67.80367799999999}, {45.829983, -67.763955}}) ^ isIntersection(candidate, {{45.829983, -67.763955}, {45.781624, -67.803626}}) ^ isIntersection(candidate, {{45.781624, -67.803626}, {45.731189, -67.781892}}) ^ isIntersection(candidate, {{45.731189, -67.781892}, {45.678927885463196, -67.8028942950771}}) ^ isIntersection(candidate, {{45.678927885463196, -67.8028942950771}, {45.677886, -67.803313}}) ^ isIntersection(candidate, {{45.677886, -67.803313}, {45.679372, -67.710464}}) ^ isIntersection(candidate, {{44.494779, -67.793589}, {44.46467, -67.837938}}) ^ isIntersection(candidate, {{44.46467, -67.837938}, {44.419433999999995, -67.855108}}) ^ isIntersection(candidate, {{44.419433999999995, -67.855108}, {44.394078, -67.899571}}) ^ isIntersection(candidate, {{44.394078, -67.899571}, {44.411187, -67.936531}}) ^ isIntersection(candidate, {{44.411187, -67.936531}, {44.407015790843005, -67.94384395705521}}) ^ isIntersection(candidate, {{44.407015790843005, -67.94384395705521}, {44.387034, -67.978876}}) ^ isIntersection(candidate, {{44.387034, -67.978876}, {44.390254999999996, -68.01398999999999}}) ^ isIntersection(candidate, {{44.390254999999996, -68.01398999999999}, {44.330729999999996, -68.049334}}) ^ isIntersection(candidate, {{44.330729999999996, -68.049334}, {44.364362, -68.103757}}) ^ isIntersection(candidate, {{44.364362, -68.103757}, {44.387127, -68.125624}}) ^ isIntersection(candidate, {{44.387127, -68.125624}, {44.373833, -68.189155}}) ^ isIntersection(candidate, {{44.373833, -68.189155}, {44.328396999999995, -68.173608}}) ^ isIntersection(candidate, {{44.328396999999995, -68.173608}, {44.306675, -68.191924}}) ^ isIntersection(candidate, {{44.306675, -68.191924}, {44.266918, -68.22949}}) ^ isIntersection(candidate, {{44.266918, -68.22949}, {44.225908, -68.17433}}) ^ isIntersection(candidate, {{44.225908, -68.17433}, {44.234829, -68.306519}}) ^ isIntersection(candidate, {{44.234829, -68.306519}, {44.197157, -68.31478899999999}}) ^ isIntersection(candidate, {{44.197157, -68.31478899999999}, {44.10758, -68.331032}}) ^ isIntersection(candidate, {{44.10758, -68.331032}, {44.11618, -68.438518}}) ^ isIntersection(candidate, {{44.11618, -68.438518}, {44.099722, -68.50294199999999}}) ^ isIntersection(candidate, {{44.099722, -68.50294199999999}, {44.0898523802565, -68.5314142023518}}) ^ isIntersection(candidate, {{44.0898523802565, -68.5314142023518}, {44.071588999999996, -68.584101}}) ^ isIntersection(candidate, {{44.071588999999996, -68.584101}, {44.010096999999995, -68.617085}}) ^ isIntersection(candidate, {{44.010096999999995, -68.617085}, {44.003823, -68.657031}}) ^ isIntersection(candidate, {{44.003823, -68.657031}, {44.076359, -68.669383}}) ^ isIntersection(candidate, {{44.076359, -68.669383}, {44.057753999999996, -68.77965}}) ^ isIntersection(candidate, {{44.057753999999996, -68.77965}, {44.025358999999995, -68.874139}}) ^ isIntersection(candidate, {{44.025358999999995, -68.874139}, {44.077344, -68.905098}}) ^ isIntersection(candidate, {{44.130379999999995, -68.935327}, {44.159549999999996, -68.88859699999999}}) ^ isIntersection(candidate, {{44.159549999999996, -68.88859699999999}, {44.202907473937294, -68.9349764317618}});
                        } else {
                            return isIntersection(candidate, {{47.118772, -67.889155}, {47.065743999999995, -67.789761}}) ^ isIntersection(candidate, {{47.065743999999995, -67.789761}, {46.794868, -67.789799}}) ^ isIntersection(candidate, {{46.794868, -67.789799}, {46.601794999999996, -67.788406}}) ^ isIntersection(candidate, {{46.601794999999996, -67.788406}, {46.279381, -67.78211399999999}}) ^ isIntersection(candidate, {{46.279381, -67.78211399999999}, {46.038452, -67.780438}}) ^ isIntersection(candidate, {{46.038452, -67.780438}, {45.938162999999996, -67.779984}}) ^ isIntersection(candidate, {{45.938162999999996, -67.779984}, {45.917898, -67.750422}}) ^ isIntersection(candidate, {{45.917898, -67.750422}, {45.869378999999995, -67.80367799999999}}) ^ isIntersection(candidate, {{45.869378999999995, -67.80367799999999}, {45.829983, -67.763955}}) ^ isIntersection(candidate, {{45.829983, -67.763955}, {45.781624, -67.803626}}) ^ isIntersection(candidate, {{45.781624, -67.803626}, {45.731189, -67.781892}}) ^ isIntersection(candidate, {{45.731189, -67.781892}, {45.678927885463196, -67.8028942950771}}) ^ isIntersection(candidate, {{45.677886, -67.803313}, {45.679372, -67.710464}}) ^ isIntersection(candidate, {{45.679372, -67.710464}, {45.630959, -67.675417}}) ^ isIntersection(candidate, {{45.630959, -67.675417}, {45.621409, -67.631762}}) ^ isIntersection(candidate, {{45.621409, -67.631762}, {45.595428, -67.534919}}) ^ isIntersection(candidate, {{45.595428, -67.534919}, {45.604665, -67.455406}}) ^ isIntersection(candidate, {{45.604665, -67.455406}, {45.572153, -67.42364599999999}}) ^ isIntersection(candidate, {{45.572153, -67.42364599999999}, {45.501985, -67.417417}}) ^ isIntersection(candidate, {{45.501985, -67.417417}, {45.49724, -67.476855}}) ^ isIntersection(candidate, {{45.49724, -67.476855}, {45.451955, -67.48432799999999}}) ^ isIntersection(candidate, {{45.451955, -67.48432799999999}, {45.373689999999996, -67.42724299999999}}) ^ isIntersection(candidate, {{45.373689999999996, -67.42724299999999}, {45.300379, -67.460554}}) ^ isIntersection(candidate, {{45.300379, -67.460554}, {45.268184999999995, -67.480256}}) ^ isIntersection(candidate, {{45.268184999999995, -67.480256}, {45.241127, -67.453473}}) ^ isIntersection(candidate, {{45.241127, -67.453473}, {45.154114, -67.390579}}) ^ isIntersection(candidate, {{45.154114, -67.390579}, {45.125594, -67.339869}}) ^ isIntersection(candidate, {{45.125594, -67.339869}, {45.146671999999995, -67.298209}}) ^ isIntersection(candidate, {{45.146671999999995, -67.298209}, {45.191081, -67.271076}}) ^ isIntersection(candidate, {{45.191081, -67.271076}, {45.171406999999995, -67.20393299999999}}) ^ isIntersection(candidate, {{45.171406999999995, -67.20393299999999}, {45.162879, -67.161247}}) ^ isIntersection(candidate, {{45.162879, -67.161247}, {45.112322999999996, -67.112414}}) ^ isIntersection(candidate, {{45.112322999999996, -67.112414}, {45.068721, -67.090786}}) ^ isIntersection(candidate, {{45.068721, -67.090786}, {45.029607999999996, -67.08207399999999}}) ^ isIntersection(candidate, {{45.029607999999996, -67.08207399999999}, {44.939923, -67.033474}}) ^ isIntersection(candidate, {{44.939923, -67.033474}, {44.903276999999996, -66.983558}}) ^ isIntersection(candidate, {{44.903276999999996, -66.983558}, {44.849181, -66.99296}}) ^ isIntersection(candidate, {{44.849181, -66.99296}, {44.817419, -66.949895}}) ^ isIntersection(candidate, {{44.817419, -66.949895}, {44.768198999999996, -67.02615}}) ^ isIntersection(candidate, {{44.768198999999996, -67.02615}, {44.741957, -67.073439}}) ^ isIntersection(candidate, {{44.741957, -67.073439}, {44.706106, -67.116745}}) ^ isIntersection(candidate, {{44.706106, -67.116745}, {44.662105, -67.169857}}) ^ isIntersection(candidate, {{44.662105, -67.169857}, {44.637201, -67.234275}}) ^ isIntersection(candidate, {{44.637201, -67.234275}, {44.599264999999995, -67.293403}}) ^ isIntersection(candidate, {{44.599264999999995, -67.293403}, {44.624672, -67.368269}}) ^ isIntersection(candidate, {{44.624672, -67.368269}, {44.602630999999995, -67.39898699999999}}) ^ isIntersection(candidate, {{44.602630999999995, -67.39898699999999}, {44.600322, -67.44851299999999}}) ^ isIntersection(candidate, {{44.600322, -67.44851299999999}, {44.556123, -67.491751}}) ^ isIntersection(candidate, {{44.556123, -67.491751}, {44.50991, -67.521168}}) ^ isIntersection(candidate, {{44.50991, -67.521168}, {44.476918, -67.503208}}) ^ isIntersection(candidate, {{44.476918, -67.503208}, {44.429131, -67.579726}}) ^ isIntersection(candidate, {{44.429131, -67.579726}, {44.487054, -67.634806}}) ^ isIntersection(candidate, {{44.487054, -67.634806}, {44.525822999999995, -67.653123}}) ^ isIntersection(candidate, {{44.525822999999995, -67.653123}, {44.501974999999995, -67.70667999999999}}) ^ isIntersection(candidate, {{44.501974999999995, -67.70667999999999}, {44.494779, -67.793589}}) ^ isIntersection(candidate, {{44.494779, -67.793589}, {44.46467, -67.837938}});
                        }
                    }
                }
            }
        }
    }
}
